<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="613.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="613.00"> </text><svg id="frames" x="10" width="1180"><g><title>__GI___ctype_init (1 samples, 0.02%)</title><rect x="0.4274%" y="517" width="0.0204%" height="15" fill="rgb(227,0,7)"/><text x="0.6774%" y="527.50"></text></g><g><title>__GI___clone (23 samples, 0.47%)</title><rect x="0.0000%" y="549" width="0.4681%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="559.50"></text></g><g><title>start_thread (3 samples, 0.06%)</title><rect x="0.4071%" y="533" width="0.0611%" height="15" fill="rgb(221,193,54)"/><text x="0.6571%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.02%)</title><rect x="0.4478%" y="517" width="0.0204%" height="15" fill="rgb(248,212,6)"/><text x="0.6978%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.02%)</title><rect x="0.4478%" y="501" width="0.0204%" height="15" fill="rgb(208,68,35)"/><text x="0.6978%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1 samples, 0.02%)</title><rect x="0.4478%" y="485" width="0.0204%" height="15" fill="rgb(232,128,0)"/><text x="0.6978%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.02%)</title><rect x="0.4478%" y="469" width="0.0204%" height="15" fill="rgb(207,160,47)"/><text x="0.6978%" y="479.50"></text></g><g><title>__GI___prctl (1 samples, 0.02%)</title><rect x="0.4478%" y="453" width="0.0204%" height="15" fill="rgb(228,23,34)"/><text x="0.6978%" y="463.50"></text></g><g><title>tcp_zero_copy-5 (29 samples, 0.59%)</title><rect x="0.0000%" y="565" width="0.5903%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="575.50"></text></g><g><title>_start (6 samples, 0.12%)</title><rect x="0.4681%" y="549" width="0.1221%" height="15" fill="rgb(220,122,19)"/><text x="0.7181%" y="559.50"></text></g><g><title>_dl_start (1 samples, 0.02%)</title><rect x="0.5699%" y="533" width="0.0204%" height="15" fill="rgb(250,228,42)"/><text x="0.8199%" y="543.50"></text></g><g><title>_dl_sysdep_start (1 samples, 0.02%)</title><rect x="0.5699%" y="517" width="0.0204%" height="15" fill="rgb(240,193,28)"/><text x="0.8199%" y="527.50"></text></g><g><title>init_cpu_features.constprop.0 (1 samples, 0.02%)</title><rect x="0.5699%" y="501" width="0.0204%" height="15" fill="rgb(216,20,37)"/><text x="0.8199%" y="511.50"></text></g><g><title>get_common_cache_info (1 samples, 0.02%)</title><rect x="0.5699%" y="485" width="0.0204%" height="15" fill="rgb(206,188,39)"/><text x="0.8199%" y="495.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.02%)</title><rect x="0.5903%" y="453" width="0.0204%" height="15" fill="rgb(217,207,13)"/><text x="0.8403%" y="463.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.02%)</title><rect x="0.5903%" y="437" width="0.0204%" height="15" fill="rgb(231,73,38)"/><text x="0.8403%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.5903%" y="421" width="0.0204%" height="15" fill="rgb(225,20,46)"/><text x="0.8403%" y="431.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.02%)</title><rect x="0.5903%" y="405" width="0.0204%" height="15" fill="rgb(210,31,41)"/><text x="0.8403%" y="415.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.02%)</title><rect x="0.5903%" y="389" width="0.0204%" height="15" fill="rgb(221,200,47)"/><text x="0.8403%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="0.6106%" y="405" width="0.0204%" height="15" fill="rgb(226,26,5)"/><text x="0.8606%" y="415.50"></text></g><g><title>glommio::executor::LocalExecutor::new (6 samples, 0.12%)</title><rect x="0.6106%" y="421" width="0.1221%" height="15" fill="rgb(249,33,26)"/><text x="0.8606%" y="431.50"></text></g><g><title>glommio::sys::uring::SleepableRing::new (5 samples, 0.10%)</title><rect x="0.6310%" y="405" width="0.1018%" height="15" fill="rgb(235,183,28)"/><text x="0.8810%" y="415.50"></text></g><g><title>io_uring_queue_init_params (5 samples, 0.10%)</title><rect x="0.6310%" y="389" width="0.1018%" height="15" fill="rgb(221,5,38)"/><text x="0.8810%" y="399.50"></text></g><g><title>__sys_io_uring_setup (5 samples, 0.10%)</title><rect x="0.6310%" y="373" width="0.1018%" height="15" fill="rgb(247,18,42)"/><text x="0.8810%" y="383.50"></text></g><g><title>syscall (5 samples, 0.10%)</title><rect x="0.6310%" y="357" width="0.1018%" height="15" fill="rgb(241,131,45)"/><text x="0.8810%" y="367.50"></text></g><g><title>unnamed-1 (8 samples, 0.16%)</title><rect x="0.5903%" y="565" width="0.1628%" height="15" fill="rgb(249,31,29)"/><text x="0.8403%" y="575.50"></text></g><g><title>__GI___clone (8 samples, 0.16%)</title><rect x="0.5903%" y="549" width="0.1628%" height="15" fill="rgb(225,111,53)"/><text x="0.8403%" y="559.50"></text></g><g><title>start_thread (8 samples, 0.16%)</title><rect x="0.5903%" y="533" width="0.1628%" height="15" fill="rgb(238,160,17)"/><text x="0.8403%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (8 samples, 0.16%)</title><rect x="0.5903%" y="517" width="0.1628%" height="15" fill="rgb(214,148,48)"/><text x="0.8403%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (8 samples, 0.16%)</title><rect x="0.5903%" y="501" width="0.1628%" height="15" fill="rgb(232,36,49)"/><text x="0.8403%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (8 samples, 0.16%)</title><rect x="0.5903%" y="485" width="0.1628%" height="15" fill="rgb(209,103,24)"/><text x="0.8403%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (8 samples, 0.16%)</title><rect x="0.5903%" y="469" width="0.1628%" height="15" fill="rgb(229,88,8)"/><text x="0.8403%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.14%)</title><rect x="0.6106%" y="453" width="0.1425%" height="15" fill="rgb(213,181,19)"/><text x="0.8606%" y="463.50"></text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::{{closure}} (7 samples, 0.14%)</title><rect x="0.6106%" y="437" width="0.1425%" height="15" fill="rgb(254,191,54)"/><text x="0.8606%" y="447.50"></text></g><g><title>glommio::executor::LocalExecutor::run (1 samples, 0.02%)</title><rect x="0.7327%" y="421" width="0.0204%" height="15" fill="rgb(241,83,37)"/><text x="0.9827%" y="431.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="0.7327%" y="405" width="0.0204%" height="15" fill="rgb(233,36,39)"/><text x="0.9827%" y="415.50"></text></g><g><title>glommio::executor::LocalExecutor::run::{{closure}} (1 samples, 0.02%)</title><rect x="0.7327%" y="389" width="0.0204%" height="15" fill="rgb(226,3,54)"/><text x="0.9827%" y="399.50"></text></g><g><title>glommio::parking::Parker::park (1 samples, 0.02%)</title><rect x="0.7327%" y="373" width="0.0204%" height="15" fill="rgb(245,192,40)"/><text x="0.9827%" y="383.50"></text></g><g><title>glommio::parking::Inner::park (1 samples, 0.02%)</title><rect x="0.7327%" y="357" width="0.0204%" height="15" fill="rgb(238,167,29)"/><text x="0.9827%" y="367.50"></text></g><g><title>__pthread_getattr_np (5 samples, 0.10%)</title><rect x="0.7938%" y="437" width="0.1018%" height="15" fill="rgb(232,182,51)"/><text x="1.0438%" y="447.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.10%)</title><rect x="0.7938%" y="421" width="0.1018%" height="15" fill="rgb(231,60,39)"/><text x="1.0438%" y="431.50"></text></g><g><title>tcache_init.part.0 (5 samples, 0.10%)</title><rect x="0.7938%" y="405" width="0.1018%" height="15" fill="rgb(208,69,12)"/><text x="1.0438%" y="415.50"></text></g><g><title>arena_get2.part.0 (5 samples, 0.10%)</title><rect x="0.7938%" y="389" width="0.1018%" height="15" fill="rgb(235,93,37)"/><text x="1.0438%" y="399.50"></text></g><g><title>new_heap (5 samples, 0.10%)</title><rect x="0.7938%" y="373" width="0.1018%" height="15" fill="rgb(213,116,39)"/><text x="1.0438%" y="383.50"></text></g><g><title>__GI___mprotect (5 samples, 0.10%)</title><rect x="0.7938%" y="357" width="0.1018%" height="15" fill="rgb(222,207,29)"/><text x="1.0438%" y="367.50"></text></g><g><title>std::sys::unix::thread::guard::current (7 samples, 0.14%)</title><rect x="0.7735%" y="453" width="0.1425%" height="15" fill="rgb(206,96,30)"/><text x="1.0235%" y="463.50"></text></g><g><title>pthread_self (1 samples, 0.02%)</title><rect x="0.8956%" y="437" width="0.0204%" height="15" fill="rgb(218,138,4)"/><text x="1.1456%" y="447.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="0.9159%" y="405" width="0.0204%" height="15" fill="rgb(250,191,14)"/><text x="1.1659%" y="415.50"></text></g><g><title>glommio::sys::uring::SleepableRing::new (4 samples, 0.08%)</title><rect x="0.9363%" y="405" width="0.0814%" height="15" fill="rgb(239,60,40)"/><text x="1.1863%" y="415.50"></text></g><g><title>io_uring_queue_init_params (4 samples, 0.08%)</title><rect x="0.9363%" y="389" width="0.0814%" height="15" fill="rgb(206,27,48)"/><text x="1.1863%" y="399.50"></text></g><g><title>__sys_io_uring_setup (4 samples, 0.08%)</title><rect x="0.9363%" y="373" width="0.0814%" height="15" fill="rgb(225,35,8)"/><text x="1.1863%" y="383.50"></text></g><g><title>syscall (4 samples, 0.08%)</title><rect x="0.9363%" y="357" width="0.0814%" height="15" fill="rgb(250,213,24)"/><text x="1.1863%" y="367.50"></text></g><g><title>__GI___clone (17 samples, 0.35%)</title><rect x="0.7735%" y="549" width="0.3460%" height="15" fill="rgb(247,123,22)"/><text x="1.0235%" y="559.50"></text></g><g><title>start_thread (17 samples, 0.35%)</title><rect x="0.7735%" y="533" width="0.3460%" height="15" fill="rgb(231,138,38)"/><text x="1.0235%" y="543.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.35%)</title><rect x="0.7735%" y="517" width="0.3460%" height="15" fill="rgb(231,145,46)"/><text x="1.0235%" y="527.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (17 samples, 0.35%)</title><rect x="0.7735%" y="501" width="0.3460%" height="15" fill="rgb(251,118,11)"/><text x="1.0235%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (17 samples, 0.35%)</title><rect x="0.7735%" y="485" width="0.3460%" height="15" fill="rgb(217,147,25)"/><text x="1.0235%" y="495.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (17 samples, 0.35%)</title><rect x="0.7735%" y="469" width="0.3460%" height="15" fill="rgb(247,81,37)"/><text x="1.0235%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.20%)</title><rect x="0.9159%" y="453" width="0.2035%" height="15" fill="rgb(209,12,38)"/><text x="1.1659%" y="463.50"></text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::{{closure}} (10 samples, 0.20%)</title><rect x="0.9159%" y="437" width="0.2035%" height="15" fill="rgb(227,1,9)"/><text x="1.1659%" y="447.50"></text></g><g><title>glommio::executor::LocalExecutor::new (10 samples, 0.20%)</title><rect x="0.9159%" y="421" width="0.2035%" height="15" fill="rgb(248,47,43)"/><text x="1.1659%" y="431.50"></text></g><g><title>io_uring_register_buffers (5 samples, 0.10%)</title><rect x="1.0177%" y="405" width="0.1018%" height="15" fill="rgb(221,10,30)"/><text x="1.2677%" y="415.50"></text></g><g><title>__sys_io_uring_register (5 samples, 0.10%)</title><rect x="1.0177%" y="389" width="0.1018%" height="15" fill="rgb(210,229,1)"/><text x="1.2677%" y="399.50"></text></g><g><title>syscall (5 samples, 0.10%)</title><rect x="1.0177%" y="373" width="0.1018%" height="15" fill="rgb(222,148,37)"/><text x="1.2677%" y="383.50"></text></g><g><title>unnamed-2 (19 samples, 0.39%)</title><rect x="0.7531%" y="565" width="0.3867%" height="15" fill="rgb(234,67,33)"/><text x="1.0031%" y="575.50"></text></g><g><title>glommio::sys::uring::SleepableRing::new (1 samples, 0.02%)</title><rect x="1.1195%" y="549" width="0.0204%" height="15" fill="rgb(247,98,35)"/><text x="1.3695%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.45%)</title><rect x="1.1398%" y="549" width="0.4478%" height="15" fill="rgb(247,138,52)"/><text x="1.3898%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (2 samples, 0.04%)</title><rect x="1.5876%" y="549" width="0.0407%" height="15" fill="rgb(213,79,30)"/><text x="1.8376%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (6 samples, 0.12%)</title><rect x="1.6283%" y="549" width="0.1221%" height="15" fill="rgb(246,177,23)"/><text x="1.8783%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (2 samples, 0.04%)</title><rect x="1.7505%" y="549" width="0.0407%" height="15" fill="rgb(230,62,27)"/><text x="2.0005%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="1.7912%" y="533" width="0.1018%" height="15" fill="rgb(216,154,8)"/><text x="2.0412%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.31%)</title><rect x="1.8929%" y="533" width="0.3053%" height="15" fill="rgb(244,35,45)"/><text x="2.1429%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="2.5239%" y="501" width="0.0204%" height="15" fill="rgb(251,115,12)"/><text x="2.7739%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="2.5239%" y="485" width="0.0204%" height="15" fill="rgb(240,54,50)"/><text x="2.7739%" y="495.50"></text></g><g><title>glommio::net::tcp_socket::TcpStream::read_zc::{{closure}} (3 samples, 0.06%)</title><rect x="2.5036%" y="517" width="0.0611%" height="15" fill="rgb(233,84,52)"/><text x="2.7536%" y="527.50"></text></g><g><title>glommio::parking::Reactor::rushed_recv (1 samples, 0.02%)</title><rect x="2.5443%" y="501" width="0.0204%" height="15" fill="rgb(207,117,47)"/><text x="2.7943%" y="511.50"></text></g><g><title>glommio::parking::Reactor::new_source (1 samples, 0.02%)</title><rect x="2.5443%" y="485" width="0.0204%" height="15" fill="rgb(249,43,39)"/><text x="2.7943%" y="495.50"></text></g><g><title>glommio::sys::Source::new (1 samples, 0.02%)</title><rect x="2.5443%" y="469" width="0.0204%" height="15" fill="rgb(209,38,44)"/><text x="2.7943%" y="479.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="2.5443%" y="453" width="0.0204%" height="15" fill="rgb(236,212,23)"/><text x="2.7943%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="2.5443%" y="437" width="0.0204%" height="15" fill="rgb(242,79,21)"/><text x="2.7943%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (1 samples, 0.02%)</title><rect x="2.5443%" y="421" width="0.0204%" height="15" fill="rgb(211,96,35)"/><text x="2.7943%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="2.5443%" y="405" width="0.0204%" height="15" fill="rgb(253,215,40)"/><text x="2.7943%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="2.5443%" y="389" width="0.0204%" height="15" fill="rgb(211,81,21)"/><text x="2.7943%" y="399.50"></text></g><g><title>__rdl_alloc (1 samples, 0.02%)</title><rect x="2.5443%" y="373" width="0.0204%" height="15" fill="rgb(208,190,38)"/><text x="2.7943%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.02%)</title><rect x="2.5443%" y="357" width="0.0204%" height="15" fill="rgb(235,213,38)"/><text x="2.7943%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.08%)</title><rect x="2.5850%" y="501" width="0.0814%" height="15" fill="rgb(237,122,38)"/><text x="2.8350%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="2.6460%" y="485" width="0.0204%" height="15" fill="rgb(244,218,35)"/><text x="2.8960%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.49%)</title><rect x="2.1982%" y="533" width="0.4885%" height="15" fill="rgb(240,68,47)"/><text x="2.4482%" y="543.50"></text></g><g><title>glommio::net::tcp_socket::TcpStream::write_zc::{{closure}} (6 samples, 0.12%)</title><rect x="2.5646%" y="517" width="0.1221%" height="15" fill="rgb(210,16,53)"/><text x="2.8146%" y="527.50"></text></g><g><title>glommio::parking::Reactor::rushed_send_dma (1 samples, 0.02%)</title><rect x="2.6664%" y="501" width="0.0204%" height="15" fill="rgb(235,124,12)"/><text x="2.9164%" y="511.50"></text></g><g><title>glommio::sys::uring::Reactor::send_dma (1 samples, 0.02%)</title><rect x="2.6664%" y="485" width="0.0204%" height="15" fill="rgb(224,169,11)"/><text x="2.9164%" y="495.50"></text></g><g><title>glommio::sys::uring::Reactor::queue_standard_request (1 samples, 0.02%)</title><rect x="2.6664%" y="469" width="0.0204%" height="15" fill="rgb(250,166,2)"/><text x="2.9164%" y="479.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (6 samples, 0.12%)</title><rect x="2.6867%" y="533" width="0.1221%" height="15" fill="rgb(242,216,29)"/><text x="2.9367%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (8 samples, 0.16%)</title><rect x="2.8089%" y="533" width="0.1628%" height="15" fill="rgb(230,116,27)"/><text x="3.0589%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (24 samples, 0.49%)</title><rect x="2.9717%" y="533" width="0.4885%" height="15" fill="rgb(228,99,48)"/><text x="3.2217%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (18 samples, 0.37%)</title><rect x="3.4602%" y="533" width="0.3664%" height="15" fill="rgb(253,11,6)"/><text x="3.7102%" y="543.50"></text></g><g><title>__GI___libc_free (6 samples, 0.12%)</title><rect x="3.8266%" y="533" width="0.1221%" height="15" fill="rgb(247,143,39)"/><text x="4.0766%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="3.9487%" y="533" width="0.0204%" height="15" fill="rgb(236,97,10)"/><text x="4.1987%" y="543.50"></text></g><g><title>__clock_gettime_2 (8 samples, 0.16%)</title><rect x="3.9691%" y="533" width="0.1628%" height="15" fill="rgb(233,208,19)"/><text x="4.2191%" y="543.50"></text></g><g><title>__io_uring_flush_sq (1 samples, 0.02%)</title><rect x="4.1319%" y="533" width="0.0204%" height="15" fill="rgb(216,164,2)"/><text x="4.3819%" y="543.50"></text></g><g><title>__sys_io_uring_enter2 (6 samples, 0.12%)</title><rect x="4.1522%" y="533" width="0.1221%" height="15" fill="rgb(220,129,5)"/><text x="4.4022%" y="543.50"></text></g><g><title>_int_free (5 samples, 0.10%)</title><rect x="4.2744%" y="533" width="0.1018%" height="15" fill="rgb(242,17,10)"/><text x="4.5244%" y="543.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::free (5 samples, 0.10%)</title><rect x="4.3761%" y="533" width="0.1018%" height="15" fill="rgb(242,107,0)"/><text x="4.6261%" y="543.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::find_k_for_p (4 samples, 0.08%)</title><rect x="4.3965%" y="517" width="0.0814%" height="15" fill="rgb(251,28,31)"/><text x="4.6465%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (17 samples, 0.35%)</title><rect x="4.4779%" y="533" width="0.3460%" height="15" fill="rgb(233,223,10)"/><text x="4.7279%" y="543.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (2 samples, 0.04%)</title><rect x="4.8239%" y="533" width="0.0407%" height="15" fill="rgb(215,21,27)"/><text x="5.0739%" y="543.50"></text></g><g><title>glommio::multitask::LocalExecutor::spawn::{{closure}} (21 samples, 0.43%)</title><rect x="4.8646%" y="533" width="0.4274%" height="15" fill="rgb(232,23,21)"/><text x="5.1146%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.16%)</title><rect x="5.3124%" y="517" width="0.1628%" height="15" fill="rgb(244,5,23)"/><text x="5.5624%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.16%)</title><rect x="5.3124%" y="501" width="0.1628%" height="15" fill="rgb(226,81,46)"/><text x="5.5624%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.16%)</title><rect x="5.3124%" y="485" width="0.1628%" height="15" fill="rgb(247,70,30)"/><text x="5.5624%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (10 samples, 0.20%)</title><rect x="5.4753%" y="501" width="0.2035%" height="15" fill="rgb(212,68,19)"/><text x="5.7253%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (10 samples, 0.20%)</title><rect x="5.4753%" y="485" width="0.2035%" height="15" fill="rgb(240,187,13)"/><text x="5.7253%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.20%)</title><rect x="5.4753%" y="469" width="0.2035%" height="15" fill="rgb(223,113,26)"/><text x="5.7253%" y="479.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (20 samples, 0.41%)</title><rect x="5.2921%" y="533" width="0.4071%" height="15" fill="rgb(206,192,2)"/><text x="5.5421%" y="543.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (11 samples, 0.22%)</title><rect x="5.4753%" y="517" width="0.2239%" height="15" fill="rgb(241,108,4)"/><text x="5.7253%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="5.6788%" y="501" width="0.0204%" height="15" fill="rgb(247,173,49)"/><text x="5.9288%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="5.8213%" y="501" width="0.0204%" height="15" fill="rgb(224,114,35)"/><text x="6.0713%" y="511.50"></text></g><g><title>glommio::parking::Reactor::process_timers (9 samples, 0.18%)</title><rect x="5.6992%" y="533" width="0.1832%" height="15" fill="rgb(245,159,27)"/><text x="5.9492%" y="543.50"></text></g><g><title>glommio::parking::Timers::process_timers (3 samples, 0.06%)</title><rect x="5.8213%" y="517" width="0.0611%" height="15" fill="rgb(245,172,44)"/><text x="6.0713%" y="527.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.04%)</title><rect x="5.8416%" y="501" width="0.0407%" height="15" fill="rgb(236,23,11)"/><text x="6.0916%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.04%)</title><rect x="5.8416%" y="485" width="0.0407%" height="15" fill="rgb(205,117,38)"/><text x="6.0916%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.04%)</title><rect x="5.8416%" y="469" width="0.0407%" height="15" fill="rgb(237,72,25)"/><text x="6.0916%" y="479.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="5.9841%" y="517" width="0.0407%" height="15" fill="rgb(244,70,9)"/><text x="6.2341%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="5.9841%" y="501" width="0.0407%" height="15" fill="rgb(217,125,39)"/><text x="6.2341%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="5.9841%" y="485" width="0.0407%" height="15" fill="rgb(235,36,10)"/><text x="6.2341%" y="495.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (8 samples, 0.16%)</title><rect x="5.8824%" y="533" width="0.1628%" height="15" fill="rgb(251,123,47)"/><text x="6.1324%" y="543.50"></text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (1 samples, 0.02%)</title><rect x="6.0248%" y="517" width="0.0204%" height="15" fill="rgb(221,13,13)"/><text x="6.2748%" y="527.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (10 samples, 0.20%)</title><rect x="6.0452%" y="533" width="0.2035%" height="15" fill="rgb(238,131,9)"/><text x="6.2952%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::take (6 samples, 0.12%)</title><rect x="6.1266%" y="517" width="0.1221%" height="15" fill="rgb(211,50,8)"/><text x="6.3766%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.12%)</title><rect x="6.1266%" y="501" width="0.1221%" height="15" fill="rgb(245,182,24)"/><text x="6.3766%" y="511.50"></text></g><g><title>core::mem::replace (6 samples, 0.12%)</title><rect x="6.1266%" y="485" width="0.1221%" height="15" fill="rgb(242,14,37)"/><text x="6.3766%" y="495.50"></text></g><g><title>core::mem::swap (6 samples, 0.12%)</title><rect x="6.1266%" y="469" width="0.1221%" height="15" fill="rgb(246,228,12)"/><text x="6.3766%" y="479.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.12%)</title><rect x="6.1266%" y="453" width="0.1221%" height="15" fill="rgb(213,55,15)"/><text x="6.3766%" y="463.50"></text></g><g><title>core::ptr::read (6 samples, 0.12%)</title><rect x="6.1266%" y="437" width="0.1221%" height="15" fill="rgb(209,9,3)"/><text x="6.3766%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.12%)</title><rect x="6.1266%" y="421" width="0.1221%" height="15" fill="rgb(230,59,30)"/><text x="6.3766%" y="431.50"></text></g><g><title>glommio::sys::uring::Reactor::simple_poll (3 samples, 0.06%)</title><rect x="6.2487%" y="533" width="0.0611%" height="15" fill="rgb(209,121,21)"/><text x="6.4987%" y="543.50"></text></g><g><title>glommio::sys::uring::SleepableRing::arm_timer (8 samples, 0.16%)</title><rect x="6.3098%" y="533" width="0.1628%" height="15" fill="rgb(220,109,13)"/><text x="6.5598%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (8 samples, 0.16%)</title><rect x="6.4726%" y="533" width="0.1628%" height="15" fill="rgb(232,18,1)"/><text x="6.7226%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (2 samples, 0.04%)</title><rect x="6.6355%" y="533" width="0.0407%" height="15" fill="rgb(215,41,42)"/><text x="6.8855%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (11 samples, 0.22%)</title><rect x="6.6762%" y="533" width="0.2239%" height="15" fill="rgb(224,123,36)"/><text x="6.9262%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (13 samples, 0.26%)</title><rect x="6.9001%" y="533" width="0.2646%" height="15" fill="rgb(240,125,3)"/><text x="7.1501%" y="543.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (5 samples, 0.10%)</title><rect x="7.1647%" y="533" width="0.1018%" height="15" fill="rgb(205,98,50)"/><text x="7.4147%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::clone_waker (3 samples, 0.06%)</title><rect x="7.2664%" y="533" width="0.0611%" height="15" fill="rgb(205,185,37)"/><text x="7.5164%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (11 samples, 0.22%)</title><rect x="7.3275%" y="533" width="0.2239%" height="15" fill="rgb(238,207,15)"/><text x="7.5775%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake (4 samples, 0.08%)</title><rect x="7.5514%" y="533" width="0.0814%" height="15" fill="rgb(213,199,42)"/><text x="7.8014%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake_by_ref (10 samples, 0.20%)</title><rect x="7.6328%" y="533" width="0.2035%" height="15" fill="rgb(235,201,11)"/><text x="7.8828%" y="543.50"></text></g><g><title>io_uring_peek_batch_cqe (2 samples, 0.04%)</title><rect x="7.8364%" y="533" width="0.0407%" height="15" fill="rgb(207,46,11)"/><text x="8.0864%" y="543.50"></text></g><g><title>io_uring_submit (3 samples, 0.06%)</title><rect x="7.8771%" y="533" width="0.0611%" height="15" fill="rgb(241,35,35)"/><text x="8.1271%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (2 samples, 0.04%)</title><rect x="7.9381%" y="533" width="0.0407%" height="15" fill="rgb(243,32,47)"/><text x="8.1881%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.20%)</title><rect x="7.9788%" y="533" width="0.2035%" height="15" fill="rgb(247,202,23)"/><text x="8.2288%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="8.1620%" y="517" width="0.0204%" height="15" fill="rgb(219,102,11)"/><text x="8.4120%" y="527.50"></text></g><g><title>glommio::sys::uring::consume_source::{{closure}} (1 samples, 0.02%)</title><rect x="8.1620%" y="501" width="0.0204%" height="15" fill="rgb(243,110,44)"/><text x="8.4120%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="8.1620%" y="485" width="0.0204%" height="15" fill="rgb(222,74,54)"/><text x="8.4120%" y="495.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="8.1620%" y="469" width="0.0204%" height="15" fill="rgb(216,99,12)"/><text x="8.4120%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="8.1620%" y="453" width="0.0204%" height="15" fill="rgb(226,22,26)"/><text x="8.4120%" y="463.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="8.1620%" y="437" width="0.0204%" height="15" fill="rgb(217,163,10)"/><text x="8.4120%" y="447.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="8.1620%" y="421" width="0.0204%" height="15" fill="rgb(213,25,53)"/><text x="8.4120%" y="431.50"></text></g><g><title>std::time::Instant::elapsed (3 samples, 0.06%)</title><rect x="8.1824%" y="533" width="0.0611%" height="15" fill="rgb(252,105,26)"/><text x="8.4324%" y="543.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="8.2231%" y="517" width="0.0204%" height="15" fill="rgb(220,39,43)"/><text x="8.4731%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.02%)</title><rect x="8.2231%" y="501" width="0.0204%" height="15" fill="rgb(229,68,48)"/><text x="8.4731%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.02%)</title><rect x="8.2231%" y="485" width="0.0204%" height="15" fill="rgb(252,8,32)"/><text x="8.4731%" y="495.50"></text></g><g><title>[anon] (318 samples, 6.47%)</title><rect x="1.7912%" y="549" width="6.4726%" height="15" fill="rgb(223,20,43)"/><text x="2.0412%" y="559.50">[anon]</text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="8.2434%" y="533" width="0.0204%" height="15" fill="rgb(229,81,49)"/><text x="8.4934%" y="543.50"></text></g><g><title>io_uring_submit_and_wait (10 samples, 0.20%)</title><rect x="8.2638%" y="533" width="0.2035%" height="15" fill="rgb(236,28,36)"/><text x="8.5138%" y="543.50"></text></g><g><title>[anon_inode:[io_uring]] (11 samples, 0.22%)</title><rect x="8.2638%" y="549" width="0.2239%" height="15" fill="rgb(249,185,26)"/><text x="8.5138%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="8.4673%" y="533" width="0.0204%" height="15" fill="rgb(249,174,33)"/><text x="8.7173%" y="543.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.02%)</title><rect x="8.4877%" y="549" width="0.0204%" height="15" fill="rgb(233,201,37)"/><text x="8.7377%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="8.4877%" y="533" width="0.0204%" height="15" fill="rgb(221,78,26)"/><text x="8.7377%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="8.5080%" y="533" width="0.1832%" height="15" fill="rgb(250,127,30)"/><text x="8.7580%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="8.6912%" y="533" width="0.2035%" height="15" fill="rgb(230,49,44)"/><text x="8.9412%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="8.8948%" y="533" width="0.0407%" height="15" fill="rgb(229,67,23)"/><text x="9.1448%" y="543.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}} (1 samples, 0.02%)</title><rect x="8.9151%" y="517" width="0.0204%" height="15" fill="rgb(249,83,47)"/><text x="9.1651%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="8.9151%" y="501" width="0.0204%" height="15" fill="rgb(215,43,3)"/><text x="9.1651%" y="511.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="8.9151%" y="485" width="0.0204%" height="15" fill="rgb(238,154,13)"/><text x="9.1651%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="8.9151%" y="469" width="0.0204%" height="15" fill="rgb(219,56,2)"/><text x="9.1651%" y="479.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (2 samples, 0.04%)</title><rect x="8.9355%" y="533" width="0.0407%" height="15" fill="rgb(233,0,4)"/><text x="9.1855%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (3 samples, 0.06%)</title><rect x="8.9762%" y="533" width="0.0611%" height="15" fill="rgb(235,30,7)"/><text x="9.2262%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (12 samples, 0.24%)</title><rect x="9.0372%" y="533" width="0.2442%" height="15" fill="rgb(250,79,13)"/><text x="9.2872%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (12 samples, 0.24%)</title><rect x="9.2815%" y="533" width="0.2442%" height="15" fill="rgb(211,146,34)"/><text x="9.5315%" y="543.50"></text></g><g><title>&lt;glommio::task::join_handle::JoinHandle&lt;R&gt; as core::future::future::Future&gt;::poll (14 samples, 0.28%)</title><rect x="9.5257%" y="533" width="0.2850%" height="15" fill="rgb(228,22,38)"/><text x="9.7757%" y="543.50"></text></g><g><title>__GI___libc_free (2 samples, 0.04%)</title><rect x="9.8107%" y="533" width="0.0407%" height="15" fill="rgb(235,168,5)"/><text x="10.0607%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="9.8514%" y="533" width="0.0611%" height="15" fill="rgb(221,155,16)"/><text x="10.1014%" y="543.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.08%)</title><rect x="9.9125%" y="533" width="0.0814%" height="15" fill="rgb(215,215,53)"/><text x="10.1625%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (4 samples, 0.08%)</title><rect x="9.9125%" y="517" width="0.0814%" height="15" fill="rgb(223,4,10)"/><text x="10.1625%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="9.9939%" y="533" width="0.0204%" height="15" fill="rgb(234,103,6)"/><text x="10.2439%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.02%)</title><rect x="10.0142%" y="533" width="0.0204%" height="15" fill="rgb(227,97,0)"/><text x="10.2642%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="10.0346%" y="533" width="0.0611%" height="15" fill="rgb(234,150,53)"/><text x="10.2846%" y="543.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (1 samples, 0.02%)</title><rect x="10.0957%" y="533" width="0.0204%" height="15" fill="rgb(228,201,54)"/><text x="10.3457%" y="543.50"></text></g><g><title>glommio::executor::LocalExecutor::run_task_queues (15 samples, 0.31%)</title><rect x="10.1160%" y="533" width="0.3053%" height="15" fill="rgb(222,22,37)"/><text x="10.3660%" y="543.50"></text></g><g><title>glommio::io::read_result::ReadResult::into_inner (3 samples, 0.06%)</title><rect x="10.4213%" y="533" width="0.0611%" height="15" fill="rgb(237,53,32)"/><text x="10.6713%" y="543.50"></text></g><g><title>glommio::parking::Inner::park (18 samples, 0.37%)</title><rect x="10.4824%" y="533" width="0.3664%" height="15" fill="rgb(233,25,53)"/><text x="10.7324%" y="543.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (2 samples, 0.04%)</title><rect x="10.8488%" y="533" width="0.0407%" height="15" fill="rgb(210,40,34)"/><text x="11.0988%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="10.8488%" y="517" width="0.0407%" height="15" fill="rgb(241,220,44)"/><text x="11.0988%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="10.8488%" y="501" width="0.0407%" height="15" fill="rgb(235,28,35)"/><text x="11.0988%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="10.8488%" y="485" width="0.0407%" height="15" fill="rgb(210,56,17)"/><text x="11.0988%" y="495.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="10.9302%" y="517" width="0.0204%" height="15" fill="rgb(224,130,29)"/><text x="11.1802%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="10.9302%" y="501" width="0.0204%" height="15" fill="rgb(235,212,8)"/><text x="11.1802%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="10.9302%" y="485" width="0.0204%" height="15" fill="rgb(223,33,50)"/><text x="11.1802%" y="495.50"></text></g><g><title>glommio::parking::Reactor::spin_poll_io (4 samples, 0.08%)</title><rect x="10.8895%" y="533" width="0.0814%" height="15" fill="rgb(219,149,13)"/><text x="11.1395%" y="543.50"></text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (1 samples, 0.02%)</title><rect x="10.9505%" y="517" width="0.0204%" height="15" fill="rgb(250,156,29)"/><text x="11.2005%" y="527.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (3 samples, 0.06%)</title><rect x="10.9709%" y="533" width="0.0611%" height="15" fill="rgb(216,193,19)"/><text x="11.2209%" y="543.50"></text></g><g><title>glommio::sys::uring::Reactor::simple_poll (7 samples, 0.14%)</title><rect x="11.0320%" y="533" width="0.1425%" height="15" fill="rgb(216,135,14)"/><text x="11.2820%" y="543.50"></text></g><g><title>glommio::sys::uring::UringBufferAllocator::new_buffer (3 samples, 0.06%)</title><rect x="11.1744%" y="533" width="0.0611%" height="15" fill="rgb(241,47,5)"/><text x="11.4244%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (11 samples, 0.22%)</title><rect x="11.2355%" y="533" width="0.2239%" height="15" fill="rgb(233,42,35)"/><text x="11.4855%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (1 samples, 0.02%)</title><rect x="11.4594%" y="533" width="0.0204%" height="15" fill="rgb(231,13,6)"/><text x="11.7094%" y="543.50"></text></g><g><title>io_uring_peek_batch_cqe (4 samples, 0.08%)</title><rect x="11.4797%" y="533" width="0.0814%" height="15" fill="rgb(207,181,40)"/><text x="11.7297%" y="543.50"></text></g><g><title>io_uring_submit (5 samples, 0.10%)</title><rect x="11.5612%" y="533" width="0.1018%" height="15" fill="rgb(254,173,49)"/><text x="11.8112%" y="543.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.02%)</title><rect x="11.6629%" y="533" width="0.0204%" height="15" fill="rgb(221,1,38)"/><text x="11.9129%" y="543.50"></text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::{{closure}} (1 samples, 0.02%)</title><rect x="11.6629%" y="517" width="0.0204%" height="15" fill="rgb(206,124,46)"/><text x="11.9129%" y="527.50"></text></g><g><title>glommio::executor::LocalExecutor::run (1 samples, 0.02%)</title><rect x="11.6629%" y="501" width="0.0204%" height="15" fill="rgb(249,21,11)"/><text x="11.9129%" y="511.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="11.6629%" y="485" width="0.0204%" height="15" fill="rgb(222,201,40)"/><text x="11.9129%" y="495.50"></text></g><g><title>glommio::executor::LocalExecutor::run::{{closure}} (1 samples, 0.02%)</title><rect x="11.6629%" y="469" width="0.0204%" height="15" fill="rgb(235,61,29)"/><text x="11.9129%" y="479.50"></text></g><g><title>glommio::parking::Parker::poll_io (1 samples, 0.02%)</title><rect x="11.6629%" y="453" width="0.0204%" height="15" fill="rgb(219,207,3)"/><text x="11.9129%" y="463.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="11.6833%" y="533" width="0.0204%" height="15" fill="rgb(222,56,46)"/><text x="11.9333%" y="543.50"></text></g><g><title>[unknown] (179 samples, 3.64%)</title><rect x="8.5080%" y="549" width="3.6434%" height="15" fill="rgb(239,76,54)"/><text x="8.7580%" y="559.50">[unk..</text></g><g><title>syscall (22 samples, 0.45%)</title><rect x="11.7036%" y="533" width="0.4478%" height="15" fill="rgb(231,124,27)"/><text x="11.9536%" y="543.50"></text></g><g><title>glommio::task::waker_fn::Helper&lt;F&gt;::clone_waker (5 samples, 0.10%)</title><rect x="12.9656%" y="357" width="0.1018%" height="15" fill="rgb(249,195,6)"/><text x="13.2156%" y="367.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.10%)</title><rect x="12.9656%" y="341" width="0.1018%" height="15" fill="rgb(237,174,47)"/><text x="13.2156%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.10%)</title><rect x="12.9656%" y="325" width="0.1018%" height="15" fill="rgb(206,201,31)"/><text x="13.2156%" y="335.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (5 samples, 0.10%)</title><rect x="12.9656%" y="309" width="0.1018%" height="15" fill="rgb(231,57,52)"/><text x="13.2156%" y="319.50"></text></g><g><title>&lt;glommio::task::join_handle::JoinHandle&lt;R&gt; as core::future::future::Future&gt;::poll (30 samples, 0.61%)</title><rect x="12.5585%" y="373" width="0.6106%" height="15" fill="rgb(248,177,22)"/><text x="12.8085%" y="383.50"></text></g><g><title>glommio::task::waker_fn::Helper&lt;F&gt;::drop_waker (5 samples, 0.10%)</title><rect x="13.0674%" y="357" width="0.1018%" height="15" fill="rgb(215,211,37)"/><text x="13.3174%" y="367.50"></text></g><g><title>core::mem::drop (5 samples, 0.10%)</title><rect x="13.0674%" y="341" width="0.1018%" height="15" fill="rgb(241,128,51)"/><text x="13.3174%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.10%)</title><rect x="13.0674%" y="325" width="0.1018%" height="15" fill="rgb(227,165,31)"/><text x="13.3174%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="13.0674%" y="309" width="0.1018%" height="15" fill="rgb(228,167,24)"/><text x="13.3174%" y="319.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (5 samples, 0.10%)</title><rect x="13.0674%" y="293" width="0.1018%" height="15" fill="rgb(228,143,12)"/><text x="13.3174%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.10%)</title><rect x="13.0674%" y="277" width="0.1018%" height="15" fill="rgb(249,149,8)"/><text x="13.3174%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.10%)</title><rect x="13.0674%" y="261" width="0.1018%" height="15" fill="rgb(243,35,44)"/><text x="13.3174%" y="271.50"></text></g><g><title>core::mem::replace (5 samples, 0.10%)</title><rect x="13.0674%" y="245" width="0.1018%" height="15" fill="rgb(246,89,9)"/><text x="13.3174%" y="255.50"></text></g><g><title>core::mem::swap (5 samples, 0.10%)</title><rect x="13.0674%" y="229" width="0.1018%" height="15" fill="rgb(233,213,13)"/><text x="13.3174%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.10%)</title><rect x="13.0674%" y="213" width="0.1018%" height="15" fill="rgb(233,141,41)"/><text x="13.3174%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.10%)</title><rect x="13.0674%" y="197" width="0.1018%" height="15" fill="rgb(239,167,4)"/><text x="13.3174%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (4 samples, 0.08%)</title><rect x="13.1691%" y="373" width="0.0814%" height="15" fill="rgb(209,217,16)"/><text x="13.4191%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="14.6550%" y="357" width="0.0407%" height="15" fill="rgb(219,88,35)"/><text x="14.9050%" y="367.50"></text></g><g><title>__clock_gettime_2 (27 samples, 0.55%)</title><rect x="14.6957%" y="357" width="0.5496%" height="15" fill="rgb(220,193,23)"/><text x="14.9457%" y="367.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.39%)</title><rect x="14.8585%" y="341" width="0.3867%" height="15" fill="rgb(230,90,52)"/><text x="15.1085%" y="351.50"></text></g><g><title>[[vdso]] (14 samples, 0.28%)</title><rect x="14.9603%" y="325" width="0.2850%" height="15" fill="rgb(252,106,19)"/><text x="15.2103%" y="335.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (1 samples, 0.02%)</title><rect x="15.2453%" y="357" width="0.0204%" height="15" fill="rgb(206,74,20)"/><text x="15.4953%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="16.7108%" y="293" width="0.0204%" height="15" fill="rgb(230,138,44)"/><text x="16.9608%" y="303.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.31%)</title><rect x="17.2196%" y="277" width="0.3053%" height="15" fill="rgb(235,182,43)"/><text x="17.4696%" y="287.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}} (12 samples, 0.24%)</title><rect x="17.2807%" y="261" width="0.2442%" height="15" fill="rgb(242,16,51)"/><text x="17.5307%" y="271.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.08%)</title><rect x="17.4435%" y="245" width="0.0814%" height="15" fill="rgb(248,9,4)"/><text x="17.6935%" y="255.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}}::{{closure}} (4 samples, 0.08%)</title><rect x="17.4435%" y="229" width="0.0814%" height="15" fill="rgb(210,31,22)"/><text x="17.6935%" y="239.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::take_result (3 samples, 0.06%)</title><rect x="17.4639%" y="213" width="0.0611%" height="15" fill="rgb(239,54,39)"/><text x="17.7139%" y="223.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.06%)</title><rect x="17.4639%" y="197" width="0.0611%" height="15" fill="rgb(230,99,41)"/><text x="17.7139%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.06%)</title><rect x="17.4639%" y="181" width="0.0611%" height="15" fill="rgb(253,106,12)"/><text x="17.7139%" y="191.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.06%)</title><rect x="17.4639%" y="165" width="0.0611%" height="15" fill="rgb(213,46,41)"/><text x="17.7139%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="17.4842%" y="149" width="0.0407%" height="15" fill="rgb(215,133,35)"/><text x="17.7342%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="17.4842%" y="133" width="0.0407%" height="15" fill="rgb(213,28,5)"/><text x="17.7342%" y="143.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="17.4842%" y="117" width="0.0407%" height="15" fill="rgb(215,77,49)"/><text x="17.7342%" y="127.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="17.4842%" y="101" width="0.0407%" height="15" fill="rgb(248,100,22)"/><text x="17.7342%" y="111.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="17.4842%" y="85" width="0.0407%" height="15" fill="rgb(208,67,9)"/><text x="17.7342%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="17.4842%" y="69" width="0.0407%" height="15" fill="rgb(219,133,21)"/><text x="17.7342%" y="79.50"></text></g><g><title>&lt;glommio::net::stream::GlommioStream&lt;S&gt; as std::sys::unix::ext::io::AsRawFd&gt;::as_raw_fd (1 samples, 0.02%)</title><rect x="17.5249%" y="277" width="0.0204%" height="15" fill="rgb(246,46,29)"/><text x="17.7749%" y="287.50"></text></g><g><title>std::sys::unix::fd::FileDesc::raw (1 samples, 0.02%)</title><rect x="17.5249%" y="261" width="0.0204%" height="15" fill="rgb(246,185,52)"/><text x="17.7749%" y="271.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::upgrade (4 samples, 0.08%)</title><rect x="17.5453%" y="277" width="0.0814%" height="15" fill="rgb(252,136,11)"/><text x="17.7953%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect x="17.6267%" y="245" width="0.1628%" height="15" fill="rgb(219,138,53)"/><text x="17.8767%" y="255.50"></text></g><g><title>__GI___libc_free (16 samples, 0.33%)</title><rect x="17.7895%" y="245" width="0.3257%" height="15" fill="rgb(211,51,23)"/><text x="18.0395%" y="255.50"></text></g><g><title>_int_free (4 samples, 0.08%)</title><rect x="18.0338%" y="229" width="0.0814%" height="15" fill="rgb(247,221,28)"/><text x="18.2838%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (25 samples, 0.51%)</title><rect x="17.6267%" y="277" width="0.5089%" height="15" fill="rgb(251,222,45)"/><text x="17.8767%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (25 samples, 0.51%)</title><rect x="17.6267%" y="261" width="0.5089%" height="15" fill="rgb(217,162,53)"/><text x="17.8767%" y="271.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (1 samples, 0.02%)</title><rect x="18.1152%" y="245" width="0.0204%" height="15" fill="rgb(229,93,14)"/><text x="18.3652%" y="255.50"></text></g><g><title>glommio::io::read_result::ReadResult::from_partial_buffer (22 samples, 0.45%)</title><rect x="18.1356%" y="277" width="0.4478%" height="15" fill="rgb(209,67,49)"/><text x="18.3856%" y="287.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (18 samples, 0.37%)</title><rect x="18.2170%" y="261" width="0.3664%" height="15" fill="rgb(213,87,29)"/><text x="18.4670%" y="271.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.37%)</title><rect x="18.2170%" y="245" width="0.3664%" height="15" fill="rgb(205,151,52)"/><text x="18.4670%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (18 samples, 0.37%)</title><rect x="18.2170%" y="229" width="0.3664%" height="15" fill="rgb(253,215,39)"/><text x="18.4670%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.37%)</title><rect x="18.2170%" y="213" width="0.3664%" height="15" fill="rgb(221,220,41)"/><text x="18.4670%" y="223.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.35%)</title><rect x="18.2373%" y="197" width="0.3460%" height="15" fill="rgb(218,133,21)"/><text x="18.4873%" y="207.50"></text></g><g><title>__rdl_alloc (17 samples, 0.35%)</title><rect x="18.2373%" y="181" width="0.3460%" height="15" fill="rgb(221,193,43)"/><text x="18.4873%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (17 samples, 0.35%)</title><rect x="18.2373%" y="165" width="0.3460%" height="15" fill="rgb(240,128,52)"/><text x="18.4873%" y="175.50"></text></g><g><title>__GI___libc_malloc (17 samples, 0.35%)</title><rect x="18.2373%" y="149" width="0.3460%" height="15" fill="rgb(253,114,12)"/><text x="18.4873%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="18.6648%" y="213" width="0.1018%" height="15" fill="rgb(215,223,47)"/><text x="18.9148%" y="223.50"></text></g><g><title>glommio::parking::Reactor::new_source (10 samples, 0.20%)</title><rect x="18.6037%" y="261" width="0.2035%" height="15" fill="rgb(248,225,23)"/><text x="18.8537%" y="271.50"></text></g><g><title>glommio::sys::Source::new (10 samples, 0.20%)</title><rect x="18.6037%" y="245" width="0.2035%" height="15" fill="rgb(250,108,0)"/><text x="18.8537%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (10 samples, 0.20%)</title><rect x="18.6037%" y="229" width="0.2035%" height="15" fill="rgb(228,208,7)"/><text x="18.8537%" y="239.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.04%)</title><rect x="18.7665%" y="213" width="0.0407%" height="15" fill="rgb(244,45,10)"/><text x="19.0165%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.04%)</title><rect x="18.7665%" y="197" width="0.0407%" height="15" fill="rgb(207,125,25)"/><text x="19.0165%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.04%)</title><rect x="18.7665%" y="181" width="0.0407%" height="15" fill="rgb(210,195,18)"/><text x="19.0165%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.04%)</title><rect x="18.7665%" y="165" width="0.0407%" height="15" fill="rgb(249,80,12)"/><text x="19.0165%" y="175.50"></text></g><g><title>__rdl_alloc (2 samples, 0.04%)</title><rect x="18.7665%" y="149" width="0.0407%" height="15" fill="rgb(221,65,9)"/><text x="19.0165%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.04%)</title><rect x="18.7665%" y="133" width="0.0407%" height="15" fill="rgb(235,49,36)"/><text x="19.0165%" y="143.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="18.7665%" y="117" width="0.0407%" height="15" fill="rgb(225,32,20)"/><text x="19.0165%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="18.8072%" y="229" width="0.0204%" height="15" fill="rgb(215,141,46)"/><text x="19.0572%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="18.8072%" y="213" width="0.0204%" height="15" fill="rgb(250,160,47)"/><text x="19.0572%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::drain (2 samples, 0.04%)</title><rect x="18.8072%" y="245" width="0.0407%" height="15" fill="rgb(216,222,40)"/><text x="19.0572%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="18.8276%" y="229" width="0.0204%" height="15" fill="rgb(234,217,39)"/><text x="19.0776%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="18.8276%" y="213" width="0.0204%" height="15" fill="rgb(207,178,40)"/><text x="19.0776%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="18.8276%" y="197" width="0.0204%" height="15" fill="rgb(221,136,13)"/><text x="19.0776%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="18.8276%" y="181" width="0.0204%" height="15" fill="rgb(249,199,10)"/><text x="19.0776%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="18.8480%" y="245" width="0.0204%" height="15" fill="rgb(249,222,13)"/><text x="19.0980%" y="255.50"></text></g><g><title>&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.8480%" y="229" width="0.0204%" height="15" fill="rgb(244,185,38)"/><text x="19.0980%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="18.8480%" y="213" width="0.0204%" height="15" fill="rgb(236,202,9)"/><text x="19.0980%" y="223.50"></text></g><g><title>&lt;&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="18.8480%" y="197" width="0.0204%" height="15" fill="rgb(250,229,37)"/><text x="19.0980%" y="207.50"></text></g><g><title>cq_ring_needs_flush (1 samples, 0.02%)</title><rect x="18.9904%" y="165" width="0.0204%" height="15" fill="rgb(206,174,23)"/><text x="19.2404%" y="175.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (9 samples, 0.18%)</title><rect x="18.9090%" y="213" width="0.1832%" height="15" fill="rgb(211,33,43)"/><text x="19.1590%" y="223.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (9 samples, 0.18%)</title><rect x="18.9090%" y="197" width="0.1832%" height="15" fill="rgb(245,58,50)"/><text x="19.1590%" y="207.50"></text></g><g><title>io_uring_peek_batch_cqe (9 samples, 0.18%)</title><rect x="18.9090%" y="181" width="0.1832%" height="15" fill="rgb(244,68,36)"/><text x="19.1590%" y="191.50"></text></g><g><title>io_uring_cq_ready (4 samples, 0.08%)</title><rect x="19.0108%" y="165" width="0.0814%" height="15" fill="rgb(232,229,15)"/><text x="19.2608%" y="175.50"></text></g><g><title>glommio::sys::uring::UringBufferAllocator::new_buffer (4 samples, 0.08%)</title><rect x="19.8046%" y="181" width="0.0814%" height="15" fill="rgb(254,30,23)"/><text x="20.0546%" y="191.50"></text></g><g><title>io_uring_get_sqe (4 samples, 0.08%)</title><rect x="19.8860%" y="181" width="0.0814%" height="15" fill="rgb(235,160,14)"/><text x="20.1360%" y="191.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (39 samples, 0.79%)</title><rect x="19.1940%" y="197" width="0.7938%" height="15" fill="rgb(212,155,44)"/><text x="19.4440%" y="207.50"></text></g><g><title>rust_io_uring_prep_read_fixed (1 samples, 0.02%)</title><rect x="19.9674%" y="181" width="0.0204%" height="15" fill="rgb(226,2,50)"/><text x="20.2174%" y="191.50"></text></g><g><title>io_uring_prep_read_fixed (1 samples, 0.02%)</title><rect x="19.9674%" y="165" width="0.0204%" height="15" fill="rgb(234,177,6)"/><text x="20.2174%" y="175.50"></text></g><g><title>io_uring_prep_rw (1 samples, 0.02%)</title><rect x="19.9674%" y="149" width="0.0204%" height="15" fill="rgb(217,24,9)"/><text x="20.2174%" y="159.50"></text></g><g><title>__sys_io_uring_enter2 (1 samples, 0.02%)</title><rect x="19.9878%" y="197" width="0.0204%" height="15" fill="rgb(220,13,46)"/><text x="20.2378%" y="207.50"></text></g><g><title>__io_uring_flush_sq (1 samples, 0.02%)</title><rect x="20.0285%" y="165" width="0.0204%" height="15" fill="rgb(239,221,27)"/><text x="20.2785%" y="175.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (80 samples, 1.63%)</title><rect x="18.8072%" y="261" width="1.6283%" height="15" fill="rgb(222,198,25)"/><text x="19.0572%" y="271.50"></text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (77 samples, 1.57%)</title><rect x="18.8683%" y="245" width="1.5673%" height="15" fill="rgb(211,99,13)"/><text x="19.1183%" y="255.50"></text></g><g><title>glommio::sys::uring::Reactor::simple_poll (75 samples, 1.53%)</title><rect x="18.9090%" y="229" width="1.5266%" height="15" fill="rgb(232,111,31)"/><text x="19.1590%" y="239.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (66 samples, 1.34%)</title><rect x="19.0922%" y="213" width="1.3434%" height="15" fill="rgb(245,82,37)"/><text x="19.3422%" y="223.50"></text></g><g><title>io_uring_submit (21 samples, 0.43%)</title><rect x="20.0081%" y="197" width="0.4274%" height="15" fill="rgb(227,149,46)"/><text x="20.2581%" y="207.50"></text></g><g><title>__io_uring_submit_and_wait (21 samples, 0.43%)</title><rect x="20.0081%" y="181" width="0.4274%" height="15" fill="rgb(218,36,50)"/><text x="20.2581%" y="191.50"></text></g><g><title>__io_uring_submit (19 samples, 0.39%)</title><rect x="20.0488%" y="165" width="0.3867%" height="15" fill="rgb(226,80,48)"/><text x="20.2988%" y="175.50"></text></g><g><title>__sys_io_uring_enter2 (19 samples, 0.39%)</title><rect x="20.0488%" y="149" width="0.3867%" height="15" fill="rgb(238,224,15)"/><text x="20.2988%" y="159.50"></text></g><g><title>syscall (17 samples, 0.35%)</title><rect x="20.0896%" y="133" width="0.3460%" height="15" fill="rgb(241,136,10)"/><text x="20.3396%" y="143.50"></text></g><g><title>glommio::sys::uring::SOURCE_MAP::__getit (1 samples, 0.02%)</title><rect x="20.6188%" y="181" width="0.0204%" height="15" fill="rgb(208,32,45)"/><text x="20.8688%" y="191.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="20.6188%" y="165" width="0.0204%" height="15" fill="rgb(207,135,9)"/><text x="20.8688%" y="175.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="20.6188%" y="149" width="0.0204%" height="15" fill="rgb(206,86,44)"/><text x="20.8688%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="20.6188%" y="133" width="0.0204%" height="15" fill="rgb(245,177,15)"/><text x="20.8688%" y="143.50"></text></g><g><title>glommio::parking::Reactor::rushed_recv (119 samples, 2.42%)</title><rect x="18.5834%" y="277" width="2.4221%" height="15" fill="rgb(206,64,50)"/><text x="18.8334%" y="287.50">gl..</text></g><g><title>glommio::sys::uring::Reactor::recv (28 samples, 0.57%)</title><rect x="20.4356%" y="261" width="0.5699%" height="15" fill="rgb(234,36,40)"/><text x="20.6856%" y="271.50"></text></g><g><title>glommio::sys::uring::Reactor::queue_standard_request (28 samples, 0.57%)</title><rect x="20.4356%" y="245" width="0.5699%" height="15" fill="rgb(213,64,8)"/><text x="20.6856%" y="255.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (27 samples, 0.55%)</title><rect x="20.4559%" y="229" width="0.5496%" height="15" fill="rgb(210,75,36)"/><text x="20.7059%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.39%)</title><rect x="20.6188%" y="213" width="0.3867%" height="15" fill="rgb(229,88,21)"/><text x="20.8688%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.39%)</title><rect x="20.6188%" y="197" width="0.3867%" height="15" fill="rgb(252,204,47)"/><text x="20.8688%" y="207.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (18 samples, 0.37%)</title><rect x="20.6391%" y="181" width="0.3664%" height="15" fill="rgb(208,77,27)"/><text x="20.8891%" y="191.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (18 samples, 0.37%)</title><rect x="20.6391%" y="165" width="0.3664%" height="15" fill="rgb(221,76,26)"/><text x="20.8891%" y="175.50"></text></g><g><title>core::mem::replace (18 samples, 0.37%)</title><rect x="20.6391%" y="149" width="0.3664%" height="15" fill="rgb(225,139,18)"/><text x="20.8891%" y="159.50"></text></g><g><title>core::mem::swap (17 samples, 0.35%)</title><rect x="20.6595%" y="133" width="0.3460%" height="15" fill="rgb(230,137,11)"/><text x="20.9095%" y="143.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (17 samples, 0.35%)</title><rect x="20.6595%" y="117" width="0.3460%" height="15" fill="rgb(212,28,1)"/><text x="20.9095%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.35%)</title><rect x="20.6595%" y="101" width="0.3460%" height="15" fill="rgb(248,164,17)"/><text x="20.9095%" y="111.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="21.2090%" y="229" width="0.0204%" height="15" fill="rgb(222,171,42)"/><text x="21.4590%" y="239.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="21.2090%" y="213" width="0.0204%" height="15" fill="rgb(243,84,45)"/><text x="21.4590%" y="223.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="21.2090%" y="197" width="0.0204%" height="15" fill="rgb(252,49,23)"/><text x="21.4590%" y="207.50"></text></g><g><title>glommio::net::tcp_socket::TcpStream::read_zc::{{closure}} (225 samples, 4.58%)</title><rect x="16.7311%" y="293" width="4.5797%" height="15" fill="rgb(215,19,7)"/><text x="16.9811%" y="303.50">glomm..</text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::extract_dma_buffer (15 samples, 0.31%)</title><rect x="21.0055%" y="277" width="0.3053%" height="15" fill="rgb(238,81,41)"/><text x="21.2555%" y="287.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::extract_source_type (12 samples, 0.24%)</title><rect x="21.0666%" y="261" width="0.2442%" height="15" fill="rgb(210,199,37)"/><text x="21.3166%" y="271.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::InnerSource&gt;::update_source_type (12 samples, 0.24%)</title><rect x="21.0666%" y="245" width="0.2442%" height="15" fill="rgb(244,192,49)"/><text x="21.3166%" y="255.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="21.2294%" y="229" width="0.0814%" height="15" fill="rgb(226,211,11)"/><text x="21.4794%" y="239.50"></text></g><g><title>core::mem::swap (4 samples, 0.08%)</title><rect x="21.2294%" y="213" width="0.0814%" height="15" fill="rgb(236,162,54)"/><text x="21.4794%" y="223.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.08%)</title><rect x="21.2294%" y="197" width="0.0814%" height="15" fill="rgb(220,229,9)"/><text x="21.4794%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping (4 samples, 0.08%)</title><rect x="21.2294%" y="181" width="0.0814%" height="15" fill="rgb(250,87,22)"/><text x="21.4794%" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (4 samples, 0.08%)</title><rect x="21.2294%" y="165" width="0.0814%" height="15" fill="rgb(239,43,17)"/><text x="21.4794%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="21.2294%" y="149" width="0.0814%" height="15" fill="rgb(231,177,25)"/><text x="21.4794%" y="159.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.24%)</title><rect x="21.5347%" y="277" width="0.2442%" height="15" fill="rgb(219,179,1)"/><text x="21.7847%" y="287.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}} (10 samples, 0.20%)</title><rect x="21.5754%" y="261" width="0.2035%" height="15" fill="rgb(238,219,53)"/><text x="21.8254%" y="271.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="21.7586%" y="245" width="0.0204%" height="15" fill="rgb(232,167,36)"/><text x="22.0086%" y="255.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="21.7586%" y="229" width="0.0204%" height="15" fill="rgb(244,19,51)"/><text x="22.0086%" y="239.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::take_result (1 samples, 0.02%)</title><rect x="21.7586%" y="213" width="0.0204%" height="15" fill="rgb(224,6,22)"/><text x="22.0086%" y="223.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="21.7586%" y="197" width="0.0204%" height="15" fill="rgb(224,145,5)"/><text x="22.0086%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="21.7586%" y="181" width="0.0204%" height="15" fill="rgb(234,130,49)"/><text x="22.0086%" y="191.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="21.7586%" y="165" width="0.0204%" height="15" fill="rgb(254,6,2)"/><text x="22.0086%" y="175.50"></text></g><g><title>&lt;glommio::net::stream::GlommioStream&lt;S&gt; as std::sys::unix::ext::io::AsRawFd&gt;::as_raw_fd (1 samples, 0.02%)</title><rect x="21.7790%" y="277" width="0.0204%" height="15" fill="rgb(208,96,46)"/><text x="22.0290%" y="287.50"></text></g><g><title>std::sys::unix::fd::FileDesc::raw (1 samples, 0.02%)</title><rect x="21.7790%" y="261" width="0.0204%" height="15" fill="rgb(239,3,39)"/><text x="22.0290%" y="271.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::upgrade (1 samples, 0.02%)</title><rect x="21.7993%" y="277" width="0.0204%" height="15" fill="rgb(233,210,1)"/><text x="22.0493%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="21.8197%" y="261" width="0.0204%" height="15" fill="rgb(244,137,37)"/><text x="22.0697%" y="271.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::block_addr (1 samples, 0.02%)</title><rect x="22.4506%" y="197" width="0.0204%" height="15" fill="rgb(240,136,2)"/><text x="22.7006%" y="207.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::block_index (1 samples, 0.02%)</title><rect x="22.4710%" y="197" width="0.0204%" height="15" fill="rgb(239,18,37)"/><text x="22.7210%" y="207.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::block_index (2 samples, 0.04%)</title><rect x="22.7560%" y="181" width="0.0407%" height="15" fill="rgb(218,185,22)"/><text x="23.0060%" y="191.50"></text></g><g><title>buddy_alloc::buddy_alloc::bit_isset (16 samples, 0.33%)</title><rect x="22.7967%" y="181" width="0.3257%" height="15" fill="rgb(225,218,4)"/><text x="23.0467%" y="191.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::find_k_for_p (32 samples, 0.65%)</title><rect x="22.4913%" y="197" width="0.6513%" height="15" fill="rgb(230,182,32)"/><text x="22.7413%" y="207.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="23.1223%" y="181" width="0.0204%" height="15" fill="rgb(242,56,43)"/><text x="23.3723%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="23.1223%" y="165" width="0.0204%" height="15" fill="rgb(233,99,24)"/><text x="23.3723%" y="175.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::free (4 samples, 0.08%)</title><rect x="23.1427%" y="197" width="0.0814%" height="15" fill="rgb(234,209,42)"/><text x="23.3927%" y="207.50"></text></g><g><title>buddy_alloc::buddy_alloc::Node::remove (4 samples, 0.08%)</title><rect x="23.2241%" y="197" width="0.0814%" height="15" fill="rgb(227,7,12)"/><text x="23.4741%" y="207.50"></text></g><g><title>buddy_alloc::buddy_alloc::bit_clear (4 samples, 0.08%)</title><rect x="23.3055%" y="197" width="0.0814%" height="15" fill="rgb(245,203,43)"/><text x="23.5555%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 1.57%)</title><rect x="21.8400%" y="245" width="1.5673%" height="15" fill="rgb(238,205,33)"/><text x="22.0900%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (73 samples, 1.49%)</title><rect x="21.9214%" y="229" width="1.4859%" height="15" fill="rgb(231,56,7)"/><text x="22.1714%" y="239.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::free (49 samples, 1.00%)</title><rect x="22.4099%" y="213" width="0.9974%" height="15" fill="rgb(244,186,29)"/><text x="22.6599%" y="223.50"></text></g><g><title>buddy_alloc::buddy_alloc::bit_isset (1 samples, 0.02%)</title><rect x="23.3869%" y="197" width="0.0204%" height="15" fill="rgb(234,111,31)"/><text x="23.6369%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (106 samples, 2.16%)</title><rect x="21.8400%" y="261" width="2.1575%" height="15" fill="rgb(241,149,10)"/><text x="22.0900%" y="271.50">c..</text></g><g><title>__GI___libc_free (29 samples, 0.59%)</title><rect x="23.4073%" y="245" width="0.5903%" height="15" fill="rgb(249,206,44)"/><text x="23.6573%" y="255.50"></text></g><g><title>_int_free (9 samples, 0.18%)</title><rect x="23.8144%" y="229" width="0.1832%" height="15" fill="rgb(251,153,30)"/><text x="24.0644%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (108 samples, 2.20%)</title><rect x="21.8197%" y="277" width="2.1982%" height="15" fill="rgb(239,152,38)"/><text x="22.0697%" y="287.50">c..</text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (1 samples, 0.02%)</title><rect x="23.9976%" y="261" width="0.0204%" height="15" fill="rgb(249,139,47)"/><text x="24.2476%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="23.9976%" y="245" width="0.0204%" height="15" fill="rgb(244,64,35)"/><text x="24.2476%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="23.9976%" y="229" width="0.0204%" height="15" fill="rgb(216,46,15)"/><text x="24.2476%" y="239.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="23.9976%" y="213" width="0.0204%" height="15" fill="rgb(250,74,19)"/><text x="24.2476%" y="223.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="23.9976%" y="197" width="0.0204%" height="15" fill="rgb(249,42,33)"/><text x="24.2476%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="23.9976%" y="181" width="0.0204%" height="15" fill="rgb(242,149,17)"/><text x="24.2476%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="23.9976%" y="165" width="0.0204%" height="15" fill="rgb(244,29,21)"/><text x="24.2476%" y="175.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="24.1604%" y="261" width="0.0407%" height="15" fill="rgb(220,130,37)"/><text x="24.4104%" y="271.50"></text></g><g><title>glommio::parking::Reactor::new_source (17 samples, 0.35%)</title><rect x="24.2011%" y="261" width="0.3460%" height="15" fill="rgb(211,67,2)"/><text x="24.4511%" y="271.50"></text></g><g><title>glommio::sys::Source::new (17 samples, 0.35%)</title><rect x="24.2011%" y="245" width="0.3460%" height="15" fill="rgb(235,68,52)"/><text x="24.4511%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (7 samples, 0.14%)</title><rect x="24.4046%" y="229" width="0.1425%" height="15" fill="rgb(246,142,3)"/><text x="24.6546%" y="239.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="24.4657%" y="213" width="0.0814%" height="15" fill="rgb(241,25,7)"/><text x="24.7157%" y="223.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (1 samples, 0.02%)</title><rect x="24.5675%" y="245" width="0.0204%" height="15" fill="rgb(242,119,39)"/><text x="24.8175%" y="255.50"></text></g><g><title>io_uring_peek_batch_cqe (13 samples, 0.26%)</title><rect x="24.7914%" y="181" width="0.2646%" height="15" fill="rgb(241,98,45)"/><text x="25.0414%" y="191.50"></text></g><g><title>io_uring_cq_ready (7 samples, 0.14%)</title><rect x="24.9135%" y="165" width="0.1425%" height="15" fill="rgb(254,28,30)"/><text x="25.1635%" y="175.50"></text></g><g><title>rust_io_uring_cqe_seen (1 samples, 0.02%)</title><rect x="25.0560%" y="181" width="0.0204%" height="15" fill="rgb(241,142,54)"/><text x="25.3060%" y="191.50"></text></g><g><title>io_uring_cqe_seen (1 samples, 0.02%)</title><rect x="25.0560%" y="165" width="0.0204%" height="15" fill="rgb(222,85,15)"/><text x="25.3060%" y="175.50"></text></g><g><title>glommio::sys::uring::SOURCE_MAP::__getit (1 samples, 0.02%)</title><rect x="25.0763%" y="149" width="0.0204%" height="15" fill="rgb(210,85,47)"/><text x="25.3263%" y="159.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="25.0763%" y="133" width="0.0204%" height="15" fill="rgb(224,206,25)"/><text x="25.3263%" y="143.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="25.0763%" y="117" width="0.0204%" height="15" fill="rgb(243,201,19)"/><text x="25.3263%" y="127.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="25.0763%" y="101" width="0.0204%" height="15" fill="rgb(236,59,4)"/><text x="25.3263%" y="111.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.12%)</title><rect x="25.0967%" y="117" width="0.1221%" height="15" fill="rgb(254,179,45)"/><text x="25.3467%" y="127.50"></text></g><g><title>core::mem::replace (6 samples, 0.12%)</title><rect x="25.0967%" y="101" width="0.1221%" height="15" fill="rgb(226,14,10)"/><text x="25.3467%" y="111.50"></text></g><g><title>core::mem::swap (6 samples, 0.12%)</title><rect x="25.0967%" y="85" width="0.1221%" height="15" fill="rgb(244,27,41)"/><text x="25.3467%" y="95.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.12%)</title><rect x="25.0967%" y="69" width="0.1221%" height="15" fill="rgb(235,35,32)"/><text x="25.3467%" y="79.50"></text></g><g><title>core::ptr::read (6 samples, 0.12%)</title><rect x="25.0967%" y="53" width="0.1221%" height="15" fill="rgb(218,68,31)"/><text x="25.3467%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.12%)</title><rect x="25.0967%" y="37" width="0.1221%" height="15" fill="rgb(207,120,37)"/><text x="25.3467%" y="47.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.26%)</title><rect x="25.0967%" y="133" width="0.2646%" height="15" fill="rgb(227,98,0)"/><text x="25.3467%" y="143.50"></text></g><g><title>core::mem::drop (7 samples, 0.14%)</title><rect x="25.2188%" y="117" width="0.1425%" height="15" fill="rgb(207,7,3)"/><text x="25.4688%" y="127.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.14%)</title><rect x="25.2188%" y="101" width="0.1425%" height="15" fill="rgb(206,98,19)"/><text x="25.4688%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.14%)</title><rect x="25.2188%" y="85" width="0.1425%" height="15" fill="rgb(217,5,26)"/><text x="25.4688%" y="95.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.14%)</title><rect x="25.2188%" y="69" width="0.1425%" height="15" fill="rgb(235,190,38)"/><text x="25.4688%" y="79.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.14%)</title><rect x="25.2188%" y="53" width="0.1425%" height="15" fill="rgb(247,86,24)"/><text x="25.4688%" y="63.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="25.3613%" y="133" width="0.0407%" height="15" fill="rgb(205,101,16)"/><text x="25.6113%" y="143.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="25.3613%" y="117" width="0.0407%" height="15" fill="rgb(246,168,33)"/><text x="25.6113%" y="127.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="25.3613%" y="101" width="0.0407%" height="15" fill="rgb(231,114,1)"/><text x="25.6113%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (3 samples, 0.06%)</title><rect x="25.4020%" y="117" width="0.0611%" height="15" fill="rgb(207,184,53)"/><text x="25.6520%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (3 samples, 0.06%)</title><rect x="25.4020%" y="101" width="0.0611%" height="15" fill="rgb(224,95,51)"/><text x="25.6520%" y="111.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (45 samples, 0.92%)</title><rect x="24.6692%" y="213" width="0.9159%" height="15" fill="rgb(212,188,45)"/><text x="24.9192%" y="223.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (45 samples, 0.92%)</title><rect x="24.6692%" y="197" width="0.9159%" height="15" fill="rgb(223,154,38)"/><text x="24.9192%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (25 samples, 0.51%)</title><rect x="25.0763%" y="181" width="0.5089%" height="15" fill="rgb(251,22,52)"/><text x="25.3263%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (25 samples, 0.51%)</title><rect x="25.0763%" y="165" width="0.5089%" height="15" fill="rgb(229,209,22)"/><text x="25.3263%" y="175.50"></text></g><g><title>glommio::sys::uring::consume_source::{{closure}} (24 samples, 0.49%)</title><rect x="25.0967%" y="149" width="0.4885%" height="15" fill="rgb(234,138,34)"/><text x="25.3467%" y="159.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::dealloc (9 samples, 0.18%)</title><rect x="25.4020%" y="133" width="0.1832%" height="15" fill="rgb(212,95,11)"/><text x="25.6520%" y="143.50"></text></g><g><title>core::mem::replace (6 samples, 0.12%)</title><rect x="25.4631%" y="117" width="0.1221%" height="15" fill="rgb(240,179,47)"/><text x="25.7131%" y="127.50"></text></g><g><title>core::mem::swap (6 samples, 0.12%)</title><rect x="25.4631%" y="101" width="0.1221%" height="15" fill="rgb(240,163,11)"/><text x="25.7131%" y="111.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.12%)</title><rect x="25.4631%" y="85" width="0.1221%" height="15" fill="rgb(236,37,12)"/><text x="25.7131%" y="95.50"></text></g><g><title>core::ptr::read (6 samples, 0.12%)</title><rect x="25.4631%" y="69" width="0.1221%" height="15" fill="rgb(232,164,16)"/><text x="25.7131%" y="79.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="26.1144%" y="197" width="0.0407%" height="15" fill="rgb(244,205,15)"/><text x="26.3644%" y="207.50"></text></g><g><title>io_uring_get_sqe (2 samples, 0.04%)</title><rect x="26.3586%" y="181" width="0.0407%" height="15" fill="rgb(223,117,47)"/><text x="26.6086%" y="191.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (15 samples, 0.31%)</title><rect x="26.1551%" y="197" width="0.3053%" height="15" fill="rgb(244,107,35)"/><text x="26.4051%" y="207.50"></text></g><g><title>rust_io_uring_prep_write_fixed (3 samples, 0.06%)</title><rect x="26.3993%" y="181" width="0.0611%" height="15" fill="rgb(205,140,8)"/><text x="26.6493%" y="191.50"></text></g><g><title>io_uring_prep_write_fixed (3 samples, 0.06%)</title><rect x="26.3993%" y="165" width="0.0611%" height="15" fill="rgb(228,84,46)"/><text x="26.6493%" y="175.50"></text></g><g><title>io_uring_prep_rw (3 samples, 0.06%)</title><rect x="26.3993%" y="149" width="0.0611%" height="15" fill="rgb(254,188,9)"/><text x="26.6493%" y="159.50"></text></g><g><title>__io_uring_flush_sq (4 samples, 0.08%)</title><rect x="26.4808%" y="165" width="0.0814%" height="15" fill="rgb(206,112,54)"/><text x="26.7308%" y="175.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="26.6436%" y="133" width="0.0204%" height="15" fill="rgb(216,84,49)"/><text x="26.8936%" y="143.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (116 samples, 2.36%)</title><rect x="24.5471%" y="261" width="2.3611%" height="15" fill="rgb(214,194,35)"/><text x="24.7971%" y="271.50">gl..</text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (114 samples, 2.32%)</title><rect x="24.5878%" y="245" width="2.3204%" height="15" fill="rgb(249,28,3)"/><text x="24.8378%" y="255.50">g..</text></g><g><title>glommio::sys::uring::Reactor::simple_poll (114 samples, 2.32%)</title><rect x="24.5878%" y="229" width="2.3204%" height="15" fill="rgb(222,56,52)"/><text x="24.8378%" y="239.50">g..</text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (65 samples, 1.32%)</title><rect x="25.5852%" y="213" width="1.3230%" height="15" fill="rgb(245,217,50)"/><text x="25.8352%" y="223.50"></text></g><g><title>io_uring_submit (22 samples, 0.45%)</title><rect x="26.4604%" y="197" width="0.4478%" height="15" fill="rgb(213,201,24)"/><text x="26.7104%" y="207.50"></text></g><g><title>__io_uring_submit_and_wait (21 samples, 0.43%)</title><rect x="26.4808%" y="181" width="0.4274%" height="15" fill="rgb(248,116,28)"/><text x="26.7308%" y="191.50"></text></g><g><title>__io_uring_submit (17 samples, 0.35%)</title><rect x="26.5622%" y="165" width="0.3460%" height="15" fill="rgb(219,72,43)"/><text x="26.8122%" y="175.50"></text></g><g><title>__sys_io_uring_enter2 (16 samples, 0.33%)</title><rect x="26.5825%" y="149" width="0.3257%" height="15" fill="rgb(209,138,14)"/><text x="26.8325%" y="159.50"></text></g><g><title>syscall (12 samples, 0.24%)</title><rect x="26.6640%" y="133" width="0.2442%" height="15" fill="rgb(222,18,33)"/><text x="26.9140%" y="143.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.02%)</title><rect x="26.9082%" y="245" width="0.0204%" height="15" fill="rgb(213,199,7)"/><text x="27.1582%" y="255.50"></text></g><g><title>glommio::sys::dma_buffer::DmaBuffer::as_ptr (3 samples, 0.06%)</title><rect x="26.9286%" y="245" width="0.0611%" height="15" fill="rgb(250,110,10)"/><text x="27.1786%" y="255.50"></text></g><g><title>glommio::sys::dma_buffer::BufferStorage::as_ptr (3 samples, 0.06%)</title><rect x="26.9286%" y="229" width="0.0611%" height="15" fill="rgb(248,123,6)"/><text x="27.1786%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="27.1728%" y="165" width="0.0204%" height="15" fill="rgb(206,91,31)"/><text x="27.4228%" y="175.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="27.1728%" y="149" width="0.0204%" height="15" fill="rgb(211,154,13)"/><text x="27.4228%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="27.1932%" y="165" width="0.0407%" height="15" fill="rgb(225,148,7)"/><text x="27.4432%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="27.1932%" y="149" width="0.0407%" height="15" fill="rgb(220,160,43)"/><text x="27.4432%" y="159.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="27.1932%" y="133" width="0.0407%" height="15" fill="rgb(213,52,39)"/><text x="27.4432%" y="143.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="27.1932%" y="117" width="0.0407%" height="15" fill="rgb(243,137,7)"/><text x="27.4432%" y="127.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="27.1932%" y="101" width="0.0407%" height="15" fill="rgb(230,79,13)"/><text x="27.4432%" y="111.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="27.1932%" y="85" width="0.0407%" height="15" fill="rgb(247,105,23)"/><text x="27.4432%" y="95.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="27.2339%" y="165" width="0.0407%" height="15" fill="rgb(223,179,41)"/><text x="27.4839%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="27.2339%" y="149" width="0.0407%" height="15" fill="rgb(218,9,34)"/><text x="27.4839%" y="159.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="27.2339%" y="133" width="0.0407%" height="15" fill="rgb(222,106,8)"/><text x="27.4839%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="27.2542%" y="117" width="0.0204%" height="15" fill="rgb(211,220,0)"/><text x="27.5042%" y="127.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="27.2542%" y="101" width="0.0204%" height="15" fill="rgb(229,52,16)"/><text x="27.5042%" y="111.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="27.2542%" y="85" width="0.0204%" height="15" fill="rgb(212,155,18)"/><text x="27.5042%" y="95.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="27.2542%" y="69" width="0.0204%" height="15" fill="rgb(242,21,14)"/><text x="27.5042%" y="79.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="27.2542%" y="53" width="0.0204%" height="15" fill="rgb(222,19,48)"/><text x="27.5042%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="27.2542%" y="37" width="0.0204%" height="15" fill="rgb(232,45,27)"/><text x="27.5042%" y="47.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (13 samples, 0.26%)</title><rect x="27.1728%" y="181" width="0.2646%" height="15" fill="rgb(249,103,42)"/><text x="27.4228%" y="191.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (8 samples, 0.16%)</title><rect x="27.2746%" y="165" width="0.1628%" height="15" fill="rgb(246,81,33)"/><text x="27.5246%" y="175.50"></text></g><g><title>core::mem::replace (7 samples, 0.14%)</title><rect x="27.2949%" y="149" width="0.1425%" height="15" fill="rgb(252,33,42)"/><text x="27.5449%" y="159.50"></text></g><g><title>core::mem::swap (7 samples, 0.14%)</title><rect x="27.2949%" y="133" width="0.1425%" height="15" fill="rgb(209,212,41)"/><text x="27.5449%" y="143.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.14%)</title><rect x="27.2949%" y="117" width="0.1425%" height="15" fill="rgb(207,154,6)"/><text x="27.5449%" y="127.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.14%)</title><rect x="27.2949%" y="101" width="0.1425%" height="15" fill="rgb(223,64,47)"/><text x="27.5449%" y="111.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (534 samples, 10.87%)</title><rect x="16.5886%" y="309" width="10.8691%" height="15" fill="rgb(211,161,38)"/><text x="16.8386%" y="319.50">&lt;core::future::f..</text></g><g><title>glommio::net::tcp_socket::TcpStream::write_zc::{{closure}} (302 samples, 6.15%)</title><rect x="21.3108%" y="293" width="6.1470%" height="15" fill="rgb(219,138,40)"/><text x="21.5608%" y="303.50">glommio:..</text></g><g><title>glommio::parking::Reactor::rushed_send_dma (169 samples, 3.44%)</title><rect x="24.0179%" y="277" width="3.4399%" height="15" fill="rgb(241,228,46)"/><text x="24.2679%" y="287.50">glo..</text></g><g><title>glommio::sys::uring::Reactor::send_dma (27 samples, 0.55%)</title><rect x="26.9082%" y="261" width="0.5496%" height="15" fill="rgb(223,209,38)"/><text x="27.1582%" y="271.50"></text></g><g><title>glommio::sys::uring::Reactor::queue_standard_request (23 samples, 0.47%)</title><rect x="26.9896%" y="245" width="0.4681%" height="15" fill="rgb(236,164,45)"/><text x="27.2396%" y="255.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (22 samples, 0.45%)</title><rect x="27.0100%" y="229" width="0.4478%" height="15" fill="rgb(231,15,5)"/><text x="27.2600%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.28%)</title><rect x="27.1728%" y="213" width="0.2850%" height="15" fill="rgb(252,35,15)"/><text x="27.4228%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.28%)</title><rect x="27.1728%" y="197" width="0.2850%" height="15" fill="rgb(248,181,18)"/><text x="27.4228%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="27.4374%" y="181" width="0.0204%" height="15" fill="rgb(233,39,42)"/><text x="27.6874%" y="191.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="27.4578%" y="277" width="0.0204%" height="15" fill="rgb(238,110,33)"/><text x="27.7078%" y="287.50"></text></g><g><title>&lt;glommio::io::read_result::ReadResult as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="27.4578%" y="309" width="0.0407%" height="15" fill="rgb(233,195,10)"/><text x="27.7078%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (2 samples, 0.04%)</title><rect x="27.4578%" y="293" width="0.0407%" height="15" fill="rgb(254,105,3)"/><text x="27.7078%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="27.4781%" y="277" width="0.0204%" height="15" fill="rgb(221,225,9)"/><text x="27.7281%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref::{{closure}} (1 samples, 0.02%)</title><rect x="27.4781%" y="261" width="0.0204%" height="15" fill="rgb(224,227,45)"/><text x="27.7281%" y="271.50"></text></g><g><title>&lt;glommio::io::read_result::ReadResultInner as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="27.4781%" y="245" width="0.0204%" height="15" fill="rgb(229,198,43)"/><text x="27.7281%" y="255.50"></text></g><g><title>glommio::sys::dma_buffer::DmaBuffer::as_bytes (1 samples, 0.02%)</title><rect x="27.4781%" y="229" width="0.0204%" height="15" fill="rgb(206,209,35)"/><text x="27.7281%" y="239.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.04%)</title><rect x="27.4985%" y="309" width="0.0407%" height="15" fill="rgb(245,195,53)"/><text x="27.7485%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="27.4985%" y="293" width="0.0407%" height="15" fill="rgb(240,92,26)"/><text x="27.7485%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.04%)</title><rect x="27.4985%" y="277" width="0.0407%" height="15" fill="rgb(207,40,23)"/><text x="27.7485%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (5 samples, 0.10%)</title><rect x="27.5799%" y="229" width="0.1018%" height="15" fill="rgb(223,111,35)"/><text x="27.8299%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.10%)</title><rect x="27.5799%" y="213" width="0.1018%" height="15" fill="rgb(229,147,28)"/><text x="27.8299%" y="223.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.10%)</title><rect x="27.5799%" y="197" width="0.1018%" height="15" fill="rgb(211,29,28)"/><text x="27.8299%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.10%)</title><rect x="27.5799%" y="181" width="0.1018%" height="15" fill="rgb(228,72,33)"/><text x="27.8299%" y="191.50"></text></g><g><title>__GI___libc_free (5 samples, 0.10%)</title><rect x="27.5799%" y="165" width="0.1018%" height="15" fill="rgb(205,214,31)"/><text x="27.8299%" y="175.50"></text></g><g><title>_int_free (4 samples, 0.08%)</title><rect x="27.6002%" y="149" width="0.0814%" height="15" fill="rgb(224,111,15)"/><text x="27.8502%" y="159.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.12%)</title><rect x="27.5799%" y="261" width="0.1221%" height="15" fill="rgb(253,21,26)"/><text x="27.8299%" y="271.50"></text></g><g><title>&lt;alloc::rc::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="27.5799%" y="245" width="0.1221%" height="15" fill="rgb(245,139,43)"/><text x="27.8299%" y="255.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::inner (1 samples, 0.02%)</title><rect x="27.6817%" y="229" width="0.0204%" height="15" fill="rgb(252,170,7)"/><text x="27.9317%" y="239.50"></text></g><g><title>alloc::rc::is_dangling (1 samples, 0.02%)</title><rect x="27.6817%" y="213" width="0.0204%" height="15" fill="rgb(231,118,14)"/><text x="27.9317%" y="223.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (614 samples, 12.50%)</title><rect x="15.2656%" y="357" width="12.4975%" height="15" fill="rgb(238,83,0)"/><text x="15.5156%" y="367.50">glommio::task::raw:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (597 samples, 12.15%)</title><rect x="15.6116%" y="341" width="12.1514%" height="15" fill="rgb(221,39,39)"/><text x="15.8616%" y="351.50">&lt;core::future::fro..</text></g><g><title>tcp_zero_copy::benchmark::{{closure}}::{{closure}}::{{closure}}::{{closure}} (597 samples, 12.15%)</title><rect x="15.6116%" y="325" width="12.1514%" height="15" fill="rgb(222,119,46)"/><text x="15.8616%" y="335.50">tcp_zero_copy::ben..</text></g><g><title>glommio::io::read_result::ReadResult::into_inner (11 samples, 0.22%)</title><rect x="27.5392%" y="309" width="0.2239%" height="15" fill="rgb(222,165,49)"/><text x="27.7892%" y="319.50"></text></g><g><title>glommio::io::read_result::ReadResultInner::into_inner (10 samples, 0.20%)</title><rect x="27.5595%" y="293" width="0.2035%" height="15" fill="rgb(219,113,52)"/><text x="27.8095%" y="303.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::try_unwrap (10 samples, 0.20%)</title><rect x="27.5595%" y="277" width="0.2035%" height="15" fill="rgb(214,7,15)"/><text x="27.8095%" y="287.50"></text></g><g><title>core::ptr::read (3 samples, 0.06%)</title><rect x="27.7020%" y="261" width="0.0611%" height="15" fill="rgb(235,32,4)"/><text x="27.9520%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.02%)</title><rect x="27.8241%" y="293" width="0.0204%" height="15" fill="rgb(238,90,54)"/><text x="28.0741%" y="303.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.10%)</title><rect x="27.8241%" y="341" width="0.1018%" height="15" fill="rgb(213,208,19)"/><text x="28.0741%" y="351.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.10%)</title><rect x="27.8241%" y="325" width="0.1018%" height="15" fill="rgb(233,156,4)"/><text x="28.0741%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (5 samples, 0.10%)</title><rect x="27.8241%" y="309" width="0.1018%" height="15" fill="rgb(207,194,5)"/><text x="28.0741%" y="319.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.08%)</title><rect x="27.8445%" y="293" width="0.0814%" height="15" fill="rgb(206,111,30)"/><text x="28.0945%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3 samples, 0.06%)</title><rect x="27.8648%" y="277" width="0.0611%" height="15" fill="rgb(243,70,54)"/><text x="28.1148%" y="287.50"></text></g><g><title>core::cmp::PartialOrd::ge (3 samples, 0.06%)</title><rect x="27.8648%" y="261" width="0.0611%" height="15" fill="rgb(242,28,8)"/><text x="28.1148%" y="271.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.06%)</title><rect x="27.8648%" y="245" width="0.0611%" height="15" fill="rgb(219,106,18)"/><text x="28.1148%" y="255.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (3 samples, 0.06%)</title><rect x="27.8648%" y="229" width="0.0611%" height="15" fill="rgb(244,222,10)"/><text x="28.1148%" y="239.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (3 samples, 0.06%)</title><rect x="27.8648%" y="213" width="0.0611%" height="15" fill="rgb(236,179,52)"/><text x="28.1148%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.02%)</title><rect x="27.9056%" y="197" width="0.0204%" height="15" fill="rgb(213,23,39)"/><text x="28.1556%" y="207.50"></text></g><g><title>glommio::executor::LocalExecutor::run_task_queues (742 samples, 15.10%)</title><rect x="13.2506%" y="373" width="15.1028%" height="15" fill="rgb(238,48,10)"/><text x="13.5006%" y="383.50">glommio::executor::Loca..</text></g><g><title>std::time::Instant::elapsed (29 samples, 0.59%)</title><rect x="27.7631%" y="357" width="0.5903%" height="15" fill="rgb(251,196,23)"/><text x="28.0131%" y="367.50"></text></g><g><title>std::time::Instant::now (21 samples, 0.43%)</title><rect x="27.9259%" y="341" width="0.4274%" height="15" fill="rgb(250,152,24)"/><text x="28.1759%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (21 samples, 0.43%)</title><rect x="27.9259%" y="325" width="0.4274%" height="15" fill="rgb(209,150,17)"/><text x="28.1759%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.43%)</title><rect x="27.9259%" y="309" width="0.4274%" height="15" fill="rgb(234,202,34)"/><text x="28.1759%" y="319.50"></text></g><g><title>__clock_gettime_2 (16 samples, 0.33%)</title><rect x="28.0277%" y="293" width="0.3257%" height="15" fill="rgb(253,148,53)"/><text x="28.2777%" y="303.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.22%)</title><rect x="28.1295%" y="277" width="0.2239%" height="15" fill="rgb(218,129,16)"/><text x="28.3795%" y="287.50"></text></g><g><title>[[vdso]] (4 samples, 0.08%)</title><rect x="28.2719%" y="261" width="0.0814%" height="15" fill="rgb(216,85,19)"/><text x="28.5219%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="30.3277%" y="341" width="0.0611%" height="15" fill="rgb(235,228,7)"/><text x="30.5777%" y="351.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (23 samples, 0.47%)</title><rect x="30.3888%" y="341" width="0.4681%" height="15" fill="rgb(245,175,0)"/><text x="30.6388%" y="351.50"></text></g><g><title>io_uring_peek_batch_cqe (21 samples, 0.43%)</title><rect x="30.4295%" y="325" width="0.4274%" height="15" fill="rgb(208,168,36)"/><text x="30.6795%" y="335.50"></text></g><g><title>io_uring_cq_ready (16 samples, 0.33%)</title><rect x="30.5312%" y="309" width="0.3257%" height="15" fill="rgb(246,171,24)"/><text x="30.7812%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="31.0808%" y="325" width="0.2035%" height="15" fill="rgb(215,142,24)"/><text x="31.3308%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="31.2640%" y="309" width="0.0204%" height="15" fill="rgb(250,187,7)"/><text x="31.5140%" y="319.50"></text></g><g><title>__GI___libc_free (5 samples, 0.10%)</title><rect x="31.2843%" y="325" width="0.1018%" height="15" fill="rgb(228,66,33)"/><text x="31.5343%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.02%)</title><rect x="31.3658%" y="309" width="0.0204%" height="15" fill="rgb(234,215,21)"/><text x="31.6158%" y="319.50"></text></g><g><title>io_uring_peek_batch_cqe (42 samples, 0.85%)</title><rect x="31.3861%" y="325" width="0.8549%" height="15" fill="rgb(222,191,20)"/><text x="31.6361%" y="335.50"></text></g><g><title>io_uring_cq_ready (12 samples, 0.24%)</title><rect x="31.9967%" y="309" width="0.2442%" height="15" fill="rgb(245,79,54)"/><text x="32.2467%" y="319.50"></text></g><g><title>rust_io_uring_cqe_seen (8 samples, 0.16%)</title><rect x="32.2410%" y="325" width="0.1628%" height="15" fill="rgb(240,10,37)"/><text x="32.4910%" y="335.50"></text></g><g><title>io_uring_cqe_seen (8 samples, 0.16%)</title><rect x="32.2410%" y="309" width="0.1628%" height="15" fill="rgb(214,192,32)"/><text x="32.4910%" y="319.50"></text></g><g><title>io_uring_cq_advance (3 samples, 0.06%)</title><rect x="32.3428%" y="293" width="0.0611%" height="15" fill="rgb(209,36,54)"/><text x="32.5928%" y="303.50"></text></g><g><title>io_uring_cq_advance (3 samples, 0.06%)</title><rect x="32.3428%" y="277" width="0.0611%" height="15" fill="rgb(220,10,11)"/><text x="32.5928%" y="287.50"></text></g><g><title>glommio::sys::uring::SOURCE_MAP::__getit (4 samples, 0.08%)</title><rect x="32.4242%" y="293" width="0.0814%" height="15" fill="rgb(221,106,17)"/><text x="32.6742%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.08%)</title><rect x="32.4242%" y="277" width="0.0814%" height="15" fill="rgb(251,142,44)"/><text x="32.6742%" y="287.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (4 samples, 0.08%)</title><rect x="32.4242%" y="261" width="0.0814%" height="15" fill="rgb(238,13,15)"/><text x="32.6742%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.08%)</title><rect x="32.4242%" y="245" width="0.0814%" height="15" fill="rgb(208,107,27)"/><text x="32.6742%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (9 samples, 0.18%)</title><rect x="32.5260%" y="261" width="0.1832%" height="15" fill="rgb(205,136,37)"/><text x="32.7760%" y="271.50"></text></g><g><title>core::mem::replace (9 samples, 0.18%)</title><rect x="32.5260%" y="245" width="0.1832%" height="15" fill="rgb(250,205,27)"/><text x="32.7760%" y="255.50"></text></g><g><title>core::mem::swap (9 samples, 0.18%)</title><rect x="32.5260%" y="229" width="0.1832%" height="15" fill="rgb(210,80,43)"/><text x="32.7760%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (9 samples, 0.18%)</title><rect x="32.5260%" y="213" width="0.1832%" height="15" fill="rgb(247,160,36)"/><text x="32.7760%" y="223.50"></text></g><g><title>core::ptr::read (9 samples, 0.18%)</title><rect x="32.5260%" y="197" width="0.1832%" height="15" fill="rgb(234,13,49)"/><text x="32.7760%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.18%)</title><rect x="32.5260%" y="181" width="0.1832%" height="15" fill="rgb(234,122,0)"/><text x="32.7760%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.31%)</title><rect x="32.5260%" y="277" width="0.3053%" height="15" fill="rgb(207,146,38)"/><text x="32.7760%" y="287.50"></text></g><g><title>core::mem::drop (6 samples, 0.12%)</title><rect x="32.7091%" y="261" width="0.1221%" height="15" fill="rgb(207,177,25)"/><text x="32.9591%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.12%)</title><rect x="32.7091%" y="245" width="0.1221%" height="15" fill="rgb(211,178,42)"/><text x="32.9591%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.12%)</title><rect x="32.7091%" y="229" width="0.1221%" height="15" fill="rgb(230,69,54)"/><text x="32.9591%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.12%)</title><rect x="32.7091%" y="213" width="0.1221%" height="15" fill="rgb(214,135,41)"/><text x="32.9591%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="32.7091%" y="197" width="0.1221%" height="15" fill="rgb(237,67,25)"/><text x="32.9591%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.12%)</title><rect x="32.8313%" y="277" width="0.1221%" height="15" fill="rgb(222,189,50)"/><text x="33.0813%" y="287.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.12%)</title><rect x="32.8313%" y="261" width="0.1221%" height="15" fill="rgb(245,148,34)"/><text x="33.0813%" y="271.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.12%)</title><rect x="32.8313%" y="245" width="0.1221%" height="15" fill="rgb(222,29,6)"/><text x="33.0813%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (16 samples, 0.33%)</title><rect x="32.9534%" y="261" width="0.3257%" height="15" fill="rgb(221,189,43)"/><text x="33.2034%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.33%)</title><rect x="32.9534%" y="245" width="0.3257%" height="15" fill="rgb(207,36,27)"/><text x="33.2034%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="33.2791%" y="213" width="0.0407%" height="15" fill="rgb(217,90,24)"/><text x="33.5291%" y="223.50"></text></g><g><title>core::mem::replace (12 samples, 0.24%)</title><rect x="33.2791%" y="261" width="0.2442%" height="15" fill="rgb(224,66,35)"/><text x="33.5291%" y="271.50"></text></g><g><title>core::mem::swap (12 samples, 0.24%)</title><rect x="33.2791%" y="245" width="0.2442%" height="15" fill="rgb(221,13,50)"/><text x="33.5291%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (12 samples, 0.24%)</title><rect x="33.2791%" y="229" width="0.2442%" height="15" fill="rgb(236,68,49)"/><text x="33.5291%" y="239.50"></text></g><g><title>core::ptr::read (10 samples, 0.20%)</title><rect x="33.3198%" y="213" width="0.2035%" height="15" fill="rgb(229,146,28)"/><text x="33.5698%" y="223.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (133 samples, 2.71%)</title><rect x="30.8569%" y="341" width="2.7071%" height="15" fill="rgb(225,31,38)"/><text x="31.1069%" y="351.50">&lt;g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (57 samples, 1.16%)</title><rect x="32.4038%" y="325" width="1.1602%" height="15" fill="rgb(250,208,3)"/><text x="32.6538%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57 samples, 1.16%)</title><rect x="32.4038%" y="309" width="1.1602%" height="15" fill="rgb(246,54,23)"/><text x="32.6538%" y="319.50"></text></g><g><title>glommio::sys::uring::consume_source::{{closure}} (52 samples, 1.06%)</title><rect x="32.5056%" y="293" width="1.0584%" height="15" fill="rgb(243,76,11)"/><text x="32.7556%" y="303.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::dealloc (30 samples, 0.61%)</title><rect x="32.9534%" y="277" width="0.6106%" height="15" fill="rgb(245,21,50)"/><text x="33.2034%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="33.5233%" y="261" width="0.0407%" height="15" fill="rgb(228,9,43)"/><text x="33.7733%" y="271.50"></text></g><g><title>__sys_io_uring_enter2 (2 samples, 0.04%)</title><rect x="33.5640%" y="341" width="0.0407%" height="15" fill="rgb(208,100,47)"/><text x="33.8140%" y="351.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.12%)</title><rect x="33.6047%" y="325" width="0.1221%" height="15" fill="rgb(232,26,8)"/><text x="33.8547%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.12%)</title><rect x="33.6047%" y="309" width="0.1221%" height="15" fill="rgb(216,166,38)"/><text x="33.8547%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.12%)</title><rect x="33.6047%" y="293" width="0.1221%" height="15" fill="rgb(251,202,51)"/><text x="33.8547%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="33.6861%" y="277" width="0.0407%" height="15" fill="rgb(254,216,34)"/><text x="33.9361%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="33.6861%" y="261" width="0.0407%" height="15" fill="rgb(251,32,27)"/><text x="33.9361%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="33.6861%" y="245" width="0.0407%" height="15" fill="rgb(208,127,28)"/><text x="33.9361%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="33.6861%" y="229" width="0.0407%" height="15" fill="rgb(224,137,22)"/><text x="33.9361%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="33.6861%" y="213" width="0.0407%" height="15" fill="rgb(254,70,32)"/><text x="33.9361%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="33.6861%" y="197" width="0.0407%" height="15" fill="rgb(229,75,37)"/><text x="33.9361%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="33.7268%" y="325" width="0.0611%" height="15" fill="rgb(252,64,23)"/><text x="33.9768%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="33.7268%" y="309" width="0.0611%" height="15" fill="rgb(232,162,48)"/><text x="33.9768%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="33.7268%" y="293" width="0.0611%" height="15" fill="rgb(246,160,12)"/><text x="33.9768%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.06%)</title><rect x="33.7268%" y="277" width="0.0611%" height="15" fill="rgb(247,166,0)"/><text x="33.9768%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="33.7268%" y="261" width="0.0611%" height="15" fill="rgb(249,219,21)"/><text x="33.9768%" y="271.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="33.7268%" y="245" width="0.0611%" height="15" fill="rgb(205,209,3)"/><text x="33.9768%" y="255.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="33.7268%" y="229" width="0.0611%" height="15" fill="rgb(243,44,1)"/><text x="33.9768%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="33.7268%" y="213" width="0.0611%" height="15" fill="rgb(206,159,16)"/><text x="33.9768%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="33.7268%" y="197" width="0.0611%" height="15" fill="rgb(244,77,30)"/><text x="33.9768%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="33.8083%" y="309" width="0.0204%" height="15" fill="rgb(218,69,12)"/><text x="34.0583%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="33.8286%" y="309" width="0.0204%" height="15" fill="rgb(212,87,7)"/><text x="34.0786%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (1 samples, 0.02%)</title><rect x="33.8490%" y="309" width="0.0204%" height="15" fill="rgb(245,114,25)"/><text x="34.0990%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (1 samples, 0.02%)</title><rect x="33.8490%" y="293" width="0.0204%" height="15" fill="rgb(210,61,42)"/><text x="34.0990%" y="303.50"></text></g><g><title>core::mem::take (3 samples, 0.06%)</title><rect x="33.8693%" y="309" width="0.0611%" height="15" fill="rgb(211,52,33)"/><text x="34.1193%" y="319.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="33.8693%" y="293" width="0.0611%" height="15" fill="rgb(234,58,33)"/><text x="34.1193%" y="303.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="33.8693%" y="277" width="0.0611%" height="15" fill="rgb(220,115,36)"/><text x="34.1193%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="33.8693%" y="261" width="0.0611%" height="15" fill="rgb(243,153,54)"/><text x="34.1193%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="33.8693%" y="245" width="0.0611%" height="15" fill="rgb(251,47,18)"/><text x="34.1193%" y="255.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (18 samples, 0.37%)</title><rect x="33.6047%" y="341" width="0.3664%" height="15" fill="rgb(242,102,42)"/><text x="33.8547%" y="351.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (9 samples, 0.18%)</title><rect x="33.7879%" y="325" width="0.1832%" height="15" fill="rgb(234,31,38)"/><text x="34.0379%" y="335.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (2 samples, 0.04%)</title><rect x="33.9304%" y="309" width="0.0407%" height="15" fill="rgb(221,117,51)"/><text x="34.1804%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="33.9915%" y="325" width="0.0407%" height="15" fill="rgb(212,20,18)"/><text x="34.2415%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="33.9915%" y="309" width="0.0407%" height="15" fill="rgb(245,133,36)"/><text x="34.2415%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="33.9915%" y="293" width="0.0407%" height="15" fill="rgb(212,6,19)"/><text x="34.2415%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="34.0322%" y="325" width="0.0407%" height="15" fill="rgb(218,1,36)"/><text x="34.2822%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="34.0322%" y="309" width="0.0407%" height="15" fill="rgb(246,84,54)"/><text x="34.2822%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="34.0322%" y="293" width="0.0407%" height="15" fill="rgb(242,110,6)"/><text x="34.2822%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="34.0322%" y="277" width="0.0407%" height="15" fill="rgb(214,47,5)"/><text x="34.2822%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="34.0322%" y="261" width="0.0407%" height="15" fill="rgb(218,159,25)"/><text x="34.2822%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="34.0322%" y="245" width="0.0407%" height="15" fill="rgb(215,211,28)"/><text x="34.2822%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="34.0322%" y="229" width="0.0407%" height="15" fill="rgb(238,59,32)"/><text x="34.2822%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="34.0322%" y="213" width="0.0407%" height="15" fill="rgb(226,82,3)"/><text x="34.2822%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="34.0322%" y="197" width="0.0407%" height="15" fill="rgb(240,164,32)"/><text x="34.2822%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="34.1136%" y="309" width="0.0204%" height="15" fill="rgb(232,46,7)"/><text x="34.3636%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="34.1136%" y="293" width="0.0204%" height="15" fill="rgb(229,129,53)"/><text x="34.3636%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (2 samples, 0.04%)</title><rect x="34.1339%" y="309" width="0.0407%" height="15" fill="rgb(234,188,29)"/><text x="34.3839%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (2 samples, 0.04%)</title><rect x="34.1339%" y="293" width="0.0407%" height="15" fill="rgb(246,141,4)"/><text x="34.3839%" y="303.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="34.1746%" y="309" width="0.0204%" height="15" fill="rgb(229,23,39)"/><text x="34.4246%" y="319.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="34.1746%" y="293" width="0.0204%" height="15" fill="rgb(206,12,3)"/><text x="34.4246%" y="303.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="34.1746%" y="277" width="0.0204%" height="15" fill="rgb(252,226,20)"/><text x="34.4246%" y="287.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="34.1746%" y="261" width="0.0204%" height="15" fill="rgb(216,123,35)"/><text x="34.4246%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="34.1950%" y="309" width="0.0204%" height="15" fill="rgb(212,68,40)"/><text x="34.4450%" y="319.50"></text></g><g><title>glommio::parking::Reactor::process_timers (2 samples, 0.04%)</title><rect x="34.2153%" y="309" width="0.0407%" height="15" fill="rgb(254,125,32)"/><text x="34.4653%" y="319.50"></text></g><g><title>__clock_gettime_2 (44 samples, 0.90%)</title><rect x="34.2561%" y="261" width="0.8956%" height="15" fill="rgb(253,97,22)"/><text x="34.5061%" y="271.50"></text></g><g><title>__vdso_clock_gettime (30 samples, 0.61%)</title><rect x="34.5410%" y="245" width="0.6106%" height="15" fill="rgb(241,101,14)"/><text x="34.7910%" y="255.50"></text></g><g><title>[[vdso]] (19 samples, 0.39%)</title><rect x="34.7649%" y="229" width="0.3867%" height="15" fill="rgb(238,103,29)"/><text x="35.0149%" y="239.50"></text></g><g><title>glommio::parking::Reactor::process_timers (59 samples, 1.20%)</title><rect x="33.9711%" y="341" width="1.2009%" height="15" fill="rgb(233,195,47)"/><text x="34.2211%" y="351.50"></text></g><g><title>glommio::parking::Timers::process_timers (54 samples, 1.10%)</title><rect x="34.0729%" y="325" width="1.0991%" height="15" fill="rgb(246,218,30)"/><text x="34.3229%" y="335.50"></text></g><g><title>std::time::Instant::now (45 samples, 0.92%)</title><rect x="34.2561%" y="309" width="0.9159%" height="15" fill="rgb(219,145,47)"/><text x="34.5061%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (45 samples, 0.92%)</title><rect x="34.2561%" y="293" width="0.9159%" height="15" fill="rgb(243,12,26)"/><text x="34.5061%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (45 samples, 0.92%)</title><rect x="34.2561%" y="277" width="0.9159%" height="15" fill="rgb(214,87,16)"/><text x="34.5061%" y="287.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.02%)</title><rect x="35.1516%" y="261" width="0.0204%" height="15" fill="rgb(208,99,42)"/><text x="35.4016%" y="271.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="35.1516%" y="245" width="0.0204%" height="15" fill="rgb(253,99,2)"/><text x="35.4016%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::take (3 samples, 0.06%)</title><rect x="35.1923%" y="325" width="0.0611%" height="15" fill="rgb(220,168,23)"/><text x="35.4423%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="35.1923%" y="309" width="0.0611%" height="15" fill="rgb(242,38,24)"/><text x="35.4423%" y="319.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="35.1923%" y="293" width="0.0611%" height="15" fill="rgb(225,182,9)"/><text x="35.4423%" y="303.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="35.1923%" y="277" width="0.0611%" height="15" fill="rgb(243,178,37)"/><text x="35.4423%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="35.1923%" y="261" width="0.0611%" height="15" fill="rgb(232,139,19)"/><text x="35.4423%" y="271.50"></text></g><g><title>core::ptr::read (3 samples, 0.06%)</title><rect x="35.1923%" y="245" width="0.0611%" height="15" fill="rgb(225,201,24)"/><text x="35.4423%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="35.1923%" y="229" width="0.0611%" height="15" fill="rgb(221,47,46)"/><text x="35.4423%" y="239.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.06%)</title><rect x="35.2534%" y="325" width="0.0611%" height="15" fill="rgb(249,23,13)"/><text x="35.5034%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.06%)</title><rect x="35.2534%" y="309" width="0.0611%" height="15" fill="rgb(219,9,5)"/><text x="35.5034%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.06%)</title><rect x="35.2534%" y="293" width="0.0611%" height="15" fill="rgb(254,171,16)"/><text x="35.5034%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="35.3145%" y="325" width="0.0204%" height="15" fill="rgb(230,171,20)"/><text x="35.5645%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="35.3145%" y="309" width="0.0204%" height="15" fill="rgb(210,71,41)"/><text x="35.5645%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="35.3145%" y="293" width="0.0204%" height="15" fill="rgb(206,173,20)"/><text x="35.5645%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="35.3145%" y="277" width="0.0204%" height="15" fill="rgb(233,88,34)"/><text x="35.5645%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="35.3145%" y="261" width="0.0204%" height="15" fill="rgb(223,209,46)"/><text x="35.5645%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="35.3145%" y="245" width="0.0204%" height="15" fill="rgb(250,43,18)"/><text x="35.5645%" y="255.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="35.3145%" y="229" width="0.0204%" height="15" fill="rgb(208,13,10)"/><text x="35.5645%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="35.3145%" y="213" width="0.0204%" height="15" fill="rgb(212,200,36)"/><text x="35.5645%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="35.3145%" y="197" width="0.0204%" height="15" fill="rgb(225,90,30)"/><text x="35.5645%" y="207.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (5 samples, 0.10%)</title><rect x="35.3552%" y="293" width="0.1018%" height="15" fill="rgb(236,182,39)"/><text x="35.6052%" y="303.50"></text></g><g><title>core::ptr::write (5 samples, 0.10%)</title><rect x="35.3552%" y="277" width="0.1018%" height="15" fill="rgb(212,144,35)"/><text x="35.6052%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_back (7 samples, 0.14%)</title><rect x="35.3348%" y="309" width="0.1425%" height="15" fill="rgb(228,63,44)"/><text x="35.5848%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::is_full (1 samples, 0.02%)</title><rect x="35.4570%" y="293" width="0.0204%" height="15" fill="rgb(228,109,6)"/><text x="35.7070%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::len (1 samples, 0.02%)</title><rect x="35.4570%" y="277" width="0.0204%" height="15" fill="rgb(238,117,24)"/><text x="35.7070%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::count (1 samples, 0.02%)</title><rect x="35.4570%" y="261" width="0.0204%" height="15" fill="rgb(242,26,26)"/><text x="35.7070%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.02%)</title><rect x="35.4570%" y="245" width="0.0204%" height="15" fill="rgb(221,92,48)"/><text x="35.7070%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="35.4773%" y="277" width="0.0204%" height="15" fill="rgb(209,209,32)"/><text x="35.7273%" y="287.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (17 samples, 0.35%)</title><rect x="35.1720%" y="341" width="0.3460%" height="15" fill="rgb(221,70,22)"/><text x="35.4220%" y="351.50"></text></g><g><title>glommio::sys::uring::UringQueueState::cancel_request (9 samples, 0.18%)</title><rect x="35.3348%" y="325" width="0.1832%" height="15" fill="rgb(248,145,5)"/><text x="35.5848%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (2 samples, 0.04%)</title><rect x="35.4773%" y="309" width="0.0407%" height="15" fill="rgb(226,116,26)"/><text x="35.7273%" y="319.50"></text></g><g><title>&lt;alloc::collections::vec_deque::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.04%)</title><rect x="35.4773%" y="293" width="0.0407%" height="15" fill="rgb(244,5,17)"/><text x="35.7273%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.02%)</title><rect x="35.4977%" y="277" width="0.0204%" height="15" fill="rgb(252,159,33)"/><text x="35.7477%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.02%)</title><rect x="35.4977%" y="261" width="0.0204%" height="15" fill="rgb(206,71,0)"/><text x="35.7477%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="35.5791%" y="325" width="0.0611%" height="15" fill="rgb(233,118,54)"/><text x="35.8291%" y="335.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (7 samples, 0.14%)</title><rect x="35.5180%" y="341" width="0.1425%" height="15" fill="rgb(234,83,48)"/><text x="35.7680%" y="351.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.02%)</title><rect x="35.6401%" y="325" width="0.0204%" height="15" fill="rgb(228,3,54)"/><text x="35.8901%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="36.1083%" y="325" width="0.0204%" height="15" fill="rgb(226,155,13)"/><text x="36.3583%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.02%)</title><rect x="36.1286%" y="325" width="0.0204%" height="15" fill="rgb(241,28,37)"/><text x="36.3786%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (6 samples, 0.12%)</title><rect x="36.1490%" y="325" width="0.1221%" height="15" fill="rgb(233,93,10)"/><text x="36.3990%" y="335.50"></text></g><g><title>__sys_io_uring_enter2 (1 samples, 0.02%)</title><rect x="36.2711%" y="325" width="0.0204%" height="15" fill="rgb(225,113,19)"/><text x="36.5211%" y="335.50"></text></g><g><title>__io_uring_flush_sq (10 samples, 0.20%)</title><rect x="36.3322%" y="293" width="0.2035%" height="15" fill="rgb(241,2,18)"/><text x="36.5822%" y="303.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="36.5764%" y="261" width="0.0204%" height="15" fill="rgb(228,207,21)"/><text x="36.8264%" y="271.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (70 samples, 1.42%)</title><rect x="35.6605%" y="341" width="1.4248%" height="15" fill="rgb(213,211,35)"/><text x="35.9105%" y="351.50"></text></g><g><title>io_uring_submit (39 samples, 0.79%)</title><rect x="36.2915%" y="325" width="0.7938%" height="15" fill="rgb(209,83,10)"/><text x="36.5415%" y="335.50"></text></g><g><title>__io_uring_submit_and_wait (37 samples, 0.75%)</title><rect x="36.3322%" y="309" width="0.7531%" height="15" fill="rgb(209,164,1)"/><text x="36.5822%" y="319.50"></text></g><g><title>__io_uring_submit (27 samples, 0.55%)</title><rect x="36.5357%" y="293" width="0.5496%" height="15" fill="rgb(213,184,43)"/><text x="36.7857%" y="303.50"></text></g><g><title>__sys_io_uring_enter2 (27 samples, 0.55%)</title><rect x="36.5357%" y="277" width="0.5496%" height="15" fill="rgb(231,61,34)"/><text x="36.7857%" y="287.50"></text></g><g><title>syscall (24 samples, 0.49%)</title><rect x="36.5968%" y="261" width="0.4885%" height="15" fill="rgb(235,75,3)"/><text x="36.8468%" y="271.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (3 samples, 0.06%)</title><rect x="37.1056%" y="325" width="0.0611%" height="15" fill="rgb(220,106,47)"/><text x="37.3556%" y="335.50"></text></g><g><title>io_uring_peek_batch_cqe (1 samples, 0.02%)</title><rect x="37.1463%" y="309" width="0.0204%" height="15" fill="rgb(210,196,33)"/><text x="37.3963%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="37.3499%" y="309" width="0.1221%" height="15" fill="rgb(229,154,42)"/><text x="37.5999%" y="319.50"></text></g><g><title>io_uring_get_sqe (4 samples, 0.08%)</title><rect x="37.8587%" y="293" width="0.0814%" height="15" fill="rgb(228,114,26)"/><text x="38.1087%" y="303.50"></text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (50 samples, 1.02%)</title><rect x="37.0853%" y="341" width="1.0177%" height="15" fill="rgb(208,144,1)"/><text x="37.3353%" y="351.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (46 samples, 0.94%)</title><rect x="37.1667%" y="325" width="0.9363%" height="15" fill="rgb(239,112,37)"/><text x="37.4167%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (31 samples, 0.63%)</title><rect x="37.4720%" y="309" width="0.6310%" height="15" fill="rgb(210,96,50)"/><text x="37.7220%" y="319.50"></text></g><g><title>rust_io_uring_prep_cancel (8 samples, 0.16%)</title><rect x="37.9402%" y="293" width="0.1628%" height="15" fill="rgb(222,178,2)"/><text x="38.1902%" y="303.50"></text></g><g><title>io_uring_prep_cancel (8 samples, 0.16%)</title><rect x="37.9402%" y="277" width="0.1628%" height="15" fill="rgb(226,74,18)"/><text x="38.1902%" y="287.50"></text></g><g><title>io_uring_prep_rw (7 samples, 0.14%)</title><rect x="37.9605%" y="261" width="0.1425%" height="15" fill="rgb(225,67,54)"/><text x="38.2105%" y="271.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::upgrade (7 samples, 0.14%)</title><rect x="38.1030%" y="309" width="0.1425%" height="15" fill="rgb(251,92,32)"/><text x="38.3530%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.02%)</title><rect x="38.2455%" y="309" width="0.0204%" height="15" fill="rgb(228,149,22)"/><text x="38.4955%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.02%)</title><rect x="38.2455%" y="293" width="0.0204%" height="15" fill="rgb(243,54,13)"/><text x="38.4955%" y="303.50"></text></g><g><title>core::cell::BorrowRef::new (1 samples, 0.02%)</title><rect x="38.2455%" y="277" width="0.0204%" height="15" fill="rgb(243,180,28)"/><text x="38.4955%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="38.2455%" y="261" width="0.0204%" height="15" fill="rgb(208,167,24)"/><text x="38.4955%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="38.2455%" y="245" width="0.0204%" height="15" fill="rgb(245,73,45)"/><text x="38.4955%" y="255.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="38.2455%" y="229" width="0.0204%" height="15" fill="rgb(237,203,48)"/><text x="38.4955%" y="239.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="38.2455%" y="213" width="0.0204%" height="15" fill="rgb(211,197,16)"/><text x="38.4955%" y="223.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="38.2455%" y="197" width="0.0204%" height="15" fill="rgb(243,99,51)"/><text x="38.4955%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="38.2455%" y="181" width="0.0204%" height="15" fill="rgb(215,123,29)"/><text x="38.4955%" y="191.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.16%)</title><rect x="38.2658%" y="261" width="0.1628%" height="15" fill="rgb(239,186,37)"/><text x="38.5158%" y="271.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.16%)</title><rect x="38.2658%" y="245" width="0.1628%" height="15" fill="rgb(252,136,39)"/><text x="38.5158%" y="255.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.16%)</title><rect x="38.2658%" y="229" width="0.1628%" height="15" fill="rgb(223,213,32)"/><text x="38.5158%" y="239.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (3 samples, 0.06%)</title><rect x="38.5101%" y="229" width="0.0611%" height="15" fill="rgb(233,115,5)"/><text x="38.7601%" y="239.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (3 samples, 0.06%)</title><rect x="38.5101%" y="213" width="0.0611%" height="15" fill="rgb(207,226,44)"/><text x="38.7601%" y="223.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="38.5508%" y="197" width="0.0204%" height="15" fill="rgb(208,126,0)"/><text x="38.8008%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="38.5508%" y="181" width="0.0204%" height="15" fill="rgb(244,66,21)"/><text x="38.8008%" y="191.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (4 samples, 0.08%)</title><rect x="38.5101%" y="245" width="0.0814%" height="15" fill="rgb(222,97,12)"/><text x="38.7601%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.02%)</title><rect x="38.5711%" y="229" width="0.0204%" height="15" fill="rgb(219,213,19)"/><text x="38.8211%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="38.5711%" y="213" width="0.0204%" height="15" fill="rgb(252,169,30)"/><text x="38.8211%" y="223.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="38.5915%" y="245" width="0.0204%" height="15" fill="rgb(206,32,51)"/><text x="38.8415%" y="255.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="38.5915%" y="229" width="0.0204%" height="15" fill="rgb(250,172,42)"/><text x="38.8415%" y="239.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="38.5915%" y="213" width="0.0204%" height="15" fill="rgb(209,34,43)"/><text x="38.8415%" y="223.50"></text></g><g><title>glommio::executor::maybe_activate (28 samples, 0.57%)</title><rect x="38.2658%" y="309" width="0.5699%" height="15" fill="rgb(223,11,35)"/><text x="38.5158%" y="319.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (28 samples, 0.57%)</title><rect x="38.2658%" y="293" width="0.5699%" height="15" fill="rgb(251,219,26)"/><text x="38.5158%" y="303.50"></text></g><g><title>glommio::executor::maybe_activate::{{closure}} (28 samples, 0.57%)</title><rect x="38.2658%" y="277" width="0.5699%" height="15" fill="rgb(231,119,3)"/><text x="38.5158%" y="287.50"></text></g><g><title>glommio::executor::ExecutorQueues::maybe_activate (20 samples, 0.41%)</title><rect x="38.4287%" y="261" width="0.4071%" height="15" fill="rgb(216,97,11)"/><text x="38.6787%" y="271.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (11 samples, 0.22%)</title><rect x="38.6118%" y="245" width="0.2239%" height="15" fill="rgb(223,59,9)"/><text x="38.8618%" y="255.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (8 samples, 0.16%)</title><rect x="38.8357%" y="293" width="0.1628%" height="15" fill="rgb(233,93,31)"/><text x="39.0857%" y="303.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (8 samples, 0.16%)</title><rect x="38.8357%" y="277" width="0.1628%" height="15" fill="rgb(239,81,33)"/><text x="39.0857%" y="287.50"></text></g><g><title>core::cell::BorrowRefMut::new (8 samples, 0.16%)</title><rect x="38.8357%" y="261" width="0.1628%" height="15" fill="rgb(213,120,34)"/><text x="39.0857%" y="271.50"></text></g><g><title>glommio::multitask::LocalExecutor::spawn::{{closure}} (45 samples, 0.92%)</title><rect x="38.1030%" y="325" width="0.9159%" height="15" fill="rgb(243,49,53)"/><text x="38.3530%" y="335.50"></text></g><g><title>glommio::multitask::LocalQueue::push (9 samples, 0.18%)</title><rect x="38.8357%" y="309" width="0.1832%" height="15" fill="rgb(247,216,33)"/><text x="39.0857%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="38.9986%" y="293" width="0.0204%" height="15" fill="rgb(226,26,14)"/><text x="39.2486%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="38.9986%" y="277" width="0.0204%" height="15" fill="rgb(215,49,53)"/><text x="39.2486%" y="287.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="38.9986%" y="261" width="0.0204%" height="15" fill="rgb(245,162,40)"/><text x="39.2486%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="38.9986%" y="245" width="0.0204%" height="15" fill="rgb(229,68,17)"/><text x="39.2486%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="38.9986%" y="229" width="0.0204%" height="15" fill="rgb(213,182,10)"/><text x="39.2486%" y="239.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="38.9986%" y="213" width="0.0204%" height="15" fill="rgb(245,125,30)"/><text x="39.2486%" y="223.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="38.9986%" y="197" width="0.0204%" height="15" fill="rgb(232,202,2)"/><text x="39.2486%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="38.9986%" y="181" width="0.0204%" height="15" fill="rgb(237,140,51)"/><text x="39.2486%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="38.9986%" y="165" width="0.0204%" height="15" fill="rgb(236,157,25)"/><text x="39.2486%" y="175.50"></text></g><g><title>&lt;std::thread::ThreadId as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="39.1614%" y="309" width="0.0204%" height="15" fill="rgb(219,209,0)"/><text x="39.4114%" y="319.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU64 as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="39.1614%" y="293" width="0.0204%" height="15" fill="rgb(240,116,54)"/><text x="39.4114%" y="303.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake (56 samples, 1.14%)</title><rect x="38.1030%" y="341" width="1.1398%" height="15" fill="rgb(216,10,36)"/><text x="38.3530%" y="351.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake_by_ref (11 samples, 0.22%)</title><rect x="39.0189%" y="325" width="0.2239%" height="15" fill="rgb(222,72,44)"/><text x="39.2689%" y="335.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::thread_id (3 samples, 0.06%)</title><rect x="39.1818%" y="309" width="0.0611%" height="15" fill="rgb(232,159,9)"/><text x="39.4318%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.06%)</title><rect x="39.1818%" y="293" width="0.0611%" height="15" fill="rgb(210,39,32)"/><text x="39.4318%" y="303.50"></text></g><g><title>glommio::task::raw::THREAD_ID::__getit (3 samples, 0.06%)</title><rect x="39.1818%" y="277" width="0.0611%" height="15" fill="rgb(216,194,45)"/><text x="39.4318%" y="287.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.06%)</title><rect x="39.1818%" y="261" width="0.0611%" height="15" fill="rgb(218,18,35)"/><text x="39.4318%" y="271.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="39.2021%" y="245" width="0.0407%" height="15" fill="rgb(207,83,51)"/><text x="39.4521%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="39.2021%" y="229" width="0.0407%" height="15" fill="rgb(225,63,43)"/><text x="39.4521%" y="239.50"></text></g><g><title>io_uring_get_sqe (5 samples, 0.10%)</title><rect x="39.2428%" y="341" width="0.1018%" height="15" fill="rgb(207,57,36)"/><text x="39.4928%" y="351.50"></text></g><g><title>__io_uring_flush_sq (8 samples, 0.16%)</title><rect x="39.3853%" y="309" width="0.1628%" height="15" fill="rgb(216,99,33)"/><text x="39.6353%" y="319.50"></text></g><g><title>io_uring_submit_and_wait (42 samples, 0.85%)</title><rect x="39.3446%" y="341" width="0.8549%" height="15" fill="rgb(225,42,16)"/><text x="39.5946%" y="351.50"></text></g><g><title>__io_uring_submit_and_wait (40 samples, 0.81%)</title><rect x="39.3853%" y="325" width="0.8142%" height="15" fill="rgb(220,201,45)"/><text x="39.6353%" y="335.50"></text></g><g><title>__io_uring_submit (32 samples, 0.65%)</title><rect x="39.5481%" y="309" width="0.6513%" height="15" fill="rgb(225,33,4)"/><text x="39.7981%" y="319.50"></text></g><g><title>__sys_io_uring_enter2 (30 samples, 0.61%)</title><rect x="39.5888%" y="293" width="0.6106%" height="15" fill="rgb(224,33,50)"/><text x="39.8388%" y="303.50"></text></g><g><title>syscall (23 samples, 0.47%)</title><rect x="39.7313%" y="277" width="0.4681%" height="15" fill="rgb(246,198,51)"/><text x="39.9813%" y="287.50"></text></g><g><title>rust_io_uring_prep_poll_add (1 samples, 0.02%)</title><rect x="40.1995%" y="341" width="0.0204%" height="15" fill="rgb(205,22,4)"/><text x="40.4495%" y="351.50"></text></g><g><title>io_uring_prep_poll_add (1 samples, 0.02%)</title><rect x="40.1995%" y="325" width="0.0204%" height="15" fill="rgb(206,3,8)"/><text x="40.4495%" y="335.50"></text></g><g><title>io_uring_prep_rw (1 samples, 0.02%)</title><rect x="40.1995%" y="309" width="0.0204%" height="15" fill="rgb(251,23,15)"/><text x="40.4495%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="40.2402%" y="293" width="0.0204%" height="15" fill="rgb(252,88,28)"/><text x="40.4902%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="40.2402%" y="277" width="0.0204%" height="15" fill="rgb(212,127,14)"/><text x="40.4902%" y="287.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="40.2402%" y="261" width="0.0204%" height="15" fill="rgb(247,145,37)"/><text x="40.4902%" y="271.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="40.2402%" y="245" width="0.0204%" height="15" fill="rgb(209,117,53)"/><text x="40.4902%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="40.2402%" y="229" width="0.0204%" height="15" fill="rgb(212,90,42)"/><text x="40.4902%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="40.2402%" y="213" width="0.0204%" height="15" fill="rgb(218,164,37)"/><text x="40.4902%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.24%)</title><rect x="40.3419%" y="229" width="0.2442%" height="15" fill="rgb(246,65,34)"/><text x="40.5919%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.39%)</title><rect x="40.2198%" y="341" width="0.3867%" height="15" fill="rgb(231,100,33)"/><text x="40.4698%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.39%)</title><rect x="40.2198%" y="325" width="0.3867%" height="15" fill="rgb(228,126,14)"/><text x="40.4698%" y="335.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (19 samples, 0.39%)</title><rect x="40.2198%" y="309" width="0.3867%" height="15" fill="rgb(215,173,21)"/><text x="40.4698%" y="319.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (17 samples, 0.35%)</title><rect x="40.2605%" y="293" width="0.3460%" height="15" fill="rgb(210,6,40)"/><text x="40.5105%" y="303.50"></text></g><g><title>core::mem::replace (13 samples, 0.26%)</title><rect x="40.3419%" y="277" width="0.2646%" height="15" fill="rgb(212,48,18)"/><text x="40.5919%" y="287.50"></text></g><g><title>core::mem::swap (13 samples, 0.26%)</title><rect x="40.3419%" y="261" width="0.2646%" height="15" fill="rgb(230,214,11)"/><text x="40.5919%" y="271.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (13 samples, 0.26%)</title><rect x="40.3419%" y="245" width="0.2646%" height="15" fill="rgb(254,105,39)"/><text x="40.5919%" y="255.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="40.5862%" y="229" width="0.0204%" height="15" fill="rgb(245,158,5)"/><text x="40.8362%" y="239.50"></text></g><g><title>glommio::parking::Parker::park (612 samples, 12.46%)</title><rect x="28.3533%" y="373" width="12.4567%" height="15" fill="rgb(249,208,11)"/><text x="28.6033%" y="383.50">glommio::parking::P..</text></g><g><title>glommio::parking::Inner::park (606 samples, 12.33%)</title><rect x="28.4755%" y="357" width="12.3346%" height="15" fill="rgb(210,39,28)"/><text x="28.7255%" y="367.50">glommio::parking::..</text></g><g><title>syscall (10 samples, 0.20%)</title><rect x="40.6066%" y="341" width="0.2035%" height="15" fill="rgb(211,56,53)"/><text x="40.8566%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="41.6039%" y="341" width="0.1018%" height="15" fill="rgb(226,201,30)"/><text x="41.8539%" y="351.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (12 samples, 0.24%)</title><rect x="41.7057%" y="341" width="0.2442%" height="15" fill="rgb(239,101,34)"/><text x="41.9557%" y="351.50"></text></g><g><title>io_uring_peek_batch_cqe (9 samples, 0.18%)</title><rect x="41.7667%" y="325" width="0.1832%" height="15" fill="rgb(226,209,5)"/><text x="42.0167%" y="335.50"></text></g><g><title>cq_ring_needs_flush (1 samples, 0.02%)</title><rect x="41.9296%" y="309" width="0.0204%" height="15" fill="rgb(250,105,47)"/><text x="42.1796%" y="319.50"></text></g><g><title>cq_ring_needs_flush (1 samples, 0.02%)</title><rect x="42.0721%" y="309" width="0.0204%" height="15" fill="rgb(230,72,3)"/><text x="42.3221%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (17 samples, 0.35%)</title><rect x="41.9499%" y="341" width="0.3460%" height="15" fill="rgb(232,218,39)"/><text x="42.1999%" y="351.50"></text></g><g><title>io_uring_peek_batch_cqe (14 samples, 0.28%)</title><rect x="42.0110%" y="325" width="0.2850%" height="15" fill="rgb(248,166,6)"/><text x="42.2610%" y="335.50"></text></g><g><title>io_uring_cq_ready (10 samples, 0.20%)</title><rect x="42.0924%" y="309" width="0.2035%" height="15" fill="rgb(247,89,20)"/><text x="42.3424%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="42.2959%" y="325" width="0.0204%" height="15" fill="rgb(248,130,54)"/><text x="42.5459%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="42.2959%" y="309" width="0.0204%" height="15" fill="rgb(234,196,4)"/><text x="42.5459%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="42.2959%" y="293" width="0.0204%" height="15" fill="rgb(250,143,31)"/><text x="42.5459%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="42.2959%" y="277" width="0.0204%" height="15" fill="rgb(211,110,34)"/><text x="42.5459%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="42.2959%" y="261" width="0.0204%" height="15" fill="rgb(215,124,48)"/><text x="42.5459%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="42.2959%" y="245" width="0.0204%" height="15" fill="rgb(216,46,13)"/><text x="42.5459%" y="255.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="42.2959%" y="229" width="0.0204%" height="15" fill="rgb(205,184,25)"/><text x="42.5459%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="42.2959%" y="213" width="0.0204%" height="15" fill="rgb(228,1,10)"/><text x="42.5459%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="42.2959%" y="197" width="0.0204%" height="15" fill="rgb(213,116,27)"/><text x="42.5459%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="42.3163%" y="325" width="0.0407%" height="15" fill="rgb(241,95,50)"/><text x="42.5663%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="42.3163%" y="309" width="0.0407%" height="15" fill="rgb(238,48,32)"/><text x="42.5663%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="42.3163%" y="293" width="0.0407%" height="15" fill="rgb(235,113,49)"/><text x="42.5663%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="42.3163%" y="277" width="0.0407%" height="15" fill="rgb(205,127,43)"/><text x="42.5663%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="42.3163%" y="261" width="0.0407%" height="15" fill="rgb(250,162,2)"/><text x="42.5663%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="42.3163%" y="245" width="0.0407%" height="15" fill="rgb(220,13,41)"/><text x="42.5663%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="42.3163%" y="229" width="0.0407%" height="15" fill="rgb(249,221,25)"/><text x="42.5663%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="42.3163%" y="213" width="0.0407%" height="15" fill="rgb(215,208,19)"/><text x="42.5663%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="42.3163%" y="197" width="0.0407%" height="15" fill="rgb(236,175,2)"/><text x="42.5663%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="42.3570%" y="309" width="0.0204%" height="15" fill="rgb(241,52,2)"/><text x="42.6070%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.02%)</title><rect x="42.4181%" y="277" width="0.0204%" height="15" fill="rgb(248,140,14)"/><text x="42.6681%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (4 samples, 0.08%)</title><rect x="42.3774%" y="293" width="0.0814%" height="15" fill="rgb(253,22,42)"/><text x="42.6274%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="42.4384%" y="277" width="0.0204%" height="15" fill="rgb(234,61,47)"/><text x="42.6884%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="42.4384%" y="261" width="0.0204%" height="15" fill="rgb(208,226,15)"/><text x="42.6884%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (8 samples, 0.16%)</title><rect x="42.3774%" y="309" width="0.1628%" height="15" fill="rgb(217,221,4)"/><text x="42.6274%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_slice (4 samples, 0.08%)</title><rect x="42.4588%" y="293" width="0.0814%" height="15" fill="rgb(212,174,34)"/><text x="42.7088%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.08%)</title><rect x="42.4588%" y="277" width="0.0814%" height="15" fill="rgb(253,83,4)"/><text x="42.7088%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (4 samples, 0.08%)</title><rect x="42.4588%" y="261" width="0.0814%" height="15" fill="rgb(250,195,49)"/><text x="42.7088%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.08%)</title><rect x="42.4588%" y="245" width="0.0814%" height="15" fill="rgb(241,192,25)"/><text x="42.7088%" y="255.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="42.5402%" y="309" width="0.0204%" height="15" fill="rgb(208,124,10)"/><text x="42.7902%" y="319.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="42.5402%" y="293" width="0.0204%" height="15" fill="rgb(222,33,0)"/><text x="42.7902%" y="303.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="42.5402%" y="277" width="0.0204%" height="15" fill="rgb(234,209,28)"/><text x="42.7902%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="42.5402%" y="261" width="0.0204%" height="15" fill="rgb(224,11,23)"/><text x="42.7902%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="42.5402%" y="245" width="0.0204%" height="15" fill="rgb(232,99,1)"/><text x="42.7902%" y="255.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (14 samples, 0.28%)</title><rect x="42.2959%" y="341" width="0.2850%" height="15" fill="rgb(237,95,45)"/><text x="42.5459%" y="351.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (11 samples, 0.22%)</title><rect x="42.3570%" y="325" width="0.2239%" height="15" fill="rgb(208,109,11)"/><text x="42.6070%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="42.5606%" y="309" width="0.0204%" height="15" fill="rgb(216,190,48)"/><text x="42.8106%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="42.5606%" y="293" width="0.0204%" height="15" fill="rgb(251,171,36)"/><text x="42.8106%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="42.5606%" y="277" width="0.0204%" height="15" fill="rgb(230,62,22)"/><text x="42.8106%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="42.5809%" y="325" width="0.0204%" height="15" fill="rgb(225,114,35)"/><text x="42.8309%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="42.5809%" y="309" width="0.0204%" height="15" fill="rgb(215,118,42)"/><text x="42.8309%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="42.5809%" y="293" width="0.0204%" height="15" fill="rgb(243,119,21)"/><text x="42.8309%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="42.5809%" y="277" width="0.0204%" height="15" fill="rgb(252,177,53)"/><text x="42.8309%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="42.5809%" y="261" width="0.0204%" height="15" fill="rgb(237,209,29)"/><text x="42.8309%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="42.5809%" y="245" width="0.0204%" height="15" fill="rgb(212,65,23)"/><text x="42.8309%" y="255.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="42.5809%" y="229" width="0.0204%" height="15" fill="rgb(230,222,46)"/><text x="42.8309%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="42.5809%" y="213" width="0.0204%" height="15" fill="rgb(215,135,32)"/><text x="42.8309%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="42.5809%" y="197" width="0.0204%" height="15" fill="rgb(246,101,22)"/><text x="42.8309%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="42.6013%" y="309" width="0.0204%" height="15" fill="rgb(206,107,13)"/><text x="42.8513%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="42.6013%" y="293" width="0.0204%" height="15" fill="rgb(250,100,44)"/><text x="42.8513%" y="303.50"></text></g><g><title>glommio::parking::Reactor::process_timers (2 samples, 0.04%)</title><rect x="42.6216%" y="309" width="0.0407%" height="15" fill="rgb(231,147,38)"/><text x="42.8716%" y="319.50"></text></g><g><title>glommio::parking::Reactor::process_timers (13 samples, 0.26%)</title><rect x="42.5809%" y="341" width="0.2646%" height="15" fill="rgb(229,8,40)"/><text x="42.8309%" y="351.50"></text></g><g><title>glommio::parking::Timers::process_timers (12 samples, 0.24%)</title><rect x="42.6013%" y="325" width="0.2442%" height="15" fill="rgb(221,135,30)"/><text x="42.8513%" y="335.50"></text></g><g><title>std::time::Instant::now (9 samples, 0.18%)</title><rect x="42.6623%" y="309" width="0.1832%" height="15" fill="rgb(249,193,18)"/><text x="42.9123%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (9 samples, 0.18%)</title><rect x="42.6623%" y="293" width="0.1832%" height="15" fill="rgb(209,133,39)"/><text x="42.9123%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (9 samples, 0.18%)</title><rect x="42.6623%" y="277" width="0.1832%" height="15" fill="rgb(232,100,14)"/><text x="42.9123%" y="287.50"></text></g><g><title>__clock_gettime_2 (9 samples, 0.18%)</title><rect x="42.6623%" y="261" width="0.1832%" height="15" fill="rgb(224,185,1)"/><text x="42.9123%" y="271.50"></text></g><g><title>__vdso_clock_gettime (9 samples, 0.18%)</title><rect x="42.6623%" y="245" width="0.1832%" height="15" fill="rgb(223,139,8)"/><text x="42.9123%" y="255.50"></text></g><g><title>[[vdso]] (6 samples, 0.12%)</title><rect x="42.7234%" y="229" width="0.1221%" height="15" fill="rgb(232,213,38)"/><text x="42.9734%" y="239.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.26%)</title><rect x="43.1305%" y="325" width="0.2646%" height="15" fill="rgb(207,94,22)"/><text x="43.3805%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="43.3951%" y="325" width="0.1018%" height="15" fill="rgb(219,183,54)"/><text x="43.6451%" y="335.50"></text></g><g><title>glommio::sys::uring::SOURCE_MAP::__getit (1 samples, 0.02%)</title><rect x="43.4968%" y="293" width="0.0204%" height="15" fill="rgb(216,185,54)"/><text x="43.7468%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="43.4968%" y="277" width="0.0204%" height="15" fill="rgb(254,217,39)"/><text x="43.7468%" y="287.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="43.4968%" y="261" width="0.0204%" height="15" fill="rgb(240,178,23)"/><text x="43.7468%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="43.4968%" y="245" width="0.0204%" height="15" fill="rgb(218,11,47)"/><text x="43.7468%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="43.5376%" y="277" width="0.0204%" height="15" fill="rgb(218,51,51)"/><text x="43.7876%" y="287.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="43.5376%" y="261" width="0.0204%" height="15" fill="rgb(238,126,27)"/><text x="43.7876%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="43.5579%" y="277" width="0.0204%" height="15" fill="rgb(249,202,22)"/><text x="43.8079%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="43.5579%" y="261" width="0.0204%" height="15" fill="rgb(254,195,49)"/><text x="43.8079%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="43.5579%" y="245" width="0.0204%" height="15" fill="rgb(208,123,14)"/><text x="43.8079%" y="255.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="43.5579%" y="229" width="0.0204%" height="15" fill="rgb(224,200,8)"/><text x="43.8079%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="43.5579%" y="213" width="0.0204%" height="15" fill="rgb(217,61,36)"/><text x="43.8079%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="43.5579%" y="197" width="0.0204%" height="15" fill="rgb(206,35,45)"/><text x="43.8079%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="43.6597%" y="261" width="0.0204%" height="15" fill="rgb(217,65,33)"/><text x="43.9097%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="43.6597%" y="245" width="0.0204%" height="15" fill="rgb(222,158,48)"/><text x="43.9097%" y="255.50"></text></g><g><title>glommio::sys::uring::SleepableRing::arm_timer (49 samples, 1.00%)</title><rect x="42.8455%" y="341" width="0.9974%" height="15" fill="rgb(254,2,54)"/><text x="43.0955%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.35%)</title><rect x="43.4968%" y="325" width="0.3460%" height="15" fill="rgb(250,143,38)"/><text x="43.7468%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.35%)</title><rect x="43.4968%" y="309" width="0.3460%" height="15" fill="rgb(248,25,0)"/><text x="43.7468%" y="319.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (16 samples, 0.33%)</title><rect x="43.5172%" y="293" width="0.3257%" height="15" fill="rgb(206,152,27)"/><text x="43.7672%" y="303.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (13 samples, 0.26%)</title><rect x="43.5783%" y="277" width="0.2646%" height="15" fill="rgb(240,77,30)"/><text x="43.8283%" y="287.50"></text></g><g><title>core::mem::replace (8 samples, 0.16%)</title><rect x="43.6800%" y="261" width="0.1628%" height="15" fill="rgb(231,5,3)"/><text x="43.9300%" y="271.50"></text></g><g><title>core::mem::swap (8 samples, 0.16%)</title><rect x="43.6800%" y="245" width="0.1628%" height="15" fill="rgb(207,226,32)"/><text x="43.9300%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (8 samples, 0.16%)</title><rect x="43.6800%" y="229" width="0.1628%" height="15" fill="rgb(222,207,47)"/><text x="43.9300%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.16%)</title><rect x="43.6800%" y="213" width="0.1628%" height="15" fill="rgb(229,115,45)"/><text x="43.9300%" y="223.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (7 samples, 0.14%)</title><rect x="43.8429%" y="341" width="0.1425%" height="15" fill="rgb(224,191,6)"/><text x="44.0929%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="43.9446%" y="325" width="0.0407%" height="15" fill="rgb(230,227,24)"/><text x="44.1946%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="44.2296%" y="325" width="0.0814%" height="15" fill="rgb(228,80,19)"/><text x="44.4796%" y="335.50"></text></g><g><title>io_uring_get_sqe (6 samples, 0.12%)</title><rect x="44.5960%" y="309" width="0.1221%" height="15" fill="rgb(247,229,0)"/><text x="44.8460%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (26 samples, 0.53%)</title><rect x="44.3110%" y="325" width="0.5292%" height="15" fill="rgb(237,194,15)"/><text x="44.5610%" y="335.50"></text></g><g><title>rust_io_uring_prep_timeout (6 samples, 0.12%)</title><rect x="44.7181%" y="309" width="0.1221%" height="15" fill="rgb(219,203,20)"/><text x="44.9681%" y="319.50"></text></g><g><title>io_uring_prep_timeout (6 samples, 0.12%)</title><rect x="44.7181%" y="293" width="0.1221%" height="15" fill="rgb(234,128,8)"/><text x="44.9681%" y="303.50"></text></g><g><title>io_uring_prep_rw (6 samples, 0.12%)</title><rect x="44.7181%" y="277" width="0.1221%" height="15" fill="rgb(248,202,8)"/><text x="44.9681%" y="287.50"></text></g><g><title>__sys_io_uring_enter2 (4 samples, 0.08%)</title><rect x="44.8402%" y="325" width="0.0814%" height="15" fill="rgb(206,104,37)"/><text x="45.0902%" y="335.50"></text></g><g><title>__io_uring_flush_sq (10 samples, 0.20%)</title><rect x="45.0031%" y="293" width="0.2035%" height="15" fill="rgb(223,8,27)"/><text x="45.2531%" y="303.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="45.3287%" y="261" width="0.0204%" height="15" fill="rgb(216,217,28)"/><text x="45.5787%" y="271.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (97 samples, 1.97%)</title><rect x="43.9853%" y="341" width="1.9744%" height="15" fill="rgb(249,199,1)"/><text x="44.2353%" y="351.50">g..</text></g><g><title>io_uring_submit (51 samples, 1.04%)</title><rect x="44.9216%" y="325" width="1.0381%" height="15" fill="rgb(240,85,17)"/><text x="45.1716%" y="335.50"></text></g><g><title>__io_uring_submit_and_wait (48 samples, 0.98%)</title><rect x="44.9827%" y="309" width="0.9770%" height="15" fill="rgb(206,108,45)"/><text x="45.2327%" y="319.50"></text></g><g><title>__io_uring_submit (37 samples, 0.75%)</title><rect x="45.2066%" y="293" width="0.7531%" height="15" fill="rgb(245,210,41)"/><text x="45.4566%" y="303.50"></text></g><g><title>__sys_io_uring_enter2 (35 samples, 0.71%)</title><rect x="45.2473%" y="277" width="0.7124%" height="15" fill="rgb(206,13,37)"/><text x="45.4973%" y="287.50"></text></g><g><title>syscall (30 samples, 0.61%)</title><rect x="45.3491%" y="261" width="0.6106%" height="15" fill="rgb(250,61,18)"/><text x="45.5991%" y="271.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (3 samples, 0.06%)</title><rect x="46.0208%" y="325" width="0.0611%" height="15" fill="rgb(235,172,48)"/><text x="46.2708%" y="335.50"></text></g><g><title>io_uring_peek_batch_cqe (2 samples, 0.04%)</title><rect x="46.0411%" y="309" width="0.0407%" height="15" fill="rgb(249,201,17)"/><text x="46.2911%" y="319.50"></text></g><g><title>io_uring_cq_ready (1 samples, 0.02%)</title><rect x="46.0615%" y="293" width="0.0204%" height="15" fill="rgb(219,208,6)"/><text x="46.3115%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="46.1632%" y="309" width="0.0814%" height="15" fill="rgb(248,31,23)"/><text x="46.4132%" y="319.50"></text></g><g><title>glommio::parking::Parker::poll_io (270 samples, 5.50%)</title><rect x="40.8101%" y="373" width="5.4956%" height="15" fill="rgb(245,15,42)"/><text x="41.0601%" y="383.50">glommio..</text></g><g><title>glommio::parking::Inner::park (270 samples, 5.50%)</title><rect x="40.8101%" y="357" width="5.4956%" height="15" fill="rgb(222,217,39)"/><text x="41.0601%" y="367.50">glommio..</text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (17 samples, 0.35%)</title><rect x="45.9597%" y="341" width="0.3460%" height="15" fill="rgb(210,219,27)"/><text x="46.2097%" y="351.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (11 samples, 0.22%)</title><rect x="46.0818%" y="325" width="0.2239%" height="15" fill="rgb(252,166,36)"/><text x="46.3318%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (3 samples, 0.06%)</title><rect x="46.2447%" y="309" width="0.0611%" height="15" fill="rgb(245,132,34)"/><text x="46.4947%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::drain (1 samples, 0.02%)</title><rect x="46.3668%" y="357" width="0.0204%" height="15" fill="rgb(236,54,3)"/><text x="46.6168%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.02%)</title><rect x="46.3668%" y="341" width="0.0204%" height="15" fill="rgb(241,173,43)"/><text x="46.6168%" y="351.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="46.3668%" y="325" width="0.0204%" height="15" fill="rgb(215,190,9)"/><text x="46.6168%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.02%)</title><rect x="46.3668%" y="309" width="0.0204%" height="15" fill="rgb(242,101,16)"/><text x="46.6168%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.02%)</title><rect x="46.3668%" y="293" width="0.0204%" height="15" fill="rgb(223,190,21)"/><text x="46.6168%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="46.3871%" y="341" width="0.0611%" height="15" fill="rgb(215,228,25)"/><text x="46.6371%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="46.3871%" y="325" width="0.0611%" height="15" fill="rgb(225,36,22)"/><text x="46.6371%" y="335.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="46.3871%" y="309" width="0.0611%" height="15" fill="rgb(251,106,46)"/><text x="46.6371%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.06%)</title><rect x="46.3871%" y="293" width="0.0611%" height="15" fill="rgb(208,90,1)"/><text x="46.6371%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="46.3871%" y="277" width="0.0611%" height="15" fill="rgb(243,10,4)"/><text x="46.6371%" y="287.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="46.3871%" y="261" width="0.0611%" height="15" fill="rgb(212,137,27)"/><text x="46.6371%" y="271.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="46.3871%" y="245" width="0.0611%" height="15" fill="rgb(231,220,49)"/><text x="46.6371%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="46.3871%" y="229" width="0.0611%" height="15" fill="rgb(237,96,20)"/><text x="46.6371%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="46.3871%" y="213" width="0.0611%" height="15" fill="rgb(239,229,30)"/><text x="46.6371%" y="223.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (1 samples, 0.02%)</title><rect x="46.4482%" y="341" width="0.0204%" height="15" fill="rgb(219,65,33)"/><text x="46.6982%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="46.4889%" y="325" width="0.0204%" height="15" fill="rgb(243,134,7)"/><text x="46.7389%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.02%)</title><rect x="46.5500%" y="293" width="0.0204%" height="15" fill="rgb(216,177,54)"/><text x="46.8000%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (7 samples, 0.14%)</title><rect x="46.5093%" y="309" width="0.1425%" height="15" fill="rgb(211,160,20)"/><text x="46.7593%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="46.5703%" y="293" width="0.0814%" height="15" fill="rgb(239,85,39)"/><text x="46.8203%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="46.5703%" y="277" width="0.0814%" height="15" fill="rgb(232,125,22)"/><text x="46.8203%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_slice (3 samples, 0.06%)</title><rect x="46.6517%" y="309" width="0.0611%" height="15" fill="rgb(244,57,34)"/><text x="46.9017%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.06%)</title><rect x="46.6517%" y="293" width="0.0611%" height="15" fill="rgb(214,203,32)"/><text x="46.9017%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (3 samples, 0.06%)</title><rect x="46.6517%" y="277" width="0.0611%" height="15" fill="rgb(207,58,43)"/><text x="46.9017%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.06%)</title><rect x="46.6517%" y="261" width="0.0611%" height="15" fill="rgb(215,193,15)"/><text x="46.9017%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (12 samples, 0.24%)</title><rect x="46.5093%" y="325" width="0.2442%" height="15" fill="rgb(232,15,44)"/><text x="46.7593%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (2 samples, 0.04%)</title><rect x="46.7128%" y="309" width="0.0407%" height="15" fill="rgb(212,3,48)"/><text x="46.9628%" y="319.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="46.7535%" y="325" width="0.0204%" height="15" fill="rgb(218,128,7)"/><text x="47.0035%" y="335.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="46.7535%" y="309" width="0.0204%" height="15" fill="rgb(226,216,39)"/><text x="47.0035%" y="319.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="46.7535%" y="293" width="0.0204%" height="15" fill="rgb(243,47,51)"/><text x="47.0035%" y="303.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="46.7535%" y="277" width="0.0204%" height="15" fill="rgb(241,183,40)"/><text x="47.0035%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="46.7535%" y="261" width="0.0204%" height="15" fill="rgb(231,217,32)"/><text x="47.0035%" y="271.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (20 samples, 0.41%)</title><rect x="46.3871%" y="357" width="0.4071%" height="15" fill="rgb(229,61,38)"/><text x="46.6371%" y="367.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (16 samples, 0.33%)</title><rect x="46.4686%" y="341" width="0.3257%" height="15" fill="rgb(225,210,5)"/><text x="46.7186%" y="351.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (1 samples, 0.02%)</title><rect x="46.7739%" y="325" width="0.0204%" height="15" fill="rgb(231,79,45)"/><text x="47.0239%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="46.7942%" y="341" width="0.0204%" height="15" fill="rgb(224,100,7)"/><text x="47.0442%" y="351.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="46.7942%" y="325" width="0.0204%" height="15" fill="rgb(241,198,18)"/><text x="47.0442%" y="335.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="46.8146%" y="341" width="0.0204%" height="15" fill="rgb(252,97,53)"/><text x="47.0646%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="46.8349%" y="325" width="0.0204%" height="15" fill="rgb(220,88,7)"/><text x="47.0849%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (1 samples, 0.02%)</title><rect x="46.8553%" y="325" width="0.0204%" height="15" fill="rgb(213,176,14)"/><text x="47.1053%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (1 samples, 0.02%)</title><rect x="46.8553%" y="309" width="0.0204%" height="15" fill="rgb(246,73,7)"/><text x="47.1053%" y="319.50"></text></g><g><title>glommio::parking::Reactor::process_timers (2 samples, 0.04%)</title><rect x="46.8756%" y="325" width="0.0407%" height="15" fill="rgb(245,64,36)"/><text x="47.1256%" y="335.50"></text></g><g><title>glommio::parking::Reactor::process_timers (27 samples, 0.55%)</title><rect x="46.7942%" y="357" width="0.5496%" height="15" fill="rgb(245,80,10)"/><text x="47.0442%" y="367.50"></text></g><g><title>glommio::parking::Timers::process_timers (25 samples, 0.51%)</title><rect x="46.8349%" y="341" width="0.5089%" height="15" fill="rgb(232,107,50)"/><text x="47.0849%" y="351.50"></text></g><g><title>std::time::Instant::now (21 samples, 0.43%)</title><rect x="46.9163%" y="325" width="0.4274%" height="15" fill="rgb(253,3,0)"/><text x="47.1663%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (21 samples, 0.43%)</title><rect x="46.9163%" y="309" width="0.4274%" height="15" fill="rgb(212,99,53)"/><text x="47.1663%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.43%)</title><rect x="46.9163%" y="293" width="0.4274%" height="15" fill="rgb(249,111,54)"/><text x="47.1663%" y="303.50"></text></g><g><title>__clock_gettime_2 (20 samples, 0.41%)</title><rect x="46.9367%" y="277" width="0.4071%" height="15" fill="rgb(249,55,30)"/><text x="47.1867%" y="287.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.20%)</title><rect x="47.1402%" y="261" width="0.2035%" height="15" fill="rgb(237,47,42)"/><text x="47.3902%" y="271.50"></text></g><g><title>[[vdso]] (7 samples, 0.14%)</title><rect x="47.2013%" y="245" width="0.1425%" height="15" fill="rgb(211,20,18)"/><text x="47.4513%" y="255.50"></text></g><g><title>cq_ring_needs_flush (2 samples, 0.04%)</title><rect x="47.8526%" y="277" width="0.0407%" height="15" fill="rgb(231,203,46)"/><text x="48.1026%" y="287.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (25 samples, 0.51%)</title><rect x="47.6898%" y="309" width="0.5089%" height="15" fill="rgb(237,142,3)"/><text x="47.9398%" y="319.50"></text></g><g><title>io_uring_peek_batch_cqe (23 samples, 0.47%)</title><rect x="47.7305%" y="293" width="0.4681%" height="15" fill="rgb(241,107,1)"/><text x="47.9805%" y="303.50"></text></g><g><title>io_uring_cq_ready (15 samples, 0.31%)</title><rect x="47.8933%" y="277" width="0.3053%" height="15" fill="rgb(229,83,13)"/><text x="48.1433%" y="287.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (35 samples, 0.71%)</title><rect x="47.6287%" y="325" width="0.7124%" height="15" fill="rgb(241,91,40)"/><text x="47.8787%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (7 samples, 0.14%)</title><rect x="48.1987%" y="309" width="0.1425%" height="15" fill="rgb(225,3,45)"/><text x="48.4487%" y="319.50"></text></g><g><title>io_uring_peek_batch_cqe (6 samples, 0.12%)</title><rect x="48.2190%" y="293" width="0.1221%" height="15" fill="rgb(244,223,14)"/><text x="48.4690%" y="303.50"></text></g><g><title>cq_ring_needs_flush (4 samples, 0.08%)</title><rect x="48.2597%" y="277" width="0.0814%" height="15" fill="rgb(224,124,37)"/><text x="48.5097%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="48.9721%" y="309" width="0.0611%" height="15" fill="rgb(251,171,30)"/><text x="49.2221%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.02%)</title><rect x="49.0332%" y="309" width="0.0204%" height="15" fill="rgb(236,46,54)"/><text x="49.2832%" y="319.50"></text></g><g><title>__sys_io_uring_enter2 (2 samples, 0.04%)</title><rect x="49.0535%" y="309" width="0.0407%" height="15" fill="rgb(245,213,5)"/><text x="49.3035%" y="319.50"></text></g><g><title>__io_uring_flush_sq (1 samples, 0.02%)</title><rect x="49.0942%" y="277" width="0.0204%" height="15" fill="rgb(230,144,27)"/><text x="49.3442%" y="287.50"></text></g><g><title>glommio::parking::Reactor::spin_poll_io (152 samples, 3.09%)</title><rect x="46.3057%" y="373" width="3.0938%" height="15" fill="rgb(220,86,6)"/><text x="46.5557%" y="383.50">glo..</text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (101 samples, 2.06%)</title><rect x="47.3438%" y="357" width="2.0558%" height="15" fill="rgb(240,20,13)"/><text x="47.5938%" y="367.50">g..</text></g><g><title>glommio::sys::uring::Reactor::simple_poll (101 samples, 2.06%)</title><rect x="47.3438%" y="341" width="2.0558%" height="15" fill="rgb(217,89,34)"/><text x="47.5938%" y="351.50">g..</text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (52 samples, 1.06%)</title><rect x="48.3411%" y="325" width="1.0584%" height="15" fill="rgb(229,13,5)"/><text x="48.5911%" y="335.50"></text></g><g><title>io_uring_submit (15 samples, 0.31%)</title><rect x="49.0942%" y="309" width="0.3053%" height="15" fill="rgb(244,67,35)"/><text x="49.3442%" y="319.50"></text></g><g><title>__io_uring_submit_and_wait (15 samples, 0.31%)</title><rect x="49.0942%" y="293" width="0.3053%" height="15" fill="rgb(221,40,2)"/><text x="49.3442%" y="303.50"></text></g><g><title>__io_uring_submit (14 samples, 0.28%)</title><rect x="49.1146%" y="277" width="0.2850%" height="15" fill="rgb(237,157,21)"/><text x="49.3646%" y="287.50"></text></g><g><title>__sys_io_uring_enter2 (14 samples, 0.28%)</title><rect x="49.1146%" y="261" width="0.2850%" height="15" fill="rgb(222,94,11)"/><text x="49.3646%" y="271.50"></text></g><g><title>syscall (12 samples, 0.24%)</title><rect x="49.1553%" y="245" width="0.2442%" height="15" fill="rgb(249,113,6)"/><text x="49.4053%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.04%)</title><rect x="49.4199%" y="293" width="0.0407%" height="15" fill="rgb(238,137,36)"/><text x="49.6699%" y="303.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.04%)</title><rect x="49.4199%" y="277" width="0.0407%" height="15" fill="rgb(210,102,26)"/><text x="49.6699%" y="287.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.04%)</title><rect x="49.4199%" y="261" width="0.0407%" height="15" fill="rgb(218,30,30)"/><text x="49.6699%" y="271.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (2 samples, 0.04%)</title><rect x="49.4199%" y="245" width="0.0407%" height="15" fill="rgb(214,67,26)"/><text x="49.6699%" y="255.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (2 samples, 0.04%)</title><rect x="49.4199%" y="229" width="0.0407%" height="15" fill="rgb(251,9,53)"/><text x="49.6699%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.02%)</title><rect x="49.4403%" y="213" width="0.0204%" height="15" fill="rgb(228,204,25)"/><text x="49.6903%" y="223.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.08%)</title><rect x="49.3996%" y="357" width="0.0814%" height="15" fill="rgb(207,153,8)"/><text x="49.6496%" y="367.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.08%)</title><rect x="49.3996%" y="341" width="0.0814%" height="15" fill="rgb(242,9,16)"/><text x="49.6496%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (4 samples, 0.08%)</title><rect x="49.3996%" y="325" width="0.0814%" height="15" fill="rgb(217,211,10)"/><text x="49.6496%" y="335.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.08%)</title><rect x="49.3996%" y="309" width="0.0814%" height="15" fill="rgb(219,228,52)"/><text x="49.6496%" y="319.50"></text></g><g><title>core::time::Duration::new (1 samples, 0.02%)</title><rect x="49.4606%" y="293" width="0.0204%" height="15" fill="rgb(231,92,29)"/><text x="49.7106%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.02%)</title><rect x="49.4606%" y="277" width="0.0204%" height="15" fill="rgb(232,8,23)"/><text x="49.7106%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="49.4606%" y="261" width="0.0204%" height="15" fill="rgb(216,211,34)"/><text x="49.7106%" y="271.50"></text></g><g><title>std::time::Instant::elapsed (20 samples, 0.41%)</title><rect x="49.3996%" y="373" width="0.4071%" height="15" fill="rgb(236,151,0)"/><text x="49.6496%" y="383.50"></text></g><g><title>std::time::Instant::now (16 samples, 0.33%)</title><rect x="49.4810%" y="357" width="0.3257%" height="15" fill="rgb(209,168,3)"/><text x="49.7310%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (16 samples, 0.33%)</title><rect x="49.4810%" y="341" width="0.3257%" height="15" fill="rgb(208,129,28)"/><text x="49.7310%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::now (16 samples, 0.33%)</title><rect x="49.4810%" y="325" width="0.3257%" height="15" fill="rgb(229,78,22)"/><text x="49.7310%" y="335.50"></text></g><g><title>__clock_gettime_2 (13 samples, 0.26%)</title><rect x="49.5420%" y="309" width="0.2646%" height="15" fill="rgb(228,187,13)"/><text x="49.7920%" y="319.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.24%)</title><rect x="49.5624%" y="293" width="0.2442%" height="15" fill="rgb(240,119,24)"/><text x="49.8124%" y="303.50"></text></g><g><title>[[vdso]] (7 samples, 0.14%)</title><rect x="49.6642%" y="277" width="0.1425%" height="15" fill="rgb(209,194,42)"/><text x="49.9142%" y="287.50"></text></g><g><title>__clock_gettime_2 (13 samples, 0.26%)</title><rect x="49.8270%" y="325" width="0.2646%" height="15" fill="rgb(247,200,46)"/><text x="50.0770%" y="335.50"></text></g><g><title>__vdso_clock_gettime (13 samples, 0.26%)</title><rect x="49.8270%" y="309" width="0.2646%" height="15" fill="rgb(218,76,16)"/><text x="50.0770%" y="319.50"></text></g><g><title>[[vdso]] (9 samples, 0.18%)</title><rect x="49.9084%" y="293" width="0.1832%" height="15" fill="rgb(225,21,48)"/><text x="50.1584%" y="303.50"></text></g><g><title>__GI___clone (1,865 samples, 37.96%)</title><rect x="12.1514%" y="549" width="37.9605%" height="15" fill="rgb(239,223,50)"/><text x="12.4014%" y="559.50">__GI___clone</text></g><g><title>start_thread (1,865 samples, 37.96%)</title><rect x="12.1514%" y="533" width="37.9605%" height="15" fill="rgb(244,45,21)"/><text x="12.4014%" y="543.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,865 samples, 37.96%)</title><rect x="12.1514%" y="517" width="37.9605%" height="15" fill="rgb(232,33,43)"/><text x="12.4014%" y="527.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,865 samples, 37.96%)</title><rect x="12.1514%" y="501" width="37.9605%" height="15" fill="rgb(209,8,3)"/><text x="12.4014%" y="511.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,865 samples, 37.96%)</title><rect x="12.1514%" y="485" width="37.9605%" height="15" fill="rgb(214,25,53)"/><text x="12.4014%" y="495.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,865 samples, 37.96%)</title><rect x="12.1514%" y="469" width="37.9605%" height="15" fill="rgb(254,186,54)"/><text x="12.4014%" y="479.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,865 samples, 37.96%)</title><rect x="12.1514%" y="453" width="37.9605%" height="15" fill="rgb(208,174,49)"/><text x="12.4014%" y="463.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::{{closure}} (1,865 samples, 37.96%)</title><rect x="12.1514%" y="437" width="37.9605%" height="15" fill="rgb(233,191,51)"/><text x="12.4014%" y="447.50">glommio::executor::LocalExecutorBuilder::spawn::{{closure}}</text></g><g><title>glommio::executor::LocalExecutor::run (1,865 samples, 37.96%)</title><rect x="12.1514%" y="421" width="37.9605%" height="15" fill="rgb(222,134,10)"/><text x="12.4014%" y="431.50">glommio::executor::LocalExecutor::run</text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1,865 samples, 37.96%)</title><rect x="12.1514%" y="405" width="37.9605%" height="15" fill="rgb(230,226,20)"/><text x="12.4014%" y="415.50">scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>glommio::executor::LocalExecutor::run::{{closure}} (1,865 samples, 37.96%)</title><rect x="12.1514%" y="389" width="37.9605%" height="15" fill="rgb(251,111,25)"/><text x="12.4014%" y="399.50">glommio::executor::LocalExecutor::run::{{closure}}</text></g><g><title>std::time::Instant::now (15 samples, 0.31%)</title><rect x="49.8066%" y="373" width="0.3053%" height="15" fill="rgb(224,40,46)"/><text x="50.0566%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (15 samples, 0.31%)</title><rect x="49.8066%" y="357" width="0.3053%" height="15" fill="rgb(236,108,47)"/><text x="50.0566%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::now (15 samples, 0.31%)</title><rect x="49.8066%" y="341" width="0.3053%" height="15" fill="rgb(234,93,0)"/><text x="50.0566%" y="351.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.02%)</title><rect x="50.0916%" y="325" width="0.0204%" height="15" fill="rgb(224,213,32)"/><text x="50.3416%" y="335.50"></text></g><g><title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.02%)</title><rect x="50.0916%" y="309" width="0.0204%" height="15" fill="rgb(251,11,48)"/><text x="50.3416%" y="319.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="50.1119%" y="549" width="0.0204%" height="15" fill="rgb(236,173,5)"/><text x="50.3619%" y="559.50"></text></g><g><title>__sys_io_uring_enter2 (1 samples, 0.02%)</title><rect x="50.1323%" y="549" width="0.0204%" height="15" fill="rgb(230,95,12)"/><text x="50.3823%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="50.1323%" y="533" width="0.0204%" height="15" fill="rgb(232,209,1)"/><text x="50.3823%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="50.3562%" y="533" width="0.0204%" height="15" fill="rgb(232,6,1)"/><text x="50.6062%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (2 samples, 0.04%)</title><rect x="50.3766%" y="533" width="0.0407%" height="15" fill="rgb(210,224,50)"/><text x="50.6266%" y="543.50"></text></g><g><title>glommio::executor::LocalExecutor::run_task_queues (1 samples, 0.02%)</title><rect x="50.4173%" y="533" width="0.0204%" height="15" fill="rgb(228,127,35)"/><text x="50.6673%" y="543.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.31%)</title><rect x="50.1527%" y="549" width="0.3053%" height="15" fill="rgb(245,102,45)"/><text x="50.4027%" y="559.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (1 samples, 0.02%)</title><rect x="50.4376%" y="533" width="0.0204%" height="15" fill="rgb(214,1,49)"/><text x="50.6876%" y="543.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (1 samples, 0.02%)</title><rect x="50.4580%" y="549" width="0.0204%" height="15" fill="rgb(226,163,40)"/><text x="50.7080%" y="559.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="50.4783%" y="517" width="0.0204%" height="15" fill="rgb(239,212,28)"/><text x="50.7283%" y="527.50"></text></g><g><title>glommio::parking::Reactor::process_timers (3 samples, 0.06%)</title><rect x="50.4783%" y="549" width="0.0611%" height="15" fill="rgb(220,20,13)"/><text x="50.7283%" y="559.50"></text></g><g><title>glommio::parking::Timers::process_timers (3 samples, 0.06%)</title><rect x="50.4783%" y="533" width="0.0611%" height="15" fill="rgb(210,164,35)"/><text x="50.7283%" y="543.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.04%)</title><rect x="50.4987%" y="517" width="0.0407%" height="15" fill="rgb(248,109,41)"/><text x="50.7487%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.04%)</title><rect x="50.4987%" y="501" width="0.0407%" height="15" fill="rgb(238,23,50)"/><text x="50.7487%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.04%)</title><rect x="50.4987%" y="485" width="0.0407%" height="15" fill="rgb(211,48,49)"/><text x="50.7487%" y="495.50"></text></g><g><title>unnamed-3 (2,428 samples, 49.42%)</title><rect x="1.1398%" y="565" width="49.4199%" height="15" fill="rgb(223,36,21)"/><text x="1.3898%" y="575.50">unnamed-3</text></g><g><title>io_uring_peek_batch_cqe (1 samples, 0.02%)</title><rect x="50.5394%" y="549" width="0.0204%" height="15" fill="rgb(207,123,46)"/><text x="50.7894%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.31%)</title><rect x="50.5597%" y="549" width="0.3053%" height="15" fill="rgb(240,218,32)"/><text x="50.8097%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (1 samples, 0.02%)</title><rect x="50.8651%" y="549" width="0.0204%" height="15" fill="rgb(252,5,43)"/><text x="51.1151%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (8 samples, 0.16%)</title><rect x="50.8854%" y="549" width="0.1628%" height="15" fill="rgb(252,84,19)"/><text x="51.1354%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (2 samples, 0.04%)</title><rect x="51.0482%" y="549" width="0.0407%" height="15" fill="rgb(243,152,39)"/><text x="51.2982%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.26%)</title><rect x="51.0889%" y="533" width="0.2646%" height="15" fill="rgb(234,160,15)"/><text x="51.3389%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.53%)</title><rect x="51.3536%" y="533" width="0.5292%" height="15" fill="rgb(237,34,20)"/><text x="51.6036%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.20%)</title><rect x="51.8828%" y="533" width="0.2035%" height="15" fill="rgb(229,97,13)"/><text x="52.1328%" y="543.50"></text></g><g><title>glommio::net::tcp_socket::TcpStream::read_zc::{{closure}} (2 samples, 0.04%)</title><rect x="52.0456%" y="517" width="0.0407%" height="15" fill="rgb(234,71,50)"/><text x="52.2956%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="52.0659%" y="501" width="0.0204%" height="15" fill="rgb(253,155,4)"/><text x="52.3159%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="52.0659%" y="485" width="0.0204%" height="15" fill="rgb(222,185,37)"/><text x="52.3159%" y="495.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (7 samples, 0.14%)</title><rect x="52.0863%" y="533" width="0.1425%" height="15" fill="rgb(251,177,13)"/><text x="52.3363%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (4 samples, 0.08%)</title><rect x="52.2288%" y="533" width="0.0814%" height="15" fill="rgb(250,179,40)"/><text x="52.4788%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (28 samples, 0.57%)</title><rect x="52.3102%" y="533" width="0.5699%" height="15" fill="rgb(242,44,2)"/><text x="52.5602%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (20 samples, 0.41%)</title><rect x="52.8801%" y="533" width="0.4071%" height="15" fill="rgb(216,177,13)"/><text x="53.1301%" y="543.50"></text></g><g><title>__GI___libc_free (3 samples, 0.06%)</title><rect x="53.2872%" y="533" width="0.0611%" height="15" fill="rgb(216,106,43)"/><text x="53.5372%" y="543.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.04%)</title><rect x="53.3483%" y="533" width="0.0407%" height="15" fill="rgb(216,183,2)"/><text x="53.5983%" y="543.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.24%)</title><rect x="53.3890%" y="533" width="0.2442%" height="15" fill="rgb(249,75,3)"/><text x="53.6390%" y="543.50"></text></g><g><title>__libc_send (2 samples, 0.04%)</title><rect x="53.6332%" y="533" width="0.0407%" height="15" fill="rgb(219,67,39)"/><text x="53.8832%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="53.6739%" y="533" width="0.0814%" height="15" fill="rgb(253,228,2)"/><text x="53.9239%" y="543.50"></text></g><g><title>__sys_io_uring_enter2 (5 samples, 0.10%)</title><rect x="53.7553%" y="533" width="0.1018%" height="15" fill="rgb(235,138,27)"/><text x="54.0053%" y="543.50"></text></g><g><title>_int_free (3 samples, 0.06%)</title><rect x="53.8571%" y="533" width="0.0611%" height="15" fill="rgb(236,97,51)"/><text x="54.1071%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.02%)</title><rect x="53.9182%" y="533" width="0.0204%" height="15" fill="rgb(240,80,30)"/><text x="54.1682%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.16%)</title><rect x="53.9385%" y="533" width="0.1628%" height="15" fill="rgb(230,178,19)"/><text x="54.1885%" y="543.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (1 samples, 0.02%)</title><rect x="54.1014%" y="533" width="0.0204%" height="15" fill="rgb(210,190,27)"/><text x="54.3514%" y="543.50"></text></g><g><title>glommio::multitask::LocalExecutor::spawn::{{closure}} (15 samples, 0.31%)</title><rect x="54.1217%" y="533" width="0.3053%" height="15" fill="rgb(222,107,31)"/><text x="54.3717%" y="543.50"></text></g><g><title>glommio::parking::Inner::park (3 samples, 0.06%)</title><rect x="54.4270%" y="533" width="0.0611%" height="15" fill="rgb(216,127,34)"/><text x="54.6770%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (9 samples, 0.18%)</title><rect x="54.5084%" y="517" width="0.1832%" height="15" fill="rgb(234,116,52)"/><text x="54.7584%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (9 samples, 0.18%)</title><rect x="54.5084%" y="501" width="0.1832%" height="15" fill="rgb(222,124,15)"/><text x="54.7584%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (9 samples, 0.18%)</title><rect x="54.5084%" y="485" width="0.1832%" height="15" fill="rgb(231,179,28)"/><text x="54.7584%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (5 samples, 0.10%)</title><rect x="54.6916%" y="501" width="0.1018%" height="15" fill="rgb(226,93,45)"/><text x="54.9416%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.10%)</title><rect x="54.6916%" y="485" width="0.1018%" height="15" fill="rgb(215,8,51)"/><text x="54.9416%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="54.7120%" y="469" width="0.0814%" height="15" fill="rgb(223,106,5)"/><text x="54.9620%" y="479.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (16 samples, 0.33%)</title><rect x="54.4881%" y="533" width="0.3257%" height="15" fill="rgb(250,191,5)"/><text x="54.7381%" y="543.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (6 samples, 0.12%)</title><rect x="54.6916%" y="517" width="0.1221%" height="15" fill="rgb(242,132,44)"/><text x="54.9416%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="54.7934%" y="501" width="0.0204%" height="15" fill="rgb(251,152,29)"/><text x="55.0434%" y="511.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="54.9562%" y="501" width="0.0407%" height="15" fill="rgb(218,179,5)"/><text x="55.2062%" y="511.50"></text></g><g><title>glommio::parking::Reactor::process_timers (10 samples, 0.20%)</title><rect x="54.8138%" y="533" width="0.2035%" height="15" fill="rgb(227,67,19)"/><text x="55.0638%" y="543.50"></text></g><g><title>glommio::parking::Timers::process_timers (3 samples, 0.06%)</title><rect x="54.9562%" y="517" width="0.0611%" height="15" fill="rgb(233,119,31)"/><text x="55.2062%" y="527.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="54.9969%" y="501" width="0.0204%" height="15" fill="rgb(241,120,22)"/><text x="55.2469%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.02%)</title><rect x="54.9969%" y="485" width="0.0204%" height="15" fill="rgb(224,102,30)"/><text x="55.2469%" y="495.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.02%)</title><rect x="54.9969%" y="469" width="0.0204%" height="15" fill="rgb(210,164,37)"/><text x="55.2469%" y="479.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (7 samples, 0.14%)</title><rect x="55.0173%" y="533" width="0.1425%" height="15" fill="rgb(226,191,16)"/><text x="55.2673%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7 samples, 0.14%)</title><rect x="55.0173%" y="517" width="0.1425%" height="15" fill="rgb(214,40,45)"/><text x="55.2673%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7 samples, 0.14%)</title><rect x="55.0173%" y="501" width="0.1425%" height="15" fill="rgb(244,29,26)"/><text x="55.2673%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.14%)</title><rect x="55.0173%" y="485" width="0.1425%" height="15" fill="rgb(216,16,5)"/><text x="55.2673%" y="495.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (2 samples, 0.04%)</title><rect x="55.1598%" y="533" width="0.0407%" height="15" fill="rgb(249,76,35)"/><text x="55.4098%" y="543.50"></text></g><g><title>glommio::sys::uring::Reactor::simple_poll (3 samples, 0.06%)</title><rect x="55.2005%" y="533" width="0.0611%" height="15" fill="rgb(207,11,44)"/><text x="55.4505%" y="543.50"></text></g><g><title>glommio::sys::uring::SleepableRing::arm_timer (9 samples, 0.18%)</title><rect x="55.2616%" y="533" width="0.1832%" height="15" fill="rgb(228,190,49)"/><text x="55.5116%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (7 samples, 0.14%)</title><rect x="55.4447%" y="533" width="0.1425%" height="15" fill="rgb(214,173,12)"/><text x="55.6947%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (3 samples, 0.06%)</title><rect x="55.5872%" y="533" width="0.0611%" height="15" fill="rgb(218,26,35)"/><text x="55.8372%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (7 samples, 0.14%)</title><rect x="55.6483%" y="533" width="0.1425%" height="15" fill="rgb(220,200,19)"/><text x="55.8983%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (7 samples, 0.14%)</title><rect x="55.7908%" y="533" width="0.1425%" height="15" fill="rgb(239,95,49)"/><text x="56.0408%" y="543.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (2 samples, 0.04%)</title><rect x="55.9332%" y="533" width="0.0407%" height="15" fill="rgb(235,85,53)"/><text x="56.1832%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::clone_waker (1 samples, 0.02%)</title><rect x="55.9739%" y="533" width="0.0204%" height="15" fill="rgb(233,133,31)"/><text x="56.2239%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (3 samples, 0.06%)</title><rect x="55.9943%" y="533" width="0.0611%" height="15" fill="rgb(218,25,20)"/><text x="56.2443%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="56.0147%" y="517" width="0.0407%" height="15" fill="rgb(252,210,38)"/><text x="56.2647%" y="527.50"></text></g><g><title>tcp_zero_copy::benchmark::{{closure}}::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.04%)</title><rect x="56.0147%" y="501" width="0.0407%" height="15" fill="rgb(242,134,21)"/><text x="56.2647%" y="511.50"></text></g><g><title>&lt;futures_lite::io::WriteFuture&lt;W&gt; as core::future::future::Future&gt;::poll (2 samples, 0.04%)</title><rect x="56.0147%" y="485" width="0.0407%" height="15" fill="rgb(213,28,48)"/><text x="56.2647%" y="495.50"></text></g><g><title>&lt;glommio::net::tcp_socket::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (2 samples, 0.04%)</title><rect x="56.0147%" y="469" width="0.0407%" height="15" fill="rgb(250,196,2)"/><text x="56.2647%" y="479.50"></text></g><g><title>glommio::net::stream::GlommioStream&lt;S&gt;::poll_write (2 samples, 0.04%)</title><rect x="56.0147%" y="453" width="0.0407%" height="15" fill="rgb(227,5,17)"/><text x="56.2647%" y="463.50"></text></g><g><title>glommio::net::stream::GlommioStream&lt;S&gt;::yolo_tx (2 samples, 0.04%)</title><rect x="56.0147%" y="437" width="0.0407%" height="15" fill="rgb(221,226,24)"/><text x="56.2647%" y="447.50"></text></g><g><title>glommio::net::yolo_send (2 samples, 0.04%)</title><rect x="56.0147%" y="421" width="0.0407%" height="15" fill="rgb(211,5,48)"/><text x="56.2647%" y="431.50"></text></g><g><title>glommio::sys::send_syscall (2 samples, 0.04%)</title><rect x="56.0147%" y="405" width="0.0407%" height="15" fill="rgb(219,150,6)"/><text x="56.2647%" y="415.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake (2 samples, 0.04%)</title><rect x="56.0554%" y="533" width="0.0407%" height="15" fill="rgb(251,46,16)"/><text x="56.3054%" y="543.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake_by_ref (6 samples, 0.12%)</title><rect x="56.0961%" y="533" width="0.1221%" height="15" fill="rgb(220,204,40)"/><text x="56.3461%" y="543.50"></text></g><g><title>glommio::task::waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.02%)</title><rect x="56.2182%" y="533" width="0.0204%" height="15" fill="rgb(211,85,2)"/><text x="56.4682%" y="543.50"></text></g><g><title>io_uring_peek_batch_cqe (9 samples, 0.18%)</title><rect x="56.2386%" y="533" width="0.1832%" height="15" fill="rgb(229,17,7)"/><text x="56.4886%" y="543.50"></text></g><g><title>io_uring_submit (1 samples, 0.02%)</title><rect x="56.4217%" y="533" width="0.0204%" height="15" fill="rgb(239,72,28)"/><text x="56.6717%" y="543.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (1 samples, 0.02%)</title><rect x="56.4421%" y="533" width="0.0204%" height="15" fill="rgb(230,47,54)"/><text x="56.6921%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.12%)</title><rect x="56.4624%" y="533" width="0.1221%" height="15" fill="rgb(214,50,8)"/><text x="56.7124%" y="543.50"></text></g><g><title>std::time::Instant::elapsed (7 samples, 0.14%)</title><rect x="56.5846%" y="533" width="0.1425%" height="15" fill="rgb(216,198,43)"/><text x="56.8346%" y="543.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.04%)</title><rect x="56.6863%" y="517" width="0.0407%" height="15" fill="rgb(234,20,35)"/><text x="56.9363%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.04%)</title><rect x="56.6863%" y="501" width="0.0407%" height="15" fill="rgb(254,45,19)"/><text x="56.9363%" y="511.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.04%)</title><rect x="56.6863%" y="485" width="0.0407%" height="15" fill="rgb(219,14,44)"/><text x="56.9363%" y="495.50"></text></g><g><title>[anon] (278 samples, 5.66%)</title><rect x="51.0889%" y="549" width="5.6585%" height="15" fill="rgb(217,220,26)"/><text x="51.3389%" y="559.50">[anon]</text></g><g><title>syscall (1 samples, 0.02%)</title><rect x="56.7271%" y="533" width="0.0204%" height="15" fill="rgb(213,158,28)"/><text x="56.9771%" y="543.50"></text></g><g><title>[anon_inode:[io_uring]] (12 samples, 0.24%)</title><rect x="56.7474%" y="549" width="0.2442%" height="15" fill="rgb(252,51,52)"/><text x="56.9974%" y="559.50"></text></g><g><title>io_uring_submit_and_wait (12 samples, 0.24%)</title><rect x="56.7474%" y="533" width="0.2442%" height="15" fill="rgb(246,89,16)"/><text x="56.9974%" y="543.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.37%)</title><rect x="56.9917%" y="533" width="0.3664%" height="15" fill="rgb(216,158,49)"/><text x="57.2417%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.37%)</title><rect x="57.3580%" y="533" width="0.3664%" height="15" fill="rgb(236,107,19)"/><text x="57.6080%" y="543.50"></text></g><g><title>glommio::net::tcp_socket::TcpStream::read_zc::{{closure}} (1 samples, 0.02%)</title><rect x="57.9279%" y="517" width="0.0204%" height="15" fill="rgb(228,185,30)"/><text x="58.1779%" y="527.50"></text></g><g><title>glommio::parking::Reactor::rushed_recv (1 samples, 0.02%)</title><rect x="57.9279%" y="501" width="0.0204%" height="15" fill="rgb(246,134,8)"/><text x="58.1779%" y="511.50"></text></g><g><title>glommio::sys::uring::Reactor::recv (1 samples, 0.02%)</title><rect x="57.9279%" y="485" width="0.0204%" height="15" fill="rgb(214,143,50)"/><text x="58.1779%" y="495.50"></text></g><g><title>glommio::sys::uring::Reactor::queue_standard_request (1 samples, 0.02%)</title><rect x="57.9279%" y="469" width="0.0204%" height="15" fill="rgb(228,75,8)"/><text x="58.1779%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.24%)</title><rect x="57.7244%" y="533" width="0.2442%" height="15" fill="rgb(207,175,4)"/><text x="57.9744%" y="543.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}} (1 samples, 0.02%)</title><rect x="57.9483%" y="517" width="0.0204%" height="15" fill="rgb(205,108,24)"/><text x="58.1983%" y="527.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="57.9483%" y="501" width="0.0204%" height="15" fill="rgb(244,120,49)"/><text x="58.1983%" y="511.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="57.9483%" y="485" width="0.0204%" height="15" fill="rgb(223,47,38)"/><text x="58.1983%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="57.9483%" y="469" width="0.0204%" height="15" fill="rgb(229,179,11)"/><text x="58.1983%" y="479.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (5 samples, 0.10%)</title><rect x="57.9687%" y="533" width="0.1018%" height="15" fill="rgb(231,122,1)"/><text x="58.2187%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.02%)</title><rect x="58.0704%" y="533" width="0.0204%" height="15" fill="rgb(245,119,9)"/><text x="58.3204%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (11 samples, 0.22%)</title><rect x="58.0908%" y="533" width="0.2239%" height="15" fill="rgb(241,163,25)"/><text x="58.3408%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="58.4775%" y="517" width="0.0407%" height="15" fill="rgb(217,214,3)"/><text x="58.7275%" y="527.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (4 samples, 0.08%)</title><rect x="58.5182%" y="517" width="0.0814%" height="15" fill="rgb(240,86,28)"/><text x="58.7682%" y="527.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (15 samples, 0.31%)</title><rect x="58.3147%" y="533" width="0.3053%" height="15" fill="rgb(215,47,9)"/><text x="58.5647%" y="543.50"></text></g><g><title>std::time::Instant::elapsed (1 samples, 0.02%)</title><rect x="58.5996%" y="517" width="0.0204%" height="15" fill="rgb(252,25,45)"/><text x="58.8496%" y="527.50"></text></g><g><title>&lt;glommio::task::join_handle::JoinHandle&lt;R&gt; as core::future::future::Future&gt;::poll (17 samples, 0.35%)</title><rect x="58.6200%" y="533" width="0.3460%" height="15" fill="rgb(251,164,9)"/><text x="58.8700%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="58.9660%" y="533" width="0.0204%" height="15" fill="rgb(233,194,0)"/><text x="59.2160%" y="543.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.02%)</title><rect x="58.9864%" y="533" width="0.0204%" height="15" fill="rgb(249,111,24)"/><text x="59.2364%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="59.0067%" y="533" width="0.0407%" height="15" fill="rgb(250,223,3)"/><text x="59.2567%" y="543.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="59.0474%" y="533" width="0.0407%" height="15" fill="rgb(236,178,37)"/><text x="59.2974%" y="543.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (2 samples, 0.04%)</title><rect x="59.0474%" y="517" width="0.0407%" height="15" fill="rgb(241,158,50)"/><text x="59.2974%" y="527.50"></text></g><g><title>_int_free (2 samples, 0.04%)</title><rect x="59.0881%" y="533" width="0.0407%" height="15" fill="rgb(213,121,41)"/><text x="59.3381%" y="543.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (3 samples, 0.06%)</title><rect x="59.1288%" y="533" width="0.0611%" height="15" fill="rgb(240,92,3)"/><text x="59.3788%" y="543.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::free (3 samples, 0.06%)</title><rect x="59.1899%" y="533" width="0.0611%" height="15" fill="rgb(205,123,3)"/><text x="59.4399%" y="543.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::find_k_for_p (3 samples, 0.06%)</title><rect x="59.1899%" y="517" width="0.0611%" height="15" fill="rgb(205,97,47)"/><text x="59.4399%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.08%)</title><rect x="59.2510%" y="533" width="0.0814%" height="15" fill="rgb(247,152,14)"/><text x="59.5010%" y="543.50"></text></g><g><title>glommio::executor::LocalExecutor::run_task_queues (27 samples, 0.55%)</title><rect x="59.3324%" y="533" width="0.5496%" height="15" fill="rgb(248,195,53)"/><text x="59.5824%" y="543.50"></text></g><g><title>glommio::parking::Inner::park (26 samples, 0.53%)</title><rect x="59.8819%" y="533" width="0.5292%" height="15" fill="rgb(226,201,16)"/><text x="60.1319%" y="543.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (1 samples, 0.02%)</title><rect x="60.4112%" y="533" width="0.0204%" height="15" fill="rgb(205,98,0)"/><text x="60.6612%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="60.4112%" y="517" width="0.0204%" height="15" fill="rgb(214,191,48)"/><text x="60.6612%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="60.4112%" y="501" width="0.0204%" height="15" fill="rgb(237,112,39)"/><text x="60.6612%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="60.4112%" y="485" width="0.0204%" height="15" fill="rgb(247,203,27)"/><text x="60.6612%" y="495.50"></text></g><g><title>glommio::parking::Reactor::spin_poll_io (1 samples, 0.02%)</title><rect x="60.4315%" y="533" width="0.0204%" height="15" fill="rgb(235,124,28)"/><text x="60.6815%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="60.4315%" y="517" width="0.0204%" height="15" fill="rgb(208,207,46)"/><text x="60.6815%" y="527.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="60.4315%" y="501" width="0.0204%" height="15" fill="rgb(234,176,4)"/><text x="60.6815%" y="511.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="60.4315%" y="485" width="0.0204%" height="15" fill="rgb(230,133,28)"/><text x="60.6815%" y="495.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (1 samples, 0.02%)</title><rect x="60.4519%" y="533" width="0.0204%" height="15" fill="rgb(211,137,40)"/><text x="60.7019%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="60.4519%" y="517" width="0.0204%" height="15" fill="rgb(254,35,13)"/><text x="60.7019%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="60.4519%" y="501" width="0.0204%" height="15" fill="rgb(225,49,51)"/><text x="60.7019%" y="511.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="60.4519%" y="485" width="0.0204%" height="15" fill="rgb(251,10,15)"/><text x="60.7019%" y="495.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="60.4519%" y="469" width="0.0204%" height="15" fill="rgb(228,207,15)"/><text x="60.7019%" y="479.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="60.4519%" y="453" width="0.0204%" height="15" fill="rgb(241,99,19)"/><text x="60.7019%" y="463.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="60.4519%" y="437" width="0.0204%" height="15" fill="rgb(207,104,49)"/><text x="60.7019%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="60.4519%" y="421" width="0.0204%" height="15" fill="rgb(234,99,18)"/><text x="60.7019%" y="431.50"></text></g><g><title>glommio::sys::uring::Reactor::simple_poll (8 samples, 0.16%)</title><rect x="60.4722%" y="533" width="0.1628%" height="15" fill="rgb(213,191,49)"/><text x="60.7222%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (5 samples, 0.10%)</title><rect x="60.6350%" y="533" width="0.1018%" height="15" fill="rgb(210,226,19)"/><text x="60.8850%" y="543.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (16 samples, 0.33%)</title><rect x="60.7368%" y="533" width="0.3257%" height="15" fill="rgb(229,97,18)"/><text x="60.9868%" y="543.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (1 samples, 0.02%)</title><rect x="61.0625%" y="533" width="0.0204%" height="15" fill="rgb(211,167,15)"/><text x="61.3125%" y="543.50"></text></g><g><title>io_uring_peek_batch_cqe (7 samples, 0.14%)</title><rect x="61.0828%" y="533" width="0.1425%" height="15" fill="rgb(210,169,34)"/><text x="61.3328%" y="543.50"></text></g><g><title>io_uring_submit (1 samples, 0.02%)</title><rect x="61.2253%" y="533" width="0.0204%" height="15" fill="rgb(241,121,31)"/><text x="61.4753%" y="543.50"></text></g><g><title>rust_io_uring_prep_timeout (1 samples, 0.02%)</title><rect x="61.2457%" y="533" width="0.0204%" height="15" fill="rgb(232,40,11)"/><text x="61.4957%" y="543.50"></text></g><g><title>glommio::parking::Parker::park (1 samples, 0.02%)</title><rect x="61.3271%" y="453" width="0.0204%" height="15" fill="rgb(205,86,26)"/><text x="61.5771%" y="463.50"></text></g><g><title>glommio::parking::Parker::poll_io (1 samples, 0.02%)</title><rect x="61.3474%" y="453" width="0.0204%" height="15" fill="rgb(231,126,28)"/><text x="61.5974%" y="463.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.12%)</title><rect x="61.2660%" y="533" width="0.1221%" height="15" fill="rgb(219,221,18)"/><text x="61.5160%" y="543.50"></text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::{{closure}} (6 samples, 0.12%)</title><rect x="61.2660%" y="517" width="0.1221%" height="15" fill="rgb(211,40,0)"/><text x="61.5160%" y="527.50"></text></g><g><title>glommio::executor::LocalExecutor::run (6 samples, 0.12%)</title><rect x="61.2660%" y="501" width="0.1221%" height="15" fill="rgb(239,85,43)"/><text x="61.5160%" y="511.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (6 samples, 0.12%)</title><rect x="61.2660%" y="485" width="0.1221%" height="15" fill="rgb(231,55,21)"/><text x="61.5160%" y="495.50"></text></g><g><title>glommio::executor::LocalExecutor::run::{{closure}} (6 samples, 0.12%)</title><rect x="61.2660%" y="469" width="0.1221%" height="15" fill="rgb(225,184,43)"/><text x="61.5160%" y="479.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.02%)</title><rect x="61.3678%" y="453" width="0.0204%" height="15" fill="rgb(251,158,41)"/><text x="61.6178%" y="463.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.02%)</title><rect x="61.3678%" y="437" width="0.0204%" height="15" fill="rgb(234,159,37)"/><text x="61.6178%" y="447.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.02%)</title><rect x="61.3678%" y="421" width="0.0204%" height="15" fill="rgb(216,204,22)"/><text x="61.6178%" y="431.50"></text></g><g><title>[unknown] (242 samples, 4.93%)</title><rect x="56.9917%" y="549" width="4.9257%" height="15" fill="rgb(214,17,3)"/><text x="57.2417%" y="559.50">[unkno..</text></g><g><title>syscall (26 samples, 0.53%)</title><rect x="61.3882%" y="533" width="0.5292%" height="15" fill="rgb(212,111,17)"/><text x="61.6382%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="61.9377%" y="405" width="0.0204%" height="15" fill="rgb(221,157,24)"/><text x="62.1877%" y="415.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="61.9377%" y="389" width="0.0204%" height="15" fill="rgb(252,16,13)"/><text x="62.1877%" y="399.50"></text></g><g><title>__posix_memalign (1 samples, 0.02%)</title><rect x="61.9581%" y="405" width="0.0204%" height="15" fill="rgb(221,62,2)"/><text x="62.2081%" y="415.50"></text></g><g><title>_mid_memalign (1 samples, 0.02%)</title><rect x="61.9581%" y="389" width="0.0204%" height="15" fill="rgb(247,87,22)"/><text x="62.2081%" y="399.50"></text></g><g><title>_int_memalign (1 samples, 0.02%)</title><rect x="61.9581%" y="373" width="0.0204%" height="15" fill="rgb(215,73,9)"/><text x="62.2081%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="61.9581%" y="357" width="0.0204%" height="15" fill="rgb(207,175,33)"/><text x="62.2081%" y="367.50"></text></g><g><title>malloc_consolidate (1 samples, 0.02%)</title><rect x="61.9581%" y="341" width="0.0204%" height="15" fill="rgb(243,129,54)"/><text x="62.2081%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.02%)</title><rect x="61.9784%" y="389" width="0.0204%" height="15" fill="rgb(227,119,45)"/><text x="62.2284%" y="399.50"></text></g><g><title>_int_malloc (1 samples, 0.02%)</title><rect x="61.9784%" y="373" width="0.0204%" height="15" fill="rgb(205,109,36)"/><text x="62.2284%" y="383.50"></text></g><g><title>__sys_io_uring_setup (1 samples, 0.02%)</title><rect x="61.9988%" y="389" width="0.0204%" height="15" fill="rgb(205,6,39)"/><text x="62.2488%" y="399.50"></text></g><g><title>glommio::sys::uring::SleepableRing::new (13 samples, 0.26%)</title><rect x="61.9784%" y="405" width="0.2646%" height="15" fill="rgb(221,32,16)"/><text x="62.2284%" y="415.50"></text></g><g><title>io_uring_queue_init_params (11 samples, 0.22%)</title><rect x="62.0191%" y="389" width="0.2239%" height="15" fill="rgb(228,144,50)"/><text x="62.2691%" y="399.50"></text></g><g><title>__sys_io_uring_setup (10 samples, 0.20%)</title><rect x="62.0395%" y="373" width="0.2035%" height="15" fill="rgb(229,201,53)"/><text x="62.2895%" y="383.50"></text></g><g><title>syscall (10 samples, 0.20%)</title><rect x="62.0395%" y="357" width="0.2035%" height="15" fill="rgb(249,153,27)"/><text x="62.2895%" y="367.50"></text></g><g><title>glommio::executor::LocalExecutor::new (20 samples, 0.41%)</title><rect x="61.9377%" y="421" width="0.4071%" height="15" fill="rgb(227,106,25)"/><text x="62.1877%" y="431.50"></text></g><g><title>io_uring_register_buffers (5 samples, 0.10%)</title><rect x="62.2430%" y="405" width="0.1018%" height="15" fill="rgb(230,65,29)"/><text x="62.4930%" y="415.50"></text></g><g><title>__sys_io_uring_register (5 samples, 0.10%)</title><rect x="62.2430%" y="389" width="0.1018%" height="15" fill="rgb(221,57,46)"/><text x="62.4930%" y="399.50"></text></g><g><title>syscall (5 samples, 0.10%)</title><rect x="62.2430%" y="373" width="0.1018%" height="15" fill="rgb(229,161,17)"/><text x="62.4930%" y="383.50"></text></g><g><title>core::cmp::Ordering::then_with (1 samples, 0.02%)</title><rect x="62.6908%" y="357" width="0.0204%" height="15" fill="rgb(222,213,11)"/><text x="62.9408%" y="367.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::gt::{{closure}} (1 samples, 0.02%)</title><rect x="62.6908%" y="341" width="0.0204%" height="15" fill="rgb(235,35,13)"/><text x="62.9408%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="62.6908%" y="325" width="0.0204%" height="15" fill="rgb(233,158,34)"/><text x="62.9408%" y="335.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.02%)</title><rect x="62.6908%" y="309" width="0.0204%" height="15" fill="rgb(215,151,48)"/><text x="62.9408%" y="319.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::gt (2 samples, 0.04%)</title><rect x="62.6908%" y="373" width="0.0407%" height="15" fill="rgb(229,84,14)"/><text x="62.9408%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="62.7112%" y="357" width="0.0204%" height="15" fill="rgb(229,68,14)"/><text x="62.9612%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.02%)</title><rect x="62.7112%" y="341" width="0.0204%" height="15" fill="rgb(243,106,26)"/><text x="62.9612%" y="351.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="63.0572%" y="309" width="0.0204%" height="15" fill="rgb(206,45,38)"/><text x="63.3072%" y="319.50"></text></g><g><title>glommio::task::waker_fn::Helper&lt;F&gt;::clone_waker (2 samples, 0.04%)</title><rect x="63.0572%" y="357" width="0.0407%" height="15" fill="rgb(226,6,15)"/><text x="63.3072%" y="367.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="63.0572%" y="341" width="0.0407%" height="15" fill="rgb(232,22,54)"/><text x="63.3072%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="63.0572%" y="325" width="0.0407%" height="15" fill="rgb(229,222,32)"/><text x="63.3072%" y="335.50"></text></g><g><title>glommio::task::waker_fn::Helper&lt;F&gt;::clone_waker (1 samples, 0.02%)</title><rect x="63.0775%" y="309" width="0.0204%" height="15" fill="rgb(228,62,29)"/><text x="63.3275%" y="319.50"></text></g><g><title>&lt;glommio::task::join_handle::JoinHandle&lt;R&gt; as core::future::future::Future&gt;::poll (20 samples, 0.41%)</title><rect x="62.7315%" y="373" width="0.4071%" height="15" fill="rgb(251,103,34)"/><text x="62.9815%" y="383.50"></text></g><g><title>glommio::task::waker_fn::Helper&lt;F&gt;::drop_waker (2 samples, 0.04%)</title><rect x="63.0979%" y="357" width="0.0407%" height="15" fill="rgb(233,12,30)"/><text x="63.3479%" y="367.50"></text></g><g><title>core::mem::drop (2 samples, 0.04%)</title><rect x="63.0979%" y="341" width="0.0407%" height="15" fill="rgb(238,52,0)"/><text x="63.3479%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="63.0979%" y="325" width="0.0407%" height="15" fill="rgb(223,98,5)"/><text x="63.3479%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="63.0979%" y="309" width="0.0407%" height="15" fill="rgb(228,75,37)"/><text x="63.3479%" y="319.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (2 samples, 0.04%)</title><rect x="63.0979%" y="293" width="0.0407%" height="15" fill="rgb(205,115,49)"/><text x="63.3479%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="63.0979%" y="277" width="0.0407%" height="15" fill="rgb(250,154,43)"/><text x="63.3479%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="63.0979%" y="261" width="0.0407%" height="15" fill="rgb(226,43,29)"/><text x="63.3479%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="63.0979%" y="245" width="0.0407%" height="15" fill="rgb(249,228,39)"/><text x="63.3479%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="63.0979%" y="229" width="0.0407%" height="15" fill="rgb(216,79,43)"/><text x="63.3479%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="63.0979%" y="213" width="0.0407%" height="15" fill="rgb(228,95,12)"/><text x="63.3479%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="63.0979%" y="197" width="0.0407%" height="15" fill="rgb(249,221,15)"/><text x="63.3479%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap (1 samples, 0.02%)</title><rect x="63.1386%" y="373" width="0.0204%" height="15" fill="rgb(233,34,13)"/><text x="63.3886%" y="383.50"></text></g><g><title>glommio::executor::LocalExecutor::preempt_timer_duration (1 samples, 0.02%)</title><rect x="63.1590%" y="373" width="0.0204%" height="15" fill="rgb(214,103,39)"/><text x="63.4090%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="64.8484%" y="357" width="0.1832%" height="15" fill="rgb(251,126,39)"/><text x="65.0984%" y="367.50"></text></g><g><title>__clock_gettime_2 (23 samples, 0.47%)</title><rect x="65.0315%" y="357" width="0.4681%" height="15" fill="rgb(214,216,36)"/><text x="65.2815%" y="367.50"></text></g><g><title>__vdso_clock_gettime (15 samples, 0.31%)</title><rect x="65.1944%" y="341" width="0.3053%" height="15" fill="rgb(220,221,8)"/><text x="65.4444%" y="351.50"></text></g><g><title>[[vdso]] (5 samples, 0.10%)</title><rect x="65.3979%" y="325" width="0.1018%" height="15" fill="rgb(240,216,3)"/><text x="65.6479%" y="335.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (1 samples, 0.02%)</title><rect x="65.4997%" y="357" width="0.0204%" height="15" fill="rgb(232,218,17)"/><text x="65.7497%" y="367.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="66.6395%" y="261" width="0.0204%" height="15" fill="rgb(229,163,45)"/><text x="66.8895%" y="271.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="66.9245%" y="229" width="0.0204%" height="15" fill="rgb(231,110,42)"/><text x="67.1745%" y="239.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.04%)</title><rect x="66.9448%" y="213" width="0.0407%" height="15" fill="rgb(208,170,48)"/><text x="67.1948%" y="223.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::add_waiter (2 samples, 0.04%)</title><rect x="66.9855%" y="213" width="0.0407%" height="15" fill="rgb(239,116,25)"/><text x="67.2355%" y="223.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="66.9855%" y="197" width="0.0407%" height="15" fill="rgb(219,200,50)"/><text x="67.2355%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="66.9855%" y="181" width="0.0407%" height="15" fill="rgb(245,200,0)"/><text x="67.2355%" y="191.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="66.9855%" y="165" width="0.0407%" height="15" fill="rgb(245,119,33)"/><text x="67.2355%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="67.0059%" y="149" width="0.0204%" height="15" fill="rgb(231,125,12)"/><text x="67.2559%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="67.0059%" y="133" width="0.0204%" height="15" fill="rgb(216,96,41)"/><text x="67.2559%" y="143.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="67.0059%" y="117" width="0.0204%" height="15" fill="rgb(248,43,45)"/><text x="67.2559%" y="127.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="67.0059%" y="101" width="0.0204%" height="15" fill="rgb(217,222,7)"/><text x="67.2559%" y="111.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="67.0059%" y="85" width="0.0204%" height="15" fill="rgb(233,28,6)"/><text x="67.2559%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="67.0059%" y="69" width="0.0204%" height="15" fill="rgb(231,218,15)"/><text x="67.2559%" y="79.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="67.0263%" y="197" width="0.0204%" height="15" fill="rgb(226,171,48)"/><text x="67.2763%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="67.0263%" y="181" width="0.0204%" height="15" fill="rgb(235,201,9)"/><text x="67.2763%" y="191.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="67.0263%" y="165" width="0.0204%" height="15" fill="rgb(217,80,15)"/><text x="67.2763%" y="175.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.47%)</title><rect x="66.6395%" y="277" width="0.4681%" height="15" fill="rgb(219,152,8)"/><text x="66.8895%" y="287.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}} (22 samples, 0.45%)</title><rect x="66.6599%" y="261" width="0.4478%" height="15" fill="rgb(243,107,38)"/><text x="66.9099%" y="271.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (9 samples, 0.18%)</title><rect x="66.9245%" y="245" width="0.1832%" height="15" fill="rgb(231,17,5)"/><text x="67.1745%" y="255.50"></text></g><g><title>glommio::parking::&lt;impl glommio::sys::Source&gt;::collect_rw::{{closure}}::{{closure}} (8 samples, 0.16%)</title><rect x="66.9448%" y="229" width="0.1628%" height="15" fill="rgb(209,25,54)"/><text x="67.1948%" y="239.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::take_result (4 samples, 0.08%)</title><rect x="67.0263%" y="213" width="0.0814%" height="15" fill="rgb(219,0,2)"/><text x="67.2763%" y="223.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="67.0466%" y="197" width="0.0611%" height="15" fill="rgb(246,9,5)"/><text x="67.2966%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="67.0466%" y="181" width="0.0611%" height="15" fill="rgb(226,159,4)"/><text x="67.2966%" y="191.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="67.0466%" y="165" width="0.0611%" height="15" fill="rgb(219,175,34)"/><text x="67.2966%" y="175.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.06%)</title><rect x="67.0466%" y="149" width="0.0611%" height="15" fill="rgb(236,10,46)"/><text x="67.2966%" y="159.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="67.0466%" y="133" width="0.0611%" height="15" fill="rgb(240,211,16)"/><text x="67.2966%" y="143.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="67.0466%" y="117" width="0.0611%" height="15" fill="rgb(205,3,43)"/><text x="67.2966%" y="127.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="67.0466%" y="101" width="0.0611%" height="15" fill="rgb(245,7,22)"/><text x="67.2966%" y="111.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="67.0466%" y="85" width="0.0611%" height="15" fill="rgb(239,132,32)"/><text x="67.2966%" y="95.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="67.0466%" y="69" width="0.0611%" height="15" fill="rgb(228,202,34)"/><text x="67.2966%" y="79.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::upgrade (12 samples, 0.24%)</title><rect x="67.1077%" y="277" width="0.2442%" height="15" fill="rgb(254,200,22)"/><text x="67.3577%" y="287.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="67.3316%" y="261" width="0.0204%" height="15" fill="rgb(219,10,39)"/><text x="67.5816%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="67.3316%" y="245" width="0.0204%" height="15" fill="rgb(226,210,39)"/><text x="67.5816%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="67.3316%" y="229" width="0.0204%" height="15" fill="rgb(208,219,16)"/><text x="67.5816%" y="239.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="67.3316%" y="213" width="0.0204%" height="15" fill="rgb(216,158,51)"/><text x="67.5816%" y="223.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="67.3316%" y="197" width="0.0204%" height="15" fill="rgb(233,14,44)"/><text x="67.5816%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="67.3316%" y="181" width="0.0204%" height="15" fill="rgb(237,97,39)"/><text x="67.5816%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="67.3316%" y="165" width="0.0204%" height="15" fill="rgb(218,198,43)"/><text x="67.5816%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="67.3519%" y="261" width="0.0814%" height="15" fill="rgb(231,104,20)"/><text x="67.6019%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="67.4333%" y="245" width="0.0814%" height="15" fill="rgb(254,36,13)"/><text x="67.6833%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (25 samples, 0.51%)</title><rect x="67.4333%" y="261" width="0.5089%" height="15" fill="rgb(248,14,50)"/><text x="67.6833%" y="271.50"></text></g><g><title>__GI___libc_free (21 samples, 0.43%)</title><rect x="67.5148%" y="245" width="0.4274%" height="15" fill="rgb(217,107,29)"/><text x="67.7648%" y="255.50"></text></g><g><title>_int_free (4 samples, 0.08%)</title><rect x="67.8608%" y="229" width="0.0814%" height="15" fill="rgb(251,169,33)"/><text x="68.1108%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (31 samples, 0.63%)</title><rect x="67.3519%" y="277" width="0.6310%" height="15" fill="rgb(217,108,32)"/><text x="67.6019%" y="287.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (2 samples, 0.04%)</title><rect x="67.9422%" y="261" width="0.0407%" height="15" fill="rgb(219,66,42)"/><text x="68.1922%" y="271.50"></text></g><g><title>glommio::io::read_result::ReadResult::from_partial_buffer (11 samples, 0.22%)</title><rect x="67.9829%" y="277" width="0.2239%" height="15" fill="rgb(206,180,7)"/><text x="68.2329%" y="287.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (11 samples, 0.22%)</title><rect x="67.9829%" y="261" width="0.2239%" height="15" fill="rgb(208,226,31)"/><text x="68.2329%" y="271.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.22%)</title><rect x="67.9829%" y="245" width="0.2239%" height="15" fill="rgb(218,26,49)"/><text x="68.2329%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (11 samples, 0.22%)</title><rect x="67.9829%" y="229" width="0.2239%" height="15" fill="rgb(233,197,48)"/><text x="68.2329%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.22%)</title><rect x="67.9829%" y="213" width="0.2239%" height="15" fill="rgb(252,181,51)"/><text x="68.2329%" y="223.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.22%)</title><rect x="67.9829%" y="197" width="0.2239%" height="15" fill="rgb(253,90,19)"/><text x="68.2329%" y="207.50"></text></g><g><title>__rdl_alloc (11 samples, 0.22%)</title><rect x="67.9829%" y="181" width="0.2239%" height="15" fill="rgb(215,171,30)"/><text x="68.2329%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.22%)</title><rect x="67.9829%" y="165" width="0.2239%" height="15" fill="rgb(214,222,9)"/><text x="68.2329%" y="175.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.22%)</title><rect x="67.9829%" y="149" width="0.2239%" height="15" fill="rgb(223,3,22)"/><text x="68.2329%" y="159.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="68.3493%" y="213" width="0.0611%" height="15" fill="rgb(225,196,46)"/><text x="68.5993%" y="223.50"></text></g><g><title>glommio::parking::Reactor::new_source (36 samples, 0.73%)</title><rect x="68.2882%" y="261" width="0.7327%" height="15" fill="rgb(209,110,37)"/><text x="68.5382%" y="271.50"></text></g><g><title>glommio::sys::Source::new (36 samples, 0.73%)</title><rect x="68.2882%" y="245" width="0.7327%" height="15" fill="rgb(249,89,12)"/><text x="68.5382%" y="255.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (36 samples, 0.73%)</title><rect x="68.2882%" y="229" width="0.7327%" height="15" fill="rgb(226,27,33)"/><text x="68.5382%" y="239.50"></text></g><g><title>alloc::alloc::exchange_malloc (30 samples, 0.61%)</title><rect x="68.4103%" y="213" width="0.6106%" height="15" fill="rgb(213,82,22)"/><text x="68.6603%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (30 samples, 0.61%)</title><rect x="68.4103%" y="197" width="0.6106%" height="15" fill="rgb(248,140,0)"/><text x="68.6603%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.61%)</title><rect x="68.4103%" y="181" width="0.6106%" height="15" fill="rgb(228,106,3)"/><text x="68.6603%" y="191.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.61%)</title><rect x="68.4103%" y="165" width="0.6106%" height="15" fill="rgb(209,23,37)"/><text x="68.6603%" y="175.50"></text></g><g><title>__rdl_alloc (30 samples, 0.61%)</title><rect x="68.4103%" y="149" width="0.6106%" height="15" fill="rgb(241,93,50)"/><text x="68.6603%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (30 samples, 0.61%)</title><rect x="68.4103%" y="133" width="0.6106%" height="15" fill="rgb(253,46,43)"/><text x="68.6603%" y="143.50"></text></g><g><title>__GI___libc_malloc (30 samples, 0.61%)</title><rect x="68.4103%" y="117" width="0.6106%" height="15" fill="rgb(226,206,43)"/><text x="68.6603%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (6 samples, 0.12%)</title><rect x="69.0617%" y="229" width="0.1221%" height="15" fill="rgb(217,54,7)"/><text x="69.3117%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.12%)</title><rect x="69.0617%" y="213" width="0.1221%" height="15" fill="rgb(223,5,52)"/><text x="69.3117%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::drain (9 samples, 0.18%)</title><rect x="69.0413%" y="245" width="0.1832%" height="15" fill="rgb(206,52,46)"/><text x="69.2913%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.04%)</title><rect x="69.1838%" y="229" width="0.0407%" height="15" fill="rgb(253,136,11)"/><text x="69.4338%" y="239.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.04%)</title><rect x="69.1838%" y="213" width="0.0407%" height="15" fill="rgb(208,106,33)"/><text x="69.4338%" y="223.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.04%)</title><rect x="69.1838%" y="197" width="0.0407%" height="15" fill="rgb(206,54,4)"/><text x="69.4338%" y="207.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.04%)</title><rect x="69.1838%" y="181" width="0.0407%" height="15" fill="rgb(213,3,15)"/><text x="69.4338%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="69.2245%" y="245" width="0.0204%" height="15" fill="rgb(252,211,39)"/><text x="69.4745%" y="255.50"></text></g><g><title>&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="69.2245%" y="229" width="0.0204%" height="15" fill="rgb(223,6,36)"/><text x="69.4745%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="69.2245%" y="213" width="0.0204%" height="15" fill="rgb(252,169,45)"/><text x="69.4745%" y="223.50"></text></g><g><title>&lt;&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="69.2245%" y="197" width="0.0204%" height="15" fill="rgb(212,48,26)"/><text x="69.4745%" y="207.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (1 samples, 0.02%)</title><rect x="69.2449%" y="245" width="0.0204%" height="15" fill="rgb(251,102,48)"/><text x="69.4949%" y="255.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (16 samples, 0.33%)</title><rect x="69.5298%" y="213" width="0.3257%" height="15" fill="rgb(243,208,16)"/><text x="69.7798%" y="223.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (14 samples, 0.28%)</title><rect x="69.5705%" y="197" width="0.2850%" height="15" fill="rgb(219,96,24)"/><text x="69.8205%" y="207.50"></text></g><g><title>io_uring_peek_batch_cqe (10 samples, 0.20%)</title><rect x="69.6519%" y="181" width="0.2035%" height="15" fill="rgb(219,33,29)"/><text x="69.9019%" y="191.50"></text></g><g><title>io_uring_cq_ready (5 samples, 0.10%)</title><rect x="69.7537%" y="165" width="0.1018%" height="15" fill="rgb(223,176,5)"/><text x="70.0037%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="70.0387%" y="197" width="0.0204%" height="15" fill="rgb(228,140,14)"/><text x="70.2887%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="70.9139%" y="181" width="0.0204%" height="15" fill="rgb(217,179,31)"/><text x="71.1639%" y="191.50"></text></g><g><title>glommio::sys::uring::UringBufferAllocator::new_buffer (13 samples, 0.26%)</title><rect x="70.9343%" y="181" width="0.2646%" height="15" fill="rgb(230,9,30)"/><text x="71.1843%" y="191.50"></text></g><g><title>io_uring_get_sqe (8 samples, 0.16%)</title><rect x="71.1989%" y="181" width="0.1628%" height="15" fill="rgb(230,136,20)"/><text x="71.4489%" y="191.50"></text></g><g><title>rust_io_uring_prep_read_fixed (1 samples, 0.02%)</title><rect x="71.3617%" y="181" width="0.0204%" height="15" fill="rgb(215,210,22)"/><text x="71.6117%" y="191.50"></text></g><g><title>io_uring_prep_read_fixed (1 samples, 0.02%)</title><rect x="71.3617%" y="165" width="0.0204%" height="15" fill="rgb(218,43,5)"/><text x="71.6117%" y="175.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (67 samples, 1.36%)</title><rect x="70.0590%" y="197" width="1.3637%" height="15" fill="rgb(216,11,5)"/><text x="70.3090%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.04%)</title><rect x="71.3820%" y="181" width="0.0407%" height="15" fill="rgb(209,82,29)"/><text x="71.6320%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="71.4024%" y="165" width="0.0204%" height="15" fill="rgb(244,115,12)"/><text x="71.6524%" y="175.50"></text></g><g><title>glommio::sys::uring::peek_source::{{closure}} (1 samples, 0.02%)</title><rect x="71.4024%" y="149" width="0.0204%" height="15" fill="rgb(222,82,18)"/><text x="71.6524%" y="159.50"></text></g><g><title>&lt;glommio::free_list::FreeList&lt;T&gt; as core::ops::index::Index&lt;glommio::free_list::Idx&lt;T&gt;&gt;&gt;::index (1 samples, 0.02%)</title><rect x="71.4024%" y="133" width="0.0204%" height="15" fill="rgb(249,227,8)"/><text x="71.6524%" y="143.50"></text></g><g><title>__io_uring_flush_sq (3 samples, 0.06%)</title><rect x="71.4431%" y="165" width="0.0611%" height="15" fill="rgb(253,141,45)"/><text x="71.6931%" y="175.50"></text></g><g><title>__sys_io_uring_enter2 (27 samples, 0.55%)</title><rect x="71.5042%" y="149" width="0.5496%" height="15" fill="rgb(234,184,4)"/><text x="71.7542%" y="159.50"></text></g><g><title>syscall (24 samples, 0.49%)</title><rect x="71.5652%" y="133" width="0.4885%" height="15" fill="rgb(218,194,23)"/><text x="71.8152%" y="143.50"></text></g><g><title>glommio::parking::Reactor::rush_dispatch (150 samples, 3.05%)</title><rect x="69.0210%" y="261" width="3.0531%" height="15" fill="rgb(235,66,41)"/><text x="69.2710%" y="271.50">glo..</text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (138 samples, 2.81%)</title><rect x="69.2652%" y="245" width="2.8089%" height="15" fill="rgb(245,217,1)"/><text x="69.5152%" y="255.50">gl..</text></g><g><title>glommio::sys::uring::Reactor::simple_poll (136 samples, 2.77%)</title><rect x="69.3059%" y="229" width="2.7682%" height="15" fill="rgb(229,91,1)"/><text x="69.5559%" y="239.50">gl..</text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (109 samples, 2.22%)</title><rect x="69.8555%" y="213" width="2.2186%" height="15" fill="rgb(207,101,30)"/><text x="70.1055%" y="223.50">g..</text></g><g><title>io_uring_submit (32 samples, 0.65%)</title><rect x="71.4228%" y="197" width="0.6513%" height="15" fill="rgb(223,82,49)"/><text x="71.6728%" y="207.50"></text></g><g><title>__io_uring_submit_and_wait (31 samples, 0.63%)</title><rect x="71.4431%" y="181" width="0.6310%" height="15" fill="rgb(218,167,17)"/><text x="71.6931%" y="191.50"></text></g><g><title>__io_uring_submit (28 samples, 0.57%)</title><rect x="71.5042%" y="165" width="0.5699%" height="15" fill="rgb(208,103,14)"/><text x="71.7542%" y="175.50"></text></g><g><title>sq_ring_needs_enter (1 samples, 0.02%)</title><rect x="72.0537%" y="149" width="0.0204%" height="15" fill="rgb(238,20,8)"/><text x="72.3037%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="72.5219%" y="213" width="0.0204%" height="15" fill="rgb(218,80,54)"/><text x="72.7719%" y="223.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="72.5626%" y="165" width="0.0204%" height="15" fill="rgb(240,144,17)"/><text x="72.8126%" y="175.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="72.5626%" y="149" width="0.0204%" height="15" fill="rgb(245,27,50)"/><text x="72.8126%" y="159.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="72.5626%" y="133" width="0.0204%" height="15" fill="rgb(251,51,7)"/><text x="72.8126%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="72.5626%" y="117" width="0.0204%" height="15" fill="rgb(245,217,29)"/><text x="72.8126%" y="127.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="72.5626%" y="101" width="0.0204%" height="15" fill="rgb(221,176,29)"/><text x="72.8126%" y="111.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="72.5626%" y="85" width="0.0204%" height="15" fill="rgb(212,180,24)"/><text x="72.8126%" y="95.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="72.5626%" y="69" width="0.0204%" height="15" fill="rgb(254,24,2)"/><text x="72.8126%" y="79.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="72.5626%" y="53" width="0.0204%" height="15" fill="rgb(230,100,2)"/><text x="72.8126%" y="63.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="72.5626%" y="37" width="0.0204%" height="15" fill="rgb(219,142,25)"/><text x="72.8126%" y="47.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="72.6440%" y="101" width="0.0407%" height="15" fill="rgb(240,73,43)"/><text x="72.8940%" y="111.50"></text></g><g><title>glommio::parking::Reactor::rushed_recv (222 samples, 4.52%)</title><rect x="68.2068%" y="277" width="4.5186%" height="15" fill="rgb(214,114,15)"/><text x="68.4568%" y="287.50">glomm..</text></g><g><title>glommio::sys::uring::Reactor::recv (32 samples, 0.65%)</title><rect x="72.0741%" y="261" width="0.6513%" height="15" fill="rgb(207,130,4)"/><text x="72.3241%" y="271.50"></text></g><g><title>glommio::sys::uring::Reactor::queue_standard_request (32 samples, 0.65%)</title><rect x="72.0741%" y="245" width="0.6513%" height="15" fill="rgb(221,25,40)"/><text x="72.3241%" y="255.50"></text></g><g><title>glommio::sys::uring::queue_request_into_ring (29 samples, 0.59%)</title><rect x="72.1352%" y="229" width="0.5903%" height="15" fill="rgb(241,184,7)"/><text x="72.3852%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.18%)</title><rect x="72.5422%" y="213" width="0.1832%" height="15" fill="rgb(235,159,4)"/><text x="72.7922%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.18%)</title><rect x="72.5422%" y="197" width="0.1832%" height="15" fill="rgb(214,87,48)"/><text x="72.7922%" y="207.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (9 samples, 0.18%)</title><rect x="72.5422%" y="181" width="0.1832%" height="15" fill="rgb(246,198,24)"/><text x="72.7922%" y="191.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (7 samples, 0.14%)</title><rect x="72.5829%" y="165" width="0.1425%" height="15" fill="rgb(209,66,40)"/><text x="72.8329%" y="175.50"></text></g><g><title>core::mem::replace (5 samples, 0.10%)</title><rect x="72.6237%" y="149" width="0.1018%" height="15" fill="rgb(233,147,39)"/><text x="72.8737%" y="159.50"></text></g><g><title>core::mem::swap (4 samples, 0.08%)</title><rect x="72.6440%" y="133" width="0.0814%" height="15" fill="rgb(231,145,52)"/><text x="72.8940%" y="143.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.08%)</title><rect x="72.6440%" y="117" width="0.0814%" height="15" fill="rgb(206,20,26)"/><text x="72.8940%" y="127.50"></text></g><g><title>core::ptr::read (2 samples, 0.04%)</title><rect x="72.6847%" y="101" width="0.0407%" height="15" fill="rgb(238,220,4)"/><text x="72.9347%" y="111.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="72.8272%" y="229" width="0.0204%" height="15" fill="rgb(252,195,42)"/><text x="73.0772%" y="239.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="72.8272%" y="213" width="0.0204%" height="15" fill="rgb(209,10,6)"/><text x="73.0772%" y="223.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="72.8272%" y="197" width="0.0204%" height="15" fill="rgb(229,3,52)"/><text x="73.0772%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="72.8475%" y="149" width="0.0204%" height="15" fill="rgb(253,49,37)"/><text x="73.0975%" y="159.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (342 samples, 6.96%)</title><rect x="66.0289%" y="309" width="6.9611%" height="15" fill="rgb(240,103,49)"/><text x="66.2789%" y="319.50">&lt;core::fu..</text></g><g><title>glommio::net::tcp_socket::TcpStream::read_zc::{{closure}} (338 samples, 6.88%)</title><rect x="66.1103%" y="293" width="6.8797%" height="15" fill="rgb(250,182,30)"/><text x="66.3603%" y="303.50">glommio::..</text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::extract_dma_buffer (13 samples, 0.26%)</title><rect x="72.7254%" y="277" width="0.2646%" height="15" fill="rgb(248,8,30)"/><text x="72.9754%" y="287.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::Source&gt;::extract_source_type (12 samples, 0.24%)</title><rect x="72.7458%" y="261" width="0.2442%" height="15" fill="rgb(237,120,30)"/><text x="72.9958%" y="271.50"></text></g><g><title>glommio::sys::uring::&lt;impl glommio::sys::InnerSource&gt;::update_source_type (12 samples, 0.24%)</title><rect x="72.7458%" y="245" width="0.2442%" height="15" fill="rgb(221,146,34)"/><text x="72.9958%" y="255.50"></text></g><g><title>core::mem::replace (7 samples, 0.14%)</title><rect x="72.8475%" y="229" width="0.1425%" height="15" fill="rgb(242,55,13)"/><text x="73.0975%" y="239.50"></text></g><g><title>core::mem::swap (7 samples, 0.14%)</title><rect x="72.8475%" y="213" width="0.1425%" height="15" fill="rgb(242,112,31)"/><text x="73.0975%" y="223.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.14%)</title><rect x="72.8475%" y="197" width="0.1425%" height="15" fill="rgb(249,192,27)"/><text x="73.0975%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping (7 samples, 0.14%)</title><rect x="72.8475%" y="181" width="0.1425%" height="15" fill="rgb(208,204,44)"/><text x="73.0975%" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (7 samples, 0.14%)</title><rect x="72.8475%" y="165" width="0.1425%" height="15" fill="rgb(208,93,54)"/><text x="73.0975%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.12%)</title><rect x="72.8679%" y="149" width="0.1221%" height="15" fill="rgb(242,1,31)"/><text x="73.1179%" y="159.50"></text></g><g><title>__libc_disable_asynccancel (13 samples, 0.26%)</title><rect x="73.5803%" y="197" width="0.2646%" height="15" fill="rgb(241,83,25)"/><text x="73.8303%" y="207.50"></text></g><g><title>&lt;futures_lite::io::WriteFuture&lt;W&gt; as core::future::future::Future&gt;::poll (53 samples, 1.08%)</title><rect x="72.9900%" y="309" width="1.0788%" height="15" fill="rgb(205,169,50)"/><text x="73.2400%" y="319.50"></text></g><g><title>&lt;glommio::net::tcp_socket::TcpStream as futures_io::if_std::AsyncWrite&gt;::poll_write (53 samples, 1.08%)</title><rect x="72.9900%" y="293" width="1.0788%" height="15" fill="rgb(239,186,37)"/><text x="73.2400%" y="303.50"></text></g><g><title>glommio::net::stream::GlommioStream&lt;S&gt;::poll_write (53 samples, 1.08%)</title><rect x="72.9900%" y="277" width="1.0788%" height="15" fill="rgb(205,221,10)"/><text x="73.2400%" y="287.50"></text></g><g><title>glommio::net::stream::GlommioStream&lt;S&gt;::yolo_tx (53 samples, 1.08%)</title><rect x="72.9900%" y="261" width="1.0788%" height="15" fill="rgb(218,196,15)"/><text x="73.2400%" y="271.50"></text></g><g><title>glommio::net::yolo_send (53 samples, 1.08%)</title><rect x="72.9900%" y="245" width="1.0788%" height="15" fill="rgb(218,196,35)"/><text x="73.2400%" y="255.50"></text></g><g><title>glommio::sys::send_syscall (53 samples, 1.08%)</title><rect x="72.9900%" y="229" width="1.0788%" height="15" fill="rgb(233,63,24)"/><text x="73.2400%" y="239.50"></text></g><g><title>__libc_send (52 samples, 1.06%)</title><rect x="73.0104%" y="213" width="1.0584%" height="15" fill="rgb(225,8,4)"/><text x="73.2604%" y="223.50"></text></g><g><title>__libc_enable_asynccancel (11 samples, 0.22%)</title><rect x="73.8449%" y="197" width="0.2239%" height="15" fill="rgb(234,105,35)"/><text x="74.0949%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.02%)</title><rect x="74.0688%" y="293" width="0.0204%" height="15" fill="rgb(236,21,32)"/><text x="74.3188%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.06%)</title><rect x="74.0688%" y="309" width="0.0611%" height="15" fill="rgb(228,109,6)"/><text x="74.3188%" y="319.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="74.0892%" y="293" width="0.0407%" height="15" fill="rgb(229,215,31)"/><text x="74.3392%" y="303.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="74.0892%" y="277" width="0.0407%" height="15" fill="rgb(221,52,54)"/><text x="74.3392%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="74.0892%" y="261" width="0.0407%" height="15" fill="rgb(252,129,43)"/><text x="74.3392%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="74.0892%" y="245" width="0.0407%" height="15" fill="rgb(248,183,27)"/><text x="74.3392%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (14 samples, 0.28%)</title><rect x="74.1502%" y="213" width="0.2850%" height="15" fill="rgb(250,0,22)"/><text x="74.4002%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.28%)</title><rect x="74.1502%" y="197" width="0.2850%" height="15" fill="rgb(213,166,10)"/><text x="74.4002%" y="207.50"></text></g><g><title>__rdl_dealloc (14 samples, 0.28%)</title><rect x="74.1502%" y="181" width="0.2850%" height="15" fill="rgb(207,163,36)"/><text x="74.4002%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (14 samples, 0.28%)</title><rect x="74.1502%" y="165" width="0.2850%" height="15" fill="rgb(208,122,22)"/><text x="74.4002%" y="175.50"></text></g><g><title>__GI___libc_free (13 samples, 0.26%)</title><rect x="74.1706%" y="149" width="0.2646%" height="15" fill="rgb(207,104,49)"/><text x="74.4206%" y="159.50"></text></g><g><title>_int_free (6 samples, 0.12%)</title><rect x="74.3130%" y="133" width="0.1221%" height="15" fill="rgb(248,211,50)"/><text x="74.5630%" y="143.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (3 samples, 0.06%)</title><rect x="74.4352%" y="213" width="0.0611%" height="15" fill="rgb(217,13,45)"/><text x="74.6852%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.06%)</title><rect x="74.4352%" y="197" width="0.0611%" height="15" fill="rgb(211,216,49)"/><text x="74.6852%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="74.4352%" y="181" width="0.0611%" height="15" fill="rgb(221,58,53)"/><text x="74.6852%" y="191.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="74.4352%" y="165" width="0.0611%" height="15" fill="rgb(220,112,41)"/><text x="74.6852%" y="175.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="74.4352%" y="149" width="0.0611%" height="15" fill="rgb(236,38,28)"/><text x="74.6852%" y="159.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="74.4352%" y="133" width="0.0611%" height="15" fill="rgb(227,195,22)"/><text x="74.6852%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="74.4352%" y="117" width="0.0611%" height="15" fill="rgb(214,55,33)"/><text x="74.6852%" y="127.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::block_index (1 samples, 0.02%)</title><rect x="74.6387%" y="181" width="0.0204%" height="15" fill="rgb(248,80,13)"/><text x="74.8887%" y="191.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::block_index (5 samples, 0.10%)</title><rect x="74.9440%" y="165" width="0.1018%" height="15" fill="rgb(238,52,6)"/><text x="75.1940%" y="175.50"></text></g><g><title>buddy_alloc::buddy_alloc::bit_isset (4 samples, 0.08%)</title><rect x="75.0458%" y="165" width="0.0814%" height="15" fill="rgb(224,198,47)"/><text x="75.2958%" y="175.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::find_k_for_p (24 samples, 0.49%)</title><rect x="74.6591%" y="181" width="0.4885%" height="15" fill="rgb(233,171,20)"/><text x="74.9091%" y="191.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="75.1272%" y="165" width="0.0204%" height="15" fill="rgb(241,30,25)"/><text x="75.3772%" y="175.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::free (7 samples, 0.14%)</title><rect x="75.1476%" y="181" width="0.1425%" height="15" fill="rgb(207,171,38)"/><text x="75.3976%" y="191.50"></text></g><g><title>buddy_alloc::buddy_alloc::Node::remove (10 samples, 0.20%)</title><rect x="75.2900%" y="181" width="0.2035%" height="15" fill="rgb(234,70,1)"/><text x="75.5400%" y="191.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::run (491 samples, 9.99%)</title><rect x="65.5200%" y="357" width="9.9939%" height="15" fill="rgb(232,178,18)"/><text x="65.7700%" y="367.50">glommio::task:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (486 samples, 9.89%)</title><rect x="65.6218%" y="341" width="9.8921%" height="15" fill="rgb(241,78,40)"/><text x="65.8718%" y="351.50">&lt;core::future:..</text></g><g><title>tcp_zero_copy::benchmark::{{closure}}::{{closure}}::{{closure}}::{{closure}} (486 samples, 9.89%)</title><rect x="65.6218%" y="325" width="9.8921%" height="15" fill="rgb(222,35,25)"/><text x="65.8718%" y="335.50">tcp_zero_copy:..</text></g><g><title>core::ptr::drop_in_place (68 samples, 1.38%)</title><rect x="74.1299%" y="309" width="1.3841%" height="15" fill="rgb(207,92,16)"/><text x="74.3799%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (67 samples, 1.36%)</title><rect x="74.1502%" y="293" width="1.3637%" height="15" fill="rgb(216,59,51)"/><text x="74.4002%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (67 samples, 1.36%)</title><rect x="74.1502%" y="277" width="1.3637%" height="15" fill="rgb(213,80,28)"/><text x="74.4002%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (67 samples, 1.36%)</title><rect x="74.1502%" y="261" width="1.3637%" height="15" fill="rgb(220,93,7)"/><text x="74.4002%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (67 samples, 1.36%)</title><rect x="74.1502%" y="245" width="1.3637%" height="15" fill="rgb(225,24,44)"/><text x="74.4002%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 1.36%)</title><rect x="74.1502%" y="229" width="1.3637%" height="15" fill="rgb(243,74,40)"/><text x="74.4002%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (50 samples, 1.02%)</title><rect x="74.4962%" y="213" width="1.0177%" height="15" fill="rgb(228,39,7)"/><text x="74.7462%" y="223.50"></text></g><g><title>buddy_alloc::buddy_alloc::BuddyAlloc::free (44 samples, 0.90%)</title><rect x="74.6184%" y="197" width="0.8956%" height="15" fill="rgb(227,79,8)"/><text x="74.8684%" y="207.50"></text></g><g><title>buddy_alloc::buddy_alloc::bit_clear (1 samples, 0.02%)</title><rect x="75.4936%" y="181" width="0.0204%" height="15" fill="rgb(236,58,11)"/><text x="75.7436%" y="191.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (2 samples, 0.04%)</title><rect x="75.5139%" y="277" width="0.0407%" height="15" fill="rgb(249,63,35)"/><text x="75.7639%" y="287.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.04%)</title><rect x="75.5139%" y="261" width="0.0407%" height="15" fill="rgb(252,114,16)"/><text x="75.7639%" y="271.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.02%)</title><rect x="75.5343%" y="245" width="0.0204%" height="15" fill="rgb(254,151,24)"/><text x="75.7843%" y="255.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (1 samples, 0.02%)</title><rect x="75.5343%" y="229" width="0.0204%" height="15" fill="rgb(253,54,39)"/><text x="75.7843%" y="239.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (1 samples, 0.02%)</title><rect x="75.5343%" y="213" width="0.0204%" height="15" fill="rgb(243,25,45)"/><text x="75.7843%" y="223.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1 samples, 0.02%)</title><rect x="75.5343%" y="197" width="0.0204%" height="15" fill="rgb(234,134,9)"/><text x="75.7843%" y="207.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (4 samples, 0.08%)</title><rect x="75.5139%" y="341" width="0.0814%" height="15" fill="rgb(227,166,31)"/><text x="75.7639%" y="351.50"></text></g><g><title>std::time::Instant::duration_since (4 samples, 0.08%)</title><rect x="75.5139%" y="325" width="0.0814%" height="15" fill="rgb(245,143,41)"/><text x="75.7639%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (4 samples, 0.08%)</title><rect x="75.5139%" y="309" width="0.0814%" height="15" fill="rgb(238,181,32)"/><text x="75.7639%" y="319.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (4 samples, 0.08%)</title><rect x="75.5139%" y="293" width="0.0814%" height="15" fill="rgb(224,113,18)"/><text x="75.7639%" y="303.50"></text></g><g><title>core::time::Duration::new (2 samples, 0.04%)</title><rect x="75.5547%" y="277" width="0.0407%" height="15" fill="rgb(240,229,28)"/><text x="75.8047%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.02%)</title><rect x="75.5750%" y="261" width="0.0204%" height="15" fill="rgb(250,185,3)"/><text x="75.8250%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="75.5750%" y="245" width="0.0204%" height="15" fill="rgb(212,59,25)"/><text x="75.8250%" y="255.50"></text></g><g><title>glommio::executor::LocalExecutor::run_task_queues (640 samples, 13.03%)</title><rect x="63.1793%" y="373" width="13.0267%" height="15" fill="rgb(221,87,20)"/><text x="63.4293%" y="383.50">glommio::executor::L..</text></g><g><title>std::time::Instant::elapsed (34 samples, 0.69%)</title><rect x="75.5139%" y="357" width="0.6920%" height="15" fill="rgb(213,74,28)"/><text x="75.7639%" y="367.50"></text></g><g><title>std::time::Instant::now (30 samples, 0.61%)</title><rect x="75.5954%" y="341" width="0.6106%" height="15" fill="rgb(224,132,34)"/><text x="75.8454%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (30 samples, 0.61%)</title><rect x="75.5954%" y="325" width="0.6106%" height="15" fill="rgb(222,101,24)"/><text x="75.8454%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::now (30 samples, 0.61%)</title><rect x="75.5954%" y="309" width="0.6106%" height="15" fill="rgb(254,142,4)"/><text x="75.8454%" y="319.50"></text></g><g><title>__clock_gettime_2 (23 samples, 0.47%)</title><rect x="75.7378%" y="293" width="0.4681%" height="15" fill="rgb(230,229,49)"/><text x="75.9878%" y="303.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.20%)</title><rect x="76.0024%" y="277" width="0.2035%" height="15" fill="rgb(238,70,47)"/><text x="76.2524%" y="287.50"></text></g><g><title>[[vdso]] (8 samples, 0.16%)</title><rect x="76.0432%" y="261" width="0.1628%" height="15" fill="rgb(231,160,17)"/><text x="76.2932%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.12%)</title><rect x="78.8927%" y="341" width="0.1221%" height="15" fill="rgb(218,68,53)"/><text x="79.1427%" y="351.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (13 samples, 0.26%)</title><rect x="79.0149%" y="341" width="0.2646%" height="15" fill="rgb(236,111,10)"/><text x="79.2649%" y="351.50"></text></g><g><title>io_uring_peek_batch_cqe (11 samples, 0.22%)</title><rect x="79.0556%" y="325" width="0.2239%" height="15" fill="rgb(224,34,41)"/><text x="79.3056%" y="335.50"></text></g><g><title>io_uring_cq_ready (5 samples, 0.10%)</title><rect x="79.1777%" y="309" width="0.1018%" height="15" fill="rgb(241,118,19)"/><text x="79.4277%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.33%)</title><rect x="79.7273%" y="325" width="0.3257%" height="15" fill="rgb(238,129,25)"/><text x="79.9773%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="79.9919%" y="309" width="0.0611%" height="15" fill="rgb(238,22,31)"/><text x="80.2419%" y="319.50"></text></g><g><title>__GI___libc_free (11 samples, 0.22%)</title><rect x="80.0529%" y="325" width="0.2239%" height="15" fill="rgb(222,174,48)"/><text x="80.3029%" y="335.50"></text></g><g><title>_int_free (4 samples, 0.08%)</title><rect x="80.1954%" y="309" width="0.0814%" height="15" fill="rgb(206,152,40)"/><text x="80.4454%" y="319.50"></text></g><g><title>cq_ring_needs_flush (4 samples, 0.08%)</title><rect x="80.6635%" y="309" width="0.0814%" height="15" fill="rgb(218,99,54)"/><text x="80.9135%" y="319.50"></text></g><g><title>io_uring_peek_batch_cqe (43 samples, 0.88%)</title><rect x="80.2768%" y="325" width="0.8752%" height="15" fill="rgb(220,174,26)"/><text x="80.5268%" y="335.50"></text></g><g><title>io_uring_cq_ready (20 samples, 0.41%)</title><rect x="80.7450%" y="309" width="0.4071%" height="15" fill="rgb(245,116,9)"/><text x="80.9950%" y="319.50"></text></g><g><title>rust_io_uring_cqe_seen (6 samples, 0.12%)</title><rect x="81.1520%" y="325" width="0.1221%" height="15" fill="rgb(209,72,35)"/><text x="81.4020%" y="335.50"></text></g><g><title>io_uring_cqe_seen (6 samples, 0.12%)</title><rect x="81.1520%" y="309" width="0.1221%" height="15" fill="rgb(226,126,21)"/><text x="81.4020%" y="319.50"></text></g><g><title>io_uring_cq_advance (4 samples, 0.08%)</title><rect x="81.1928%" y="293" width="0.0814%" height="15" fill="rgb(227,192,1)"/><text x="81.4428%" y="303.50"></text></g><g><title>io_uring_cq_advance (4 samples, 0.08%)</title><rect x="81.1928%" y="277" width="0.0814%" height="15" fill="rgb(237,180,29)"/><text x="81.4428%" y="287.50"></text></g><g><title>glommio::sys::uring::SOURCE_MAP::__getit (14 samples, 0.28%)</title><rect x="81.3149%" y="293" width="0.2850%" height="15" fill="rgb(230,197,35)"/><text x="81.5649%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.28%)</title><rect x="81.3149%" y="277" width="0.2850%" height="15" fill="rgb(246,193,31)"/><text x="81.5649%" y="287.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (14 samples, 0.28%)</title><rect x="81.3149%" y="261" width="0.2850%" height="15" fill="rgb(241,36,4)"/><text x="81.5649%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.28%)</title><rect x="81.3149%" y="245" width="0.2850%" height="15" fill="rgb(241,130,17)"/><text x="81.5649%" y="255.50"></text></g><g><title>core::ptr::read (11 samples, 0.22%)</title><rect x="81.6202%" y="197" width="0.2239%" height="15" fill="rgb(206,137,32)"/><text x="81.8702%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.22%)</title><rect x="81.6202%" y="181" width="0.2239%" height="15" fill="rgb(237,228,51)"/><text x="81.8702%" y="191.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.24%)</title><rect x="81.6202%" y="261" width="0.2442%" height="15" fill="rgb(243,6,42)"/><text x="81.8702%" y="271.50"></text></g><g><title>core::mem::replace (12 samples, 0.24%)</title><rect x="81.6202%" y="245" width="0.2442%" height="15" fill="rgb(251,74,28)"/><text x="81.8702%" y="255.50"></text></g><g><title>core::mem::swap (12 samples, 0.24%)</title><rect x="81.6202%" y="229" width="0.2442%" height="15" fill="rgb(218,20,49)"/><text x="81.8702%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (12 samples, 0.24%)</title><rect x="81.6202%" y="213" width="0.2442%" height="15" fill="rgb(238,28,14)"/><text x="81.8702%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="81.8441%" y="197" width="0.0204%" height="15" fill="rgb(229,40,46)"/><text x="82.0941%" y="207.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (21 samples, 0.43%)</title><rect x="81.6202%" y="277" width="0.4274%" height="15" fill="rgb(244,195,20)"/><text x="81.8702%" y="287.50"></text></g><g><title>core::mem::drop (9 samples, 0.18%)</title><rect x="81.8644%" y="261" width="0.1832%" height="15" fill="rgb(253,56,35)"/><text x="82.1144%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.18%)</title><rect x="81.8644%" y="245" width="0.1832%" height="15" fill="rgb(210,149,44)"/><text x="82.1144%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.18%)</title><rect x="81.8644%" y="229" width="0.1832%" height="15" fill="rgb(240,135,12)"/><text x="82.1144%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.18%)</title><rect x="81.8644%" y="213" width="0.1832%" height="15" fill="rgb(251,24,50)"/><text x="82.1144%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="81.8644%" y="197" width="0.1832%" height="15" fill="rgb(243,200,47)"/><text x="82.1144%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (4 samples, 0.08%)</title><rect x="82.0476%" y="277" width="0.0814%" height="15" fill="rgb(224,166,26)"/><text x="82.2976%" y="287.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (4 samples, 0.08%)</title><rect x="82.0476%" y="261" width="0.0814%" height="15" fill="rgb(233,0,47)"/><text x="82.2976%" y="271.50"></text></g><g><title>core::cell::BorrowRefMut::new (4 samples, 0.08%)</title><rect x="82.0476%" y="245" width="0.0814%" height="15" fill="rgb(253,80,5)"/><text x="82.2976%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="82.0883%" y="229" width="0.0407%" height="15" fill="rgb(214,133,25)"/><text x="82.3383%" y="239.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="82.0883%" y="213" width="0.0407%" height="15" fill="rgb(209,27,14)"/><text x="82.3383%" y="223.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="82.0883%" y="197" width="0.0407%" height="15" fill="rgb(219,102,51)"/><text x="82.3383%" y="207.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="82.0883%" y="181" width="0.0407%" height="15" fill="rgb(237,18,16)"/><text x="82.3383%" y="191.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="82.0883%" y="165" width="0.0407%" height="15" fill="rgb(241,85,17)"/><text x="82.3383%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="82.0883%" y="149" width="0.0407%" height="15" fill="rgb(236,90,42)"/><text x="82.3383%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (8 samples, 0.16%)</title><rect x="82.1290%" y="261" width="0.1628%" height="15" fill="rgb(249,57,21)"/><text x="82.3790%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (8 samples, 0.16%)</title><rect x="82.1290%" y="245" width="0.1628%" height="15" fill="rgb(243,12,36)"/><text x="82.3790%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="82.2919%" y="213" width="0.0814%" height="15" fill="rgb(253,128,47)"/><text x="82.5419%" y="223.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (158 samples, 3.22%)</title><rect x="79.2795%" y="341" width="3.2160%" height="15" fill="rgb(207,33,20)"/><text x="79.5295%" y="351.50">&lt;gl..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (60 samples, 1.22%)</title><rect x="81.2742%" y="325" width="1.2212%" height="15" fill="rgb(233,215,35)"/><text x="81.5242%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (58 samples, 1.18%)</title><rect x="81.3149%" y="309" width="1.1805%" height="15" fill="rgb(249,188,52)"/><text x="81.5649%" y="319.50"></text></g><g><title>glommio::sys::uring::consume_source::{{closure}} (44 samples, 0.90%)</title><rect x="81.5998%" y="293" width="0.8956%" height="15" fill="rgb(225,12,32)"/><text x="81.8498%" y="303.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::dealloc (18 samples, 0.37%)</title><rect x="82.1290%" y="277" width="0.3664%" height="15" fill="rgb(247,98,14)"/><text x="82.3790%" y="287.50"></text></g><g><title>core::mem::replace (10 samples, 0.20%)</title><rect x="82.2919%" y="261" width="0.2035%" height="15" fill="rgb(247,219,48)"/><text x="82.5419%" y="271.50"></text></g><g><title>core::mem::swap (10 samples, 0.20%)</title><rect x="82.2919%" y="245" width="0.2035%" height="15" fill="rgb(253,60,48)"/><text x="82.5419%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.20%)</title><rect x="82.2919%" y="229" width="0.2035%" height="15" fill="rgb(245,15,52)"/><text x="82.5419%" y="239.50"></text></g><g><title>core::ptr::read (6 samples, 0.12%)</title><rect x="82.3733%" y="213" width="0.1221%" height="15" fill="rgb(220,133,28)"/><text x="82.6233%" y="223.50"></text></g><g><title>__sys_io_uring_enter2 (2 samples, 0.04%)</title><rect x="82.4954%" y="341" width="0.0407%" height="15" fill="rgb(217,180,4)"/><text x="82.7454%" y="351.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.06%)</title><rect x="82.5361%" y="325" width="0.0611%" height="15" fill="rgb(251,24,1)"/><text x="82.7861%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.06%)</title><rect x="82.5361%" y="309" width="0.0611%" height="15" fill="rgb(212,185,49)"/><text x="82.7861%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.06%)</title><rect x="82.5361%" y="293" width="0.0611%" height="15" fill="rgb(215,175,22)"/><text x="82.7861%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="82.5565%" y="277" width="0.0407%" height="15" fill="rgb(250,205,14)"/><text x="82.8065%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="82.5565%" y="261" width="0.0407%" height="15" fill="rgb(225,211,22)"/><text x="82.8065%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="82.5565%" y="245" width="0.0407%" height="15" fill="rgb(251,179,42)"/><text x="82.8065%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="82.5565%" y="229" width="0.0407%" height="15" fill="rgb(208,216,51)"/><text x="82.8065%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="82.5565%" y="213" width="0.0407%" height="15" fill="rgb(235,36,11)"/><text x="82.8065%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="82.5565%" y="197" width="0.0407%" height="15" fill="rgb(213,189,28)"/><text x="82.8065%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="82.5972%" y="325" width="0.0407%" height="15" fill="rgb(227,203,42)"/><text x="82.8472%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="82.5972%" y="309" width="0.0407%" height="15" fill="rgb(244,72,36)"/><text x="82.8472%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="82.5972%" y="293" width="0.0407%" height="15" fill="rgb(213,53,17)"/><text x="82.8472%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="82.5972%" y="277" width="0.0407%" height="15" fill="rgb(207,167,3)"/><text x="82.8472%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="82.5972%" y="261" width="0.0407%" height="15" fill="rgb(216,98,30)"/><text x="82.8472%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="82.5972%" y="245" width="0.0407%" height="15" fill="rgb(236,123,15)"/><text x="82.8472%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="82.5972%" y="229" width="0.0407%" height="15" fill="rgb(248,81,50)"/><text x="82.8472%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="82.5972%" y="213" width="0.0407%" height="15" fill="rgb(214,120,4)"/><text x="82.8472%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="82.5972%" y="197" width="0.0407%" height="15" fill="rgb(208,179,34)"/><text x="82.8472%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.02%)</title><rect x="82.6583%" y="277" width="0.0204%" height="15" fill="rgb(227,140,7)"/><text x="82.9083%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (5 samples, 0.10%)</title><rect x="82.6379%" y="293" width="0.1018%" height="15" fill="rgb(214,22,6)"/><text x="82.8879%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="82.6786%" y="277" width="0.0611%" height="15" fill="rgb(207,137,27)"/><text x="82.9286%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="82.6786%" y="261" width="0.0611%" height="15" fill="rgb(210,8,46)"/><text x="82.9286%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_slice (2 samples, 0.04%)</title><rect x="82.7397%" y="293" width="0.0407%" height="15" fill="rgb(240,16,54)"/><text x="82.9897%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="82.7397%" y="277" width="0.0407%" height="15" fill="rgb(211,209,29)"/><text x="82.9897%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="82.7397%" y="261" width="0.0407%" height="15" fill="rgb(226,228,24)"/><text x="82.9897%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.04%)</title><rect x="82.7397%" y="245" width="0.0407%" height="15" fill="rgb(222,84,9)"/><text x="82.9897%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (8 samples, 0.16%)</title><rect x="82.6379%" y="309" width="0.1628%" height="15" fill="rgb(234,203,30)"/><text x="82.8879%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1 samples, 0.02%)</title><rect x="82.7804%" y="293" width="0.0204%" height="15" fill="rgb(238,109,14)"/><text x="83.0304%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="82.8007%" y="245" width="0.0204%" height="15" fill="rgb(233,206,34)"/><text x="83.0507%" y="255.50"></text></g><g><title>core::mem::take (2 samples, 0.04%)</title><rect x="82.8007%" y="309" width="0.0407%" height="15" fill="rgb(220,167,47)"/><text x="83.0507%" y="319.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="82.8007%" y="293" width="0.0407%" height="15" fill="rgb(238,105,10)"/><text x="83.0507%" y="303.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="82.8007%" y="277" width="0.0407%" height="15" fill="rgb(213,227,17)"/><text x="83.0507%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="82.8007%" y="261" width="0.0407%" height="15" fill="rgb(217,132,38)"/><text x="83.0507%" y="271.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="82.8211%" y="245" width="0.0204%" height="15" fill="rgb(242,146,4)"/><text x="83.0711%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="82.8618%" y="277" width="0.0204%" height="15" fill="rgb(212,61,9)"/><text x="83.1118%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="82.8821%" y="277" width="0.0204%" height="15" fill="rgb(247,126,22)"/><text x="83.1321%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.08%)</title><rect x="82.8414%" y="309" width="0.0814%" height="15" fill="rgb(220,196,2)"/><text x="83.0914%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="82.8618%" y="293" width="0.0611%" height="15" fill="rgb(208,46,4)"/><text x="83.1118%" y="303.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="82.9025%" y="277" width="0.0204%" height="15" fill="rgb(252,104,46)"/><text x="83.1525%" y="287.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (20 samples, 0.41%)</title><rect x="82.5361%" y="341" width="0.4071%" height="15" fill="rgb(237,152,48)"/><text x="82.7861%" y="351.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (15 samples, 0.31%)</title><rect x="82.6379%" y="325" width="0.3053%" height="15" fill="rgb(221,59,37)"/><text x="82.8879%" y="335.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (1 samples, 0.02%)</title><rect x="82.9229%" y="309" width="0.0204%" height="15" fill="rgb(209,202,51)"/><text x="83.1729%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="82.9432%" y="309" width="0.0204%" height="15" fill="rgb(228,81,30)"/><text x="83.1932%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="82.9432%" y="293" width="0.0204%" height="15" fill="rgb(227,42,39)"/><text x="83.1932%" y="303.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="82.9432%" y="325" width="0.0407%" height="15" fill="rgb(221,26,2)"/><text x="83.1932%" y="335.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="82.9636%" y="309" width="0.0204%" height="15" fill="rgb(254,61,31)"/><text x="83.2136%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="82.9839%" y="325" width="0.0611%" height="15" fill="rgb(222,173,38)"/><text x="83.2339%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="82.9839%" y="309" width="0.0611%" height="15" fill="rgb(218,50,12)"/><text x="83.2339%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="82.9839%" y="293" width="0.0611%" height="15" fill="rgb(223,88,40)"/><text x="83.2339%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.06%)</title><rect x="82.9839%" y="277" width="0.0611%" height="15" fill="rgb(237,54,19)"/><text x="83.2339%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="82.9839%" y="261" width="0.0611%" height="15" fill="rgb(251,129,25)"/><text x="83.2339%" y="271.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="82.9839%" y="245" width="0.0611%" height="15" fill="rgb(238,97,19)"/><text x="83.2339%" y="255.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="82.9839%" y="229" width="0.0611%" height="15" fill="rgb(240,169,18)"/><text x="83.2339%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="82.9839%" y="213" width="0.0611%" height="15" fill="rgb(230,187,49)"/><text x="83.2339%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="82.9839%" y="197" width="0.0611%" height="15" fill="rgb(209,44,26)"/><text x="83.2339%" y="207.50"></text></g><g><title>glommio::parking::Reactor::process_timers (3 samples, 0.06%)</title><rect x="83.0450%" y="325" width="0.0611%" height="15" fill="rgb(244,0,6)"/><text x="83.2950%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="83.1264%" y="309" width="0.0814%" height="15" fill="rgb(248,18,21)"/><text x="83.3764%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.08%)</title><rect x="83.1264%" y="293" width="0.0814%" height="15" fill="rgb(245,180,19)"/><text x="83.3764%" y="303.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (1 samples, 0.02%)</title><rect x="83.2078%" y="309" width="0.0204%" height="15" fill="rgb(252,118,36)"/><text x="83.4578%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::keys (2 samples, 0.04%)</title><rect x="83.2282%" y="309" width="0.0407%" height="15" fill="rgb(210,224,19)"/><text x="83.4782%" y="319.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="83.2689%" y="309" width="0.0814%" height="15" fill="rgb(218,30,24)"/><text x="83.5189%" y="319.50"></text></g><g><title>core::mem::swap (4 samples, 0.08%)</title><rect x="83.2689%" y="293" width="0.0814%" height="15" fill="rgb(219,75,50)"/><text x="83.5189%" y="303.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.08%)</title><rect x="83.2689%" y="277" width="0.0814%" height="15" fill="rgb(234,72,50)"/><text x="83.5189%" y="287.50"></text></g><g><title>core::ptr::read (4 samples, 0.08%)</title><rect x="83.2689%" y="261" width="0.0814%" height="15" fill="rgb(219,100,48)"/><text x="83.5189%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.04%)</title><rect x="83.3503%" y="309" width="0.0407%" height="15" fill="rgb(253,5,41)"/><text x="83.6003%" y="319.50"></text></g><g><title>glommio::parking::Reactor::process_timers (2 samples, 0.04%)</title><rect x="83.3910%" y="309" width="0.0407%" height="15" fill="rgb(247,181,11)"/><text x="83.6410%" y="319.50"></text></g><g><title>__clock_gettime_2 (38 samples, 0.77%)</title><rect x="83.4928%" y="261" width="0.7735%" height="15" fill="rgb(222,223,25)"/><text x="83.7428%" y="271.50"></text></g><g><title>__vdso_clock_gettime (27 samples, 0.55%)</title><rect x="83.7167%" y="245" width="0.5496%" height="15" fill="rgb(214,198,28)"/><text x="83.9667%" y="255.50"></text></g><g><title>[[vdso]] (15 samples, 0.31%)</title><rect x="83.9609%" y="229" width="0.3053%" height="15" fill="rgb(230,46,43)"/><text x="84.2109%" y="239.50"></text></g><g><title>&lt;i32 as std::sys::unix::IsMinusOne&gt;::is_minus_one (1 samples, 0.02%)</title><rect x="84.2662%" y="245" width="0.0204%" height="15" fill="rgb(233,65,53)"/><text x="84.5162%" y="255.50"></text></g><g><title>glommio::parking::Reactor::process_timers (67 samples, 1.36%)</title><rect x="82.9432%" y="341" width="1.3637%" height="15" fill="rgb(221,121,27)"/><text x="83.1932%" y="351.50"></text></g><g><title>glommio::parking::Timers::process_timers (59 samples, 1.20%)</title><rect x="83.1060%" y="325" width="1.2009%" height="15" fill="rgb(247,70,47)"/><text x="83.3560%" y="335.50"></text></g><g><title>std::time::Instant::now (43 samples, 0.88%)</title><rect x="83.4317%" y="309" width="0.8752%" height="15" fill="rgb(228,85,35)"/><text x="83.6817%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (43 samples, 0.88%)</title><rect x="83.4317%" y="293" width="0.8752%" height="15" fill="rgb(209,50,18)"/><text x="83.6817%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (43 samples, 0.88%)</title><rect x="83.4317%" y="277" width="0.8752%" height="15" fill="rgb(250,19,35)"/><text x="83.6817%" y="287.50"></text></g><g><title>std::sys::unix::cvt (2 samples, 0.04%)</title><rect x="84.2662%" y="261" width="0.0407%" height="15" fill="rgb(253,107,29)"/><text x="84.5162%" y="271.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="84.2866%" y="245" width="0.0204%" height="15" fill="rgb(252,179,29)"/><text x="84.5366%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::take (4 samples, 0.08%)</title><rect x="84.3069%" y="325" width="0.0814%" height="15" fill="rgb(238,194,6)"/><text x="84.5569%" y="335.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.08%)</title><rect x="84.3069%" y="309" width="0.0814%" height="15" fill="rgb(238,164,29)"/><text x="84.5569%" y="319.50"></text></g><g><title>core::mem::replace (4 samples, 0.08%)</title><rect x="84.3069%" y="293" width="0.0814%" height="15" fill="rgb(224,25,9)"/><text x="84.5569%" y="303.50"></text></g><g><title>core::mem::swap (4 samples, 0.08%)</title><rect x="84.3069%" y="277" width="0.0814%" height="15" fill="rgb(244,153,23)"/><text x="84.5569%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (4 samples, 0.08%)</title><rect x="84.3069%" y="261" width="0.0814%" height="15" fill="rgb(212,203,14)"/><text x="84.5569%" y="271.50"></text></g><g><title>core::ptr::read (4 samples, 0.08%)</title><rect x="84.3069%" y="245" width="0.0814%" height="15" fill="rgb(220,164,20)"/><text x="84.5569%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.08%)</title><rect x="84.3069%" y="229" width="0.0814%" height="15" fill="rgb(222,203,48)"/><text x="84.5569%" y="239.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="84.3884%" y="325" width="0.0407%" height="15" fill="rgb(215,159,22)"/><text x="84.6384%" y="335.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="84.3884%" y="309" width="0.0407%" height="15" fill="rgb(216,183,47)"/><text x="84.6384%" y="319.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="84.3884%" y="293" width="0.0407%" height="15" fill="rgb(229,195,25)"/><text x="84.6384%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::ptr (2 samples, 0.04%)</title><rect x="84.4291%" y="277" width="0.0407%" height="15" fill="rgb(224,132,51)"/><text x="84.6791%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.04%)</title><rect x="84.4291%" y="261" width="0.0407%" height="15" fill="rgb(240,63,7)"/><text x="84.6791%" y="271.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_back (14 samples, 0.28%)</title><rect x="84.4291%" y="309" width="0.2850%" height="15" fill="rgb(249,182,41)"/><text x="84.6791%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (14 samples, 0.28%)</title><rect x="84.4291%" y="293" width="0.2850%" height="15" fill="rgb(243,47,26)"/><text x="84.6791%" y="303.50"></text></g><g><title>core::ptr::write (12 samples, 0.24%)</title><rect x="84.4698%" y="277" width="0.2442%" height="15" fill="rgb(233,48,2)"/><text x="84.7198%" y="287.50"></text></g><g><title>glommio::sys::uring::&lt;impl core::ops::drop::Drop for glommio::sys::Source&gt;::drop (21 samples, 0.43%)</title><rect x="84.3069%" y="341" width="0.4274%" height="15" fill="rgb(244,165,34)"/><text x="84.5569%" y="351.50"></text></g><g><title>glommio::sys::uring::UringQueueState::cancel_request (15 samples, 0.31%)</title><rect x="84.4291%" y="325" width="0.3053%" height="15" fill="rgb(207,89,7)"/><text x="84.6791%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1 samples, 0.02%)</title><rect x="84.7140%" y="309" width="0.0204%" height="15" fill="rgb(244,117,36)"/><text x="84.9640%" y="319.50"></text></g><g><title>&lt;alloc::collections::vec_deque::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="84.7140%" y="293" width="0.0204%" height="15" fill="rgb(226,144,34)"/><text x="84.9640%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.02%)</title><rect x="84.7140%" y="277" width="0.0204%" height="15" fill="rgb(213,23,19)"/><text x="84.9640%" y="287.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (6 samples, 0.12%)</title><rect x="84.7344%" y="341" width="0.1221%" height="15" fill="rgb(217,75,12)"/><text x="84.9844%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="84.8361%" y="325" width="0.0204%" height="15" fill="rgb(224,159,17)"/><text x="85.0861%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.08%)</title><rect x="85.3654%" y="325" width="0.0814%" height="15" fill="rgb(217,118,1)"/><text x="85.6154%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.02%)</title><rect x="85.4468%" y="325" width="0.0204%" height="15" fill="rgb(232,180,48)"/><text x="85.6968%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (11 samples, 0.22%)</title><rect x="85.4671%" y="325" width="0.2239%" height="15" fill="rgb(230,27,33)"/><text x="85.7171%" y="335.50"></text></g><g><title>__io_uring_flush_sq (6 samples, 0.12%)</title><rect x="85.7928%" y="293" width="0.1221%" height="15" fill="rgb(205,31,21)"/><text x="86.0428%" y="303.50"></text></g><g><title>__sys_io_uring_enter (1 samples, 0.02%)</title><rect x="85.9353%" y="277" width="0.0204%" height="15" fill="rgb(253,59,4)"/><text x="86.1853%" y="287.50"></text></g><g><title>_init (2 samples, 0.04%)</title><rect x="85.9963%" y="261" width="0.0407%" height="15" fill="rgb(224,201,9)"/><text x="86.2463%" y="271.50"></text></g><g><title>__sys_io_uring_enter2 (21 samples, 0.43%)</title><rect x="85.9556%" y="277" width="0.4274%" height="15" fill="rgb(229,206,30)"/><text x="86.2056%" y="287.50"></text></g><g><title>syscall (17 samples, 0.35%)</title><rect x="86.0370%" y="261" width="0.3460%" height="15" fill="rgb(212,67,47)"/><text x="86.2870%" y="271.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (76 samples, 1.55%)</title><rect x="84.8565%" y="341" width="1.5469%" height="15" fill="rgb(211,96,50)"/><text x="85.1065%" y="351.50"></text></g><g><title>io_uring_submit (35 samples, 0.71%)</title><rect x="85.6910%" y="325" width="0.7124%" height="15" fill="rgb(252,114,18)"/><text x="85.9410%" y="335.50"></text></g><g><title>__io_uring_submit_and_wait (31 samples, 0.63%)</title><rect x="85.7724%" y="309" width="0.6310%" height="15" fill="rgb(223,58,37)"/><text x="86.0224%" y="319.50"></text></g><g><title>__io_uring_submit (24 samples, 0.49%)</title><rect x="85.9149%" y="293" width="0.4885%" height="15" fill="rgb(237,70,4)"/><text x="86.1649%" y="303.50"></text></g><g><title>sq_ring_needs_enter (1 samples, 0.02%)</title><rect x="86.3831%" y="277" width="0.0204%" height="15" fill="rgb(244,85,46)"/><text x="86.6331%" y="287.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (9 samples, 0.18%)</title><rect x="86.4848%" y="325" width="0.1832%" height="15" fill="rgb(223,39,52)"/><text x="86.7348%" y="335.50"></text></g><g><title>io_uring_peek_batch_cqe (8 samples, 0.16%)</title><rect x="86.5052%" y="309" width="0.1628%" height="15" fill="rgb(218,200,14)"/><text x="86.7552%" y="319.50"></text></g><g><title>io_uring_get_sqe (14 samples, 0.28%)</title><rect x="87.0344%" y="293" width="0.2850%" height="15" fill="rgb(208,171,16)"/><text x="87.2844%" y="303.50"></text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (52 samples, 1.06%)</title><rect x="86.4034%" y="341" width="1.0584%" height="15" fill="rgb(234,200,18)"/><text x="86.6534%" y="351.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (39 samples, 0.79%)</title><rect x="86.6680%" y="325" width="0.7938%" height="15" fill="rgb(228,45,11)"/><text x="86.9180%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (32 samples, 0.65%)</title><rect x="86.8105%" y="309" width="0.6513%" height="15" fill="rgb(237,182,11)"/><text x="87.0605%" y="319.50"></text></g><g><title>rust_io_uring_prep_cancel (7 samples, 0.14%)</title><rect x="87.3194%" y="293" width="0.1425%" height="15" fill="rgb(241,175,49)"/><text x="87.5694%" y="303.50"></text></g><g><title>io_uring_prep_cancel (7 samples, 0.14%)</title><rect x="87.3194%" y="277" width="0.1425%" height="15" fill="rgb(247,38,35)"/><text x="87.5694%" y="287.50"></text></g><g><title>io_uring_prep_rw (7 samples, 0.14%)</title><rect x="87.3194%" y="261" width="0.1425%" height="15" fill="rgb(228,39,49)"/><text x="87.5694%" y="271.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::upgrade (7 samples, 0.14%)</title><rect x="87.4822%" y="309" width="0.1425%" height="15" fill="rgb(226,101,26)"/><text x="87.7322%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.04%)</title><rect x="87.6654%" y="261" width="0.0407%" height="15" fill="rgb(206,141,19)"/><text x="87.9154%" y="271.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.04%)</title><rect x="87.6654%" y="245" width="0.0407%" height="15" fill="rgb(211,200,13)"/><text x="87.9154%" y="255.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.04%)</title><rect x="87.6654%" y="229" width="0.0407%" height="15" fill="rgb(241,121,6)"/><text x="87.9154%" y="239.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::len (1 samples, 0.02%)</title><rect x="87.7061%" y="229" width="0.0204%" height="15" fill="rgb(234,221,29)"/><text x="87.9561%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.02%)</title><rect x="87.7264%" y="213" width="0.0204%" height="15" fill="rgb(229,136,5)"/><text x="87.9764%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialOrd&gt;::le (1 samples, 0.02%)</title><rect x="87.7264%" y="197" width="0.0204%" height="15" fill="rgb(238,36,11)"/><text x="87.9764%" y="207.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1 samples, 0.02%)</title><rect x="87.7264%" y="181" width="0.0204%" height="15" fill="rgb(251,55,41)"/><text x="87.9764%" y="191.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (3 samples, 0.06%)</title><rect x="87.7264%" y="229" width="0.0611%" height="15" fill="rgb(242,34,40)"/><text x="87.9764%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="87.7468%" y="213" width="0.0407%" height="15" fill="rgb(215,42,17)"/><text x="87.9968%" y="223.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="87.7468%" y="197" width="0.0407%" height="15" fill="rgb(207,44,46)"/><text x="87.9968%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="87.7468%" y="181" width="0.0407%" height="15" fill="rgb(211,206,28)"/><text x="87.9968%" y="191.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (5 samples, 0.10%)</title><rect x="87.7061%" y="245" width="0.1018%" height="15" fill="rgb(237,167,16)"/><text x="87.9561%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::push (1 samples, 0.02%)</title><rect x="87.7875%" y="229" width="0.0204%" height="15" fill="rgb(233,66,6)"/><text x="88.0375%" y="239.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="87.7875%" y="213" width="0.0204%" height="15" fill="rgb(246,123,29)"/><text x="88.0375%" y="223.50"></text></g><g><title>glommio::executor::maybe_activate::{{closure}} (18 samples, 0.37%)</title><rect x="87.6247%" y="277" width="0.3664%" height="15" fill="rgb(209,62,40)"/><text x="87.8747%" y="287.50"></text></g><g><title>glommio::executor::ExecutorQueues::maybe_activate (14 samples, 0.28%)</title><rect x="87.7061%" y="261" width="0.2850%" height="15" fill="rgb(218,4,25)"/><text x="87.9561%" y="271.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (9 samples, 0.18%)</title><rect x="87.8079%" y="245" width="0.1832%" height="15" fill="rgb(253,91,49)"/><text x="88.0579%" y="255.50"></text></g><g><title>glommio::executor::maybe_activate (19 samples, 0.39%)</title><rect x="87.6247%" y="309" width="0.3867%" height="15" fill="rgb(228,155,29)"/><text x="87.8747%" y="319.50"></text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::with (19 samples, 0.39%)</title><rect x="87.6247%" y="293" width="0.3867%" height="15" fill="rgb(243,57,37)"/><text x="87.8747%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="87.9910%" y="277" width="0.0204%" height="15" fill="rgb(244,167,17)"/><text x="88.2410%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="87.9910%" y="261" width="0.0204%" height="15" fill="rgb(207,181,38)"/><text x="88.2410%" y="271.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::buffer_write (1 samples, 0.02%)</title><rect x="88.0114%" y="277" width="0.0204%" height="15" fill="rgb(211,8,23)"/><text x="88.2614%" y="287.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="88.0114%" y="261" width="0.0204%" height="15" fill="rgb(235,11,44)"/><text x="88.2614%" y="271.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::is_full (1 samples, 0.02%)</title><rect x="88.0318%" y="277" width="0.0204%" height="15" fill="rgb(248,18,52)"/><text x="88.2818%" y="287.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::push_back (3 samples, 0.06%)</title><rect x="88.0114%" y="293" width="0.0611%" height="15" fill="rgb(208,4,7)"/><text x="88.2614%" y="303.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T&gt;::wrap_add (1 samples, 0.02%)</title><rect x="88.0521%" y="277" width="0.0204%" height="15" fill="rgb(240,17,39)"/><text x="88.3021%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="88.0521%" y="261" width="0.0204%" height="15" fill="rgb(207,170,3)"/><text x="88.3021%" y="271.50"></text></g><g><title>glommio::multitask::LocalExecutor::spawn::{{closure}} (36 samples, 0.73%)</title><rect x="87.4618%" y="325" width="0.7327%" height="15" fill="rgb(236,100,52)"/><text x="87.7118%" y="335.50"></text></g><g><title>glommio::multitask::LocalQueue::push (9 samples, 0.18%)</title><rect x="88.0114%" y="309" width="0.1832%" height="15" fill="rgb(246,78,51)"/><text x="88.2614%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (6 samples, 0.12%)</title><rect x="88.0725%" y="293" width="0.1221%" height="15" fill="rgb(211,17,15)"/><text x="88.3225%" y="303.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (6 samples, 0.12%)</title><rect x="88.0725%" y="277" width="0.1221%" height="15" fill="rgb(209,59,46)"/><text x="88.3225%" y="287.50"></text></g><g><title>core::cell::BorrowRefMut::new (6 samples, 0.12%)</title><rect x="88.0725%" y="261" width="0.1221%" height="15" fill="rgb(210,92,25)"/><text x="88.3225%" y="271.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake (45 samples, 0.92%)</title><rect x="87.4618%" y="341" width="0.9159%" height="15" fill="rgb(238,174,52)"/><text x="87.7118%" y="351.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::wake_by_ref (9 samples, 0.18%)</title><rect x="88.1946%" y="325" width="0.1832%" height="15" fill="rgb(230,73,7)"/><text x="88.4446%" y="335.50"></text></g><g><title>glommio::task::raw::RawTask&lt;F,R,S&gt;::thread_id (3 samples, 0.06%)</title><rect x="88.3167%" y="309" width="0.0611%" height="15" fill="rgb(243,124,40)"/><text x="88.5667%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.06%)</title><rect x="88.3167%" y="293" width="0.0611%" height="15" fill="rgb(244,170,11)"/><text x="88.5667%" y="303.50"></text></g><g><title>glommio::task::raw::THREAD_ID::__getit (3 samples, 0.06%)</title><rect x="88.3167%" y="277" width="0.0611%" height="15" fill="rgb(207,114,54)"/><text x="88.5667%" y="287.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.06%)</title><rect x="88.3167%" y="261" width="0.0611%" height="15" fill="rgb(205,42,20)"/><text x="88.5667%" y="271.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (3 samples, 0.06%)</title><rect x="88.3167%" y="245" width="0.0611%" height="15" fill="rgb(230,30,28)"/><text x="88.5667%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.06%)</title><rect x="88.3167%" y="229" width="0.0611%" height="15" fill="rgb(205,73,54)"/><text x="88.5667%" y="239.50"></text></g><g><title>io_uring_get_sqe (7 samples, 0.14%)</title><rect x="88.3778%" y="341" width="0.1425%" height="15" fill="rgb(254,227,23)"/><text x="88.6278%" y="351.50"></text></g><g><title>__io_uring_flush_sq (7 samples, 0.14%)</title><rect x="88.6017%" y="309" width="0.1425%" height="15" fill="rgb(228,202,34)"/><text x="88.8517%" y="319.50"></text></g><g><title>__sys_io_uring_enter (2 samples, 0.04%)</title><rect x="88.7441%" y="293" width="0.0407%" height="15" fill="rgb(222,225,37)"/><text x="88.9941%" y="303.50"></text></g><g><title>_init (2 samples, 0.04%)</title><rect x="88.8866%" y="277" width="0.0407%" height="15" fill="rgb(221,14,54)"/><text x="89.1366%" y="287.50"></text></g><g><title>io_uring_submit_and_wait (39 samples, 0.79%)</title><rect x="88.5203%" y="341" width="0.7938%" height="15" fill="rgb(254,102,2)"/><text x="88.7703%" y="351.50"></text></g><g><title>__io_uring_submit_and_wait (36 samples, 0.73%)</title><rect x="88.5813%" y="325" width="0.7327%" height="15" fill="rgb(232,104,17)"/><text x="88.8313%" y="335.50"></text></g><g><title>__io_uring_submit (28 samples, 0.57%)</title><rect x="88.7441%" y="309" width="0.5699%" height="15" fill="rgb(250,220,14)"/><text x="88.9941%" y="319.50"></text></g><g><title>__sys_io_uring_enter2 (26 samples, 0.53%)</title><rect x="88.7849%" y="293" width="0.5292%" height="15" fill="rgb(241,158,9)"/><text x="89.0349%" y="303.50"></text></g><g><title>syscall (19 samples, 0.39%)</title><rect x="88.9273%" y="277" width="0.3867%" height="15" fill="rgb(246,9,43)"/><text x="89.1773%" y="287.50"></text></g><g><title>rust_io_uring_prep_poll_add (1 samples, 0.02%)</title><rect x="89.3141%" y="341" width="0.0204%" height="15" fill="rgb(206,73,33)"/><text x="89.5641%" y="351.50"></text></g><g><title>io_uring_prep_poll_add (1 samples, 0.02%)</title><rect x="89.3141%" y="325" width="0.0204%" height="15" fill="rgb(222,79,8)"/><text x="89.5641%" y="335.50"></text></g><g><title>io_uring_prep_rw (1 samples, 0.02%)</title><rect x="89.3141%" y="309" width="0.0204%" height="15" fill="rgb(234,8,54)"/><text x="89.5641%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="89.3344%" y="293" width="0.0204%" height="15" fill="rgb(209,134,38)"/><text x="89.5844%" y="303.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="89.3344%" y="277" width="0.0204%" height="15" fill="rgb(230,127,29)"/><text x="89.5844%" y="287.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="89.3548%" y="293" width="0.0204%" height="15" fill="rgb(242,44,41)"/><text x="89.6048%" y="303.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="89.3548%" y="277" width="0.0204%" height="15" fill="rgb(222,56,43)"/><text x="89.6048%" y="287.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="89.3548%" y="261" width="0.0204%" height="15" fill="rgb(238,39,47)"/><text x="89.6048%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="89.3548%" y="245" width="0.0204%" height="15" fill="rgb(226,79,43)"/><text x="89.6048%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="89.3548%" y="229" width="0.0204%" height="15" fill="rgb(242,105,53)"/><text x="89.6048%" y="239.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="89.3548%" y="213" width="0.0204%" height="15" fill="rgb(251,132,46)"/><text x="89.6048%" y="223.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="89.3548%" y="197" width="0.0204%" height="15" fill="rgb(231,77,14)"/><text x="89.6048%" y="207.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="89.3548%" y="181" width="0.0204%" height="15" fill="rgb(240,135,9)"/><text x="89.6048%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="89.3548%" y="165" width="0.0204%" height="15" fill="rgb(248,109,14)"/><text x="89.6048%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="89.3751%" y="277" width="0.0204%" height="15" fill="rgb(227,146,52)"/><text x="89.6251%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="89.3751%" y="261" width="0.0204%" height="15" fill="rgb(232,54,3)"/><text x="89.6251%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="89.3751%" y="245" width="0.0204%" height="15" fill="rgb(229,201,43)"/><text x="89.6251%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="89.3751%" y="229" width="0.0204%" height="15" fill="rgb(252,161,33)"/><text x="89.6251%" y="239.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (22 samples, 0.45%)</title><rect x="89.3344%" y="309" width="0.4478%" height="15" fill="rgb(226,146,40)"/><text x="89.5844%" y="319.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (20 samples, 0.41%)</title><rect x="89.3751%" y="293" width="0.4071%" height="15" fill="rgb(219,47,25)"/><text x="89.6251%" y="303.50"></text></g><g><title>core::mem::replace (19 samples, 0.39%)</title><rect x="89.3955%" y="277" width="0.3867%" height="15" fill="rgb(250,135,13)"/><text x="89.6455%" y="287.50"></text></g><g><title>core::mem::swap (17 samples, 0.35%)</title><rect x="89.4362%" y="261" width="0.3460%" height="15" fill="rgb(219,229,18)"/><text x="89.6862%" y="271.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (17 samples, 0.35%)</title><rect x="89.4362%" y="245" width="0.3460%" height="15" fill="rgb(217,152,27)"/><text x="89.6862%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.35%)</title><rect x="89.4362%" y="229" width="0.3460%" height="15" fill="rgb(225,71,47)"/><text x="89.6862%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.47%)</title><rect x="89.3344%" y="341" width="0.4681%" height="15" fill="rgb(220,139,14)"/><text x="89.5844%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.47%)</title><rect x="89.3344%" y="325" width="0.4681%" height="15" fill="rgb(247,54,32)"/><text x="89.5844%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="89.7822%" y="309" width="0.0204%" height="15" fill="rgb(252,131,39)"/><text x="90.0322%" y="319.50"></text></g><g><title>glommio::parking::Parker::park (684 samples, 13.92%)</title><rect x="76.2060%" y="373" width="13.9222%" height="15" fill="rgb(210,108,39)"/><text x="76.4560%" y="383.50">glommio::parking::Par..</text></g><g><title>glommio::parking::Inner::park (675 samples, 13.74%)</title><rect x="76.3892%" y="357" width="13.7391%" height="15" fill="rgb(205,23,29)"/><text x="76.6392%" y="367.50">glommio::parking::Inn..</text></g><g><title>syscall (16 samples, 0.33%)</title><rect x="89.8026%" y="341" width="0.3257%" height="15" fill="rgb(246,139,46)"/><text x="90.0526%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.10%)</title><rect x="90.7185%" y="341" width="0.1018%" height="15" fill="rgb(250,81,26)"/><text x="90.9685%" y="351.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (5 samples, 0.10%)</title><rect x="90.8203%" y="341" width="0.1018%" height="15" fill="rgb(214,104,7)"/><text x="91.0703%" y="351.50"></text></g><g><title>io_uring_peek_batch_cqe (5 samples, 0.10%)</title><rect x="90.8203%" y="325" width="0.1018%" height="15" fill="rgb(233,189,8)"/><text x="91.0703%" y="335.50"></text></g><g><title>io_uring_cq_ready (2 samples, 0.04%)</title><rect x="90.8813%" y="309" width="0.0407%" height="15" fill="rgb(228,141,17)"/><text x="91.1313%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (7 samples, 0.14%)</title><rect x="90.9220%" y="341" width="0.1425%" height="15" fill="rgb(247,157,1)"/><text x="91.1720%" y="351.50"></text></g><g><title>io_uring_peek_batch_cqe (6 samples, 0.12%)</title><rect x="90.9424%" y="325" width="0.1221%" height="15" fill="rgb(249,225,5)"/><text x="91.1924%" y="335.50"></text></g><g><title>io_uring_cq_ready (6 samples, 0.12%)</title><rect x="90.9424%" y="309" width="0.1221%" height="15" fill="rgb(242,55,13)"/><text x="91.1924%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="91.0645%" y="325" width="0.0204%" height="15" fill="rgb(230,49,50)"/><text x="91.3145%" y="335.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (1 samples, 0.02%)</title><rect x="91.0645%" y="309" width="0.0204%" height="15" fill="rgb(241,111,38)"/><text x="91.3145%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="91.0849%" y="325" width="0.0407%" height="15" fill="rgb(252,155,4)"/><text x="91.3349%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.04%)</title><rect x="91.0849%" y="309" width="0.0407%" height="15" fill="rgb(212,69,32)"/><text x="91.3349%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="91.0849%" y="293" width="0.0407%" height="15" fill="rgb(243,107,47)"/><text x="91.3349%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.04%)</title><rect x="91.0849%" y="277" width="0.0407%" height="15" fill="rgb(247,130,12)"/><text x="91.3349%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.04%)</title><rect x="91.0849%" y="261" width="0.0407%" height="15" fill="rgb(233,74,16)"/><text x="91.3349%" y="271.50"></text></g><g><title>core::mem::replace (2 samples, 0.04%)</title><rect x="91.0849%" y="245" width="0.0407%" height="15" fill="rgb(208,58,18)"/><text x="91.3349%" y="255.50"></text></g><g><title>core::mem::swap (2 samples, 0.04%)</title><rect x="91.0849%" y="229" width="0.0407%" height="15" fill="rgb(242,225,1)"/><text x="91.3349%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.04%)</title><rect x="91.0849%" y="213" width="0.0407%" height="15" fill="rgb(249,39,40)"/><text x="91.3349%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="91.0849%" y="197" width="0.0407%" height="15" fill="rgb(207,72,44)"/><text x="91.3349%" y="207.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (2 samples, 0.04%)</title><rect x="91.1256%" y="325" width="0.0407%" height="15" fill="rgb(215,193,12)"/><text x="91.3756%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.12%)</title><rect x="91.1866%" y="277" width="0.1221%" height="15" fill="rgb(248,41,39)"/><text x="91.4366%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.10%)</title><rect x="91.2070%" y="261" width="0.1018%" height="15" fill="rgb(253,85,4)"/><text x="91.4570%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (8 samples, 0.16%)</title><rect x="91.1663%" y="293" width="0.1628%" height="15" fill="rgb(243,70,31)"/><text x="91.4163%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="91.3088%" y="277" width="0.0204%" height="15" fill="rgb(253,195,26)"/><text x="91.5588%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="91.3088%" y="261" width="0.0204%" height="15" fill="rgb(243,42,11)"/><text x="91.5588%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_slice (2 samples, 0.04%)</title><rect x="91.3291%" y="293" width="0.0407%" height="15" fill="rgb(239,66,17)"/><text x="91.5791%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="91.3291%" y="277" width="0.0407%" height="15" fill="rgb(217,132,21)"/><text x="91.5791%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="91.3291%" y="261" width="0.0407%" height="15" fill="rgb(252,202,21)"/><text x="91.5791%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.04%)</title><rect x="91.3291%" y="245" width="0.0407%" height="15" fill="rgb(233,98,36)"/><text x="91.5791%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (11 samples, 0.22%)</title><rect x="91.1663%" y="309" width="0.2239%" height="15" fill="rgb(216,153,54)"/><text x="91.4163%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::set_len (1 samples, 0.02%)</title><rect x="91.3698%" y="293" width="0.0204%" height="15" fill="rgb(250,99,7)"/><text x="91.6198%" y="303.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="91.3902%" y="309" width="0.0204%" height="15" fill="rgb(207,56,50)"/><text x="91.6402%" y="319.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="91.3902%" y="293" width="0.0204%" height="15" fill="rgb(244,61,34)"/><text x="91.6402%" y="303.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="91.3902%" y="277" width="0.0204%" height="15" fill="rgb(241,50,38)"/><text x="91.6402%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="91.3902%" y="261" width="0.0204%" height="15" fill="rgb(212,166,30)"/><text x="91.6402%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="91.3902%" y="245" width="0.0204%" height="15" fill="rgb(249,127,32)"/><text x="91.6402%" y="255.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (18 samples, 0.37%)</title><rect x="91.0645%" y="341" width="0.3664%" height="15" fill="rgb(209,103,0)"/><text x="91.3145%" y="351.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (13 samples, 0.26%)</title><rect x="91.1663%" y="325" width="0.2646%" height="15" fill="rgb(238,209,51)"/><text x="91.4163%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="91.4105%" y="309" width="0.0204%" height="15" fill="rgb(237,56,23)"/><text x="91.6605%" y="319.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="91.4105%" y="293" width="0.0204%" height="15" fill="rgb(215,153,46)"/><text x="91.6605%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="91.4105%" y="277" width="0.0204%" height="15" fill="rgb(224,49,31)"/><text x="91.6605%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="91.4513%" y="325" width="0.0204%" height="15" fill="rgb(250,18,42)"/><text x="91.7013%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="91.4513%" y="309" width="0.0204%" height="15" fill="rgb(215,176,39)"/><text x="91.7013%" y="319.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="91.4513%" y="293" width="0.0204%" height="15" fill="rgb(223,77,29)"/><text x="91.7013%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="91.4513%" y="277" width="0.0204%" height="15" fill="rgb(234,94,52)"/><text x="91.7013%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="91.4513%" y="261" width="0.0204%" height="15" fill="rgb(220,154,50)"/><text x="91.7013%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="91.4513%" y="245" width="0.0204%" height="15" fill="rgb(212,11,10)"/><text x="91.7013%" y="255.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="91.4513%" y="229" width="0.0204%" height="15" fill="rgb(205,166,19)"/><text x="91.7013%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="91.4513%" y="213" width="0.0204%" height="15" fill="rgb(244,198,16)"/><text x="91.7013%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="91.4513%" y="197" width="0.0204%" height="15" fill="rgb(219,69,12)"/><text x="91.7013%" y="207.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::split_off (2 samples, 0.04%)</title><rect x="91.4716%" y="309" width="0.0407%" height="15" fill="rgb(245,30,7)"/><text x="91.7216%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::is_empty (2 samples, 0.04%)</title><rect x="91.4716%" y="293" width="0.0407%" height="15" fill="rgb(218,221,48)"/><text x="91.7216%" y="303.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="91.5123%" y="309" width="0.0204%" height="15" fill="rgb(216,66,15)"/><text x="91.7623%" y="319.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="91.5123%" y="293" width="0.0204%" height="15" fill="rgb(226,122,50)"/><text x="91.7623%" y="303.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="91.5123%" y="277" width="0.0204%" height="15" fill="rgb(239,156,16)"/><text x="91.7623%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="91.5123%" y="261" width="0.0204%" height="15" fill="rgb(224,27,38)"/><text x="91.7623%" y="271.50"></text></g><g><title>glommio::parking::Reactor::process_timers (22 samples, 0.45%)</title><rect x="91.4309%" y="341" width="0.4478%" height="15" fill="rgb(224,39,27)"/><text x="91.6809%" y="351.50"></text></g><g><title>glommio::parking::Timers::process_timers (20 samples, 0.41%)</title><rect x="91.4716%" y="325" width="0.4071%" height="15" fill="rgb(215,92,29)"/><text x="91.7216%" y="335.50"></text></g><g><title>std::time::Instant::now (17 samples, 0.35%)</title><rect x="91.5327%" y="309" width="0.3460%" height="15" fill="rgb(207,159,16)"/><text x="91.7827%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (17 samples, 0.35%)</title><rect x="91.5327%" y="293" width="0.3460%" height="15" fill="rgb(238,163,47)"/><text x="91.7827%" y="303.50"></text></g><g><title>std::sys::unix::time::inner::now (17 samples, 0.35%)</title><rect x="91.5327%" y="277" width="0.3460%" height="15" fill="rgb(219,91,49)"/><text x="91.7827%" y="287.50"></text></g><g><title>__clock_gettime_2 (17 samples, 0.35%)</title><rect x="91.5327%" y="261" width="0.3460%" height="15" fill="rgb(227,167,31)"/><text x="91.7827%" y="271.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.28%)</title><rect x="91.5937%" y="245" width="0.2850%" height="15" fill="rgb(234,80,54)"/><text x="91.8437%" y="255.50"></text></g><g><title>[[vdso]] (13 samples, 0.26%)</title><rect x="91.6141%" y="229" width="0.2646%" height="15" fill="rgb(212,114,2)"/><text x="91.8641%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="92.1433%" y="325" width="0.0407%" height="15" fill="rgb(234,50,24)"/><text x="92.3933%" y="335.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.55%)</title><rect x="92.1840%" y="325" width="0.5496%" height="15" fill="rgb(221,68,8)"/><text x="92.4340%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="92.7336%" y="325" width="0.0407%" height="15" fill="rgb(254,180,31)"/><text x="92.9836%" y="335.50"></text></g><g><title>glommio::sys::uring::SOURCE_MAP::__getit (2 samples, 0.04%)</title><rect x="92.7946%" y="293" width="0.0407%" height="15" fill="rgb(247,130,50)"/><text x="93.0446%" y="303.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="92.7946%" y="277" width="0.0407%" height="15" fill="rgb(211,109,4)"/><text x="93.0446%" y="287.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.04%)</title><rect x="92.7946%" y="261" width="0.0407%" height="15" fill="rgb(238,50,21)"/><text x="93.0446%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.04%)</title><rect x="92.7946%" y="245" width="0.0407%" height="15" fill="rgb(225,57,45)"/><text x="93.0446%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="92.8353%" y="277" width="0.0204%" height="15" fill="rgb(209,196,50)"/><text x="93.0853%" y="287.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.02%)</title><rect x="92.8353%" y="261" width="0.0204%" height="15" fill="rgb(242,140,13)"/><text x="93.0853%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="92.8557%" y="277" width="0.0204%" height="15" fill="rgb(217,111,7)"/><text x="93.1057%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="92.8557%" y="261" width="0.0204%" height="15" fill="rgb(253,193,51)"/><text x="93.1057%" y="271.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="92.8557%" y="245" width="0.0204%" height="15" fill="rgb(252,70,29)"/><text x="93.1057%" y="255.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="92.8557%" y="229" width="0.0204%" height="15" fill="rgb(232,127,12)"/><text x="93.1057%" y="239.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="92.8557%" y="213" width="0.0204%" height="15" fill="rgb(211,180,21)"/><text x="93.1057%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="92.8557%" y="197" width="0.0204%" height="15" fill="rgb(229,72,13)"/><text x="93.1057%" y="207.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="92.8760%" y="277" width="0.0204%" height="15" fill="rgb(240,211,49)"/><text x="93.1260%" y="287.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="92.8760%" y="261" width="0.0204%" height="15" fill="rgb(219,149,40)"/><text x="93.1260%" y="271.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="92.8760%" y="245" width="0.0204%" height="15" fill="rgb(210,127,46)"/><text x="93.1260%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="92.9575%" y="261" width="0.0204%" height="15" fill="rgb(220,106,7)"/><text x="93.2075%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="92.9575%" y="245" width="0.0204%" height="15" fill="rgb(249,31,22)"/><text x="93.2075%" y="255.50"></text></g><g><title>glommio::sys::uring::SleepableRing::arm_timer (62 samples, 1.26%)</title><rect x="91.8787%" y="341" width="1.2620%" height="15" fill="rgb(253,1,49)"/><text x="92.1287%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.37%)</title><rect x="92.7743%" y="325" width="0.3664%" height="15" fill="rgb(227,144,33)"/><text x="93.0243%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.35%)</title><rect x="92.7946%" y="309" width="0.3460%" height="15" fill="rgb(249,163,44)"/><text x="93.0446%" y="319.50"></text></g><g><title>glommio::sys::uring::add_source::{{closure}} (15 samples, 0.31%)</title><rect x="92.8353%" y="293" width="0.3053%" height="15" fill="rgb(234,15,39)"/><text x="93.0853%" y="303.50"></text></g><g><title>glommio::free_list::FreeList&lt;T&gt;::alloc (12 samples, 0.24%)</title><rect x="92.8964%" y="277" width="0.2442%" height="15" fill="rgb(207,66,16)"/><text x="93.1464%" y="287.50"></text></g><g><title>core::mem::replace (8 samples, 0.16%)</title><rect x="92.9778%" y="261" width="0.1628%" height="15" fill="rgb(233,112,24)"/><text x="93.2278%" y="271.50"></text></g><g><title>core::mem::swap (8 samples, 0.16%)</title><rect x="92.9778%" y="245" width="0.1628%" height="15" fill="rgb(230,90,22)"/><text x="93.2278%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (8 samples, 0.16%)</title><rect x="92.9778%" y="229" width="0.1628%" height="15" fill="rgb(229,61,13)"/><text x="93.2278%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.16%)</title><rect x="92.9778%" y="213" width="0.1628%" height="15" fill="rgb(225,57,24)"/><text x="93.2278%" y="223.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (4 samples, 0.08%)</title><rect x="93.1406%" y="341" width="0.0814%" height="15" fill="rgb(208,169,48)"/><text x="93.3906%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.16%)</title><rect x="93.5884%" y="325" width="0.1628%" height="15" fill="rgb(244,218,51)"/><text x="93.8384%" y="335.50"></text></g><g><title>io_uring_get_sqe (11 samples, 0.22%)</title><rect x="93.9345%" y="309" width="0.2239%" height="15" fill="rgb(214,148,10)"/><text x="94.1845%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (25 samples, 0.51%)</title><rect x="93.7513%" y="325" width="0.5089%" height="15" fill="rgb(225,174,27)"/><text x="94.0013%" y="335.50"></text></g><g><title>rust_io_uring_prep_timeout (5 samples, 0.10%)</title><rect x="94.1584%" y="309" width="0.1018%" height="15" fill="rgb(230,96,26)"/><text x="94.4084%" y="319.50"></text></g><g><title>io_uring_prep_timeout (5 samples, 0.10%)</title><rect x="94.1584%" y="293" width="0.1018%" height="15" fill="rgb(232,10,30)"/><text x="94.4084%" y="303.50"></text></g><g><title>io_uring_prep_rw (4 samples, 0.08%)</title><rect x="94.1787%" y="277" width="0.0814%" height="15" fill="rgb(222,8,50)"/><text x="94.4287%" y="287.50"></text></g><g><title>__io_uring_flush_sq (13 samples, 0.26%)</title><rect x="94.3415%" y="293" width="0.2646%" height="15" fill="rgb(213,81,27)"/><text x="94.5915%" y="303.50"></text></g><g><title>_init (1 samples, 0.02%)</title><rect x="94.7079%" y="261" width="0.0204%" height="15" fill="rgb(245,50,10)"/><text x="94.9579%" y="271.50"></text></g><g><title>__sys_io_uring_enter2 (36 samples, 0.73%)</title><rect x="94.6265%" y="277" width="0.7327%" height="15" fill="rgb(216,100,18)"/><text x="94.8765%" y="287.50"></text></g><g><title>syscall (31 samples, 0.63%)</title><rect x="94.7283%" y="261" width="0.6310%" height="15" fill="rgb(236,147,54)"/><text x="94.9783%" y="271.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (106 samples, 2.16%)</title><rect x="93.2221%" y="341" width="2.1575%" height="15" fill="rgb(205,143,26)"/><text x="93.4721%" y="351.50">g..</text></g><g><title>io_uring_submit (55 samples, 1.12%)</title><rect x="94.2601%" y="325" width="1.1195%" height="15" fill="rgb(236,26,9)"/><text x="94.5101%" y="335.50"></text></g><g><title>__io_uring_submit_and_wait (51 samples, 1.04%)</title><rect x="94.3415%" y="309" width="1.0381%" height="15" fill="rgb(221,165,53)"/><text x="94.5915%" y="319.50"></text></g><g><title>__io_uring_submit (38 samples, 0.77%)</title><rect x="94.6061%" y="293" width="0.7735%" height="15" fill="rgb(214,110,17)"/><text x="94.8561%" y="303.50"></text></g><g><title>sq_ring_needs_enter (1 samples, 0.02%)</title><rect x="95.3593%" y="277" width="0.0204%" height="15" fill="rgb(237,197,12)"/><text x="95.6093%" y="287.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (3 samples, 0.06%)</title><rect x="95.4203%" y="325" width="0.0611%" height="15" fill="rgb(205,84,17)"/><text x="95.6703%" y="335.50"></text></g><g><title>io_uring_peek_batch_cqe (2 samples, 0.04%)</title><rect x="95.4407%" y="309" width="0.0407%" height="15" fill="rgb(237,18,45)"/><text x="95.6907%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.6239%" y="309" width="0.0204%" height="15" fill="rgb(221,87,14)"/><text x="95.8739%" y="319.50"></text></g><g><title>glommio::parking::Parker::poll_io (283 samples, 5.76%)</title><rect x="90.1282%" y="373" width="5.7602%" height="15" fill="rgb(238,186,15)"/><text x="90.3782%" y="383.50">glommio..</text></g><g><title>glommio::parking::Inner::park (283 samples, 5.76%)</title><rect x="90.1282%" y="357" width="5.7602%" height="15" fill="rgb(208,115,11)"/><text x="90.3782%" y="367.50">glommio..</text></g><g><title>glommio::sys::uring::UringCommon::flush_cancellations (25 samples, 0.51%)</title><rect x="95.3796%" y="341" width="0.5089%" height="15" fill="rgb(254,175,0)"/><text x="95.6296%" y="351.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (20 samples, 0.41%)</title><rect x="95.4814%" y="325" width="0.4071%" height="15" fill="rgb(227,24,42)"/><text x="95.7314%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (12 samples, 0.24%)</title><rect x="95.6442%" y="309" width="0.2442%" height="15" fill="rgb(223,211,37)"/><text x="95.8942%" y="319.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="95.9699%" y="357" width="0.0204%" height="15" fill="rgb(235,49,27)"/><text x="96.2199%" y="367.50"></text></g><g><title>&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.9699%" y="341" width="0.0204%" height="15" fill="rgb(254,97,51)"/><text x="96.2199%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (1 samples, 0.02%)</title><rect x="95.9699%" y="325" width="0.0204%" height="15" fill="rgb(249,51,40)"/><text x="96.2199%" y="335.50"></text></g><g><title>&lt;&lt;alloc::vec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="95.9699%" y="309" width="0.0204%" height="15" fill="rgb(210,128,45)"/><text x="96.2199%" y="319.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.02%)</title><rect x="95.9902%" y="341" width="0.0204%" height="15" fill="rgb(224,137,50)"/><text x="96.2402%" y="351.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.02%)</title><rect x="95.9902%" y="325" width="0.0204%" height="15" fill="rgb(242,15,9)"/><text x="96.2402%" y="335.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.02%)</title><rect x="95.9902%" y="309" width="0.0204%" height="15" fill="rgb(233,187,41)"/><text x="96.2402%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="95.9902%" y="293" width="0.0204%" height="15" fill="rgb(227,2,29)"/><text x="96.2402%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="95.9902%" y="277" width="0.0204%" height="15" fill="rgb(222,70,3)"/><text x="96.2402%" y="287.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="95.9902%" y="261" width="0.0204%" height="15" fill="rgb(213,11,42)"/><text x="96.2402%" y="271.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="95.9902%" y="245" width="0.0204%" height="15" fill="rgb(225,150,9)"/><text x="96.2402%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="95.9902%" y="229" width="0.0204%" height="15" fill="rgb(230,162,45)"/><text x="96.2402%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="95.9902%" y="213" width="0.0204%" height="15" fill="rgb(222,14,52)"/><text x="96.2402%" y="223.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (6 samples, 0.12%)</title><rect x="96.0106%" y="341" width="0.1221%" height="15" fill="rgb(254,198,14)"/><text x="96.2606%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="96.1327%" y="325" width="0.0204%" height="15" fill="rgb(220,217,30)"/><text x="96.3827%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append_elements (3 samples, 0.06%)</title><rect x="96.1531%" y="309" width="0.0611%" height="15" fill="rgb(215,146,41)"/><text x="96.4031%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.04%)</title><rect x="96.1734%" y="293" width="0.0407%" height="15" fill="rgb(217,27,36)"/><text x="96.4234%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.04%)</title><rect x="96.1734%" y="277" width="0.0407%" height="15" fill="rgb(219,218,39)"/><text x="96.4234%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.02%)</title><rect x="96.2141%" y="261" width="0.0204%" height="15" fill="rgb(219,4,42)"/><text x="96.4641%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::append (5 samples, 0.10%)</title><rect x="96.1531%" y="325" width="0.1018%" height="15" fill="rgb(249,119,36)"/><text x="96.4031%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_slice (2 samples, 0.04%)</title><rect x="96.2141%" y="309" width="0.0407%" height="15" fill="rgb(209,23,33)"/><text x="96.4641%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.04%)</title><rect x="96.2141%" y="293" width="0.0407%" height="15" fill="rgb(211,10,0)"/><text x="96.4641%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::as_ptr (2 samples, 0.04%)</title><rect x="96.2141%" y="277" width="0.0407%" height="15" fill="rgb(208,99,37)"/><text x="96.4641%" y="287.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (1 samples, 0.02%)</title><rect x="96.2345%" y="261" width="0.0204%" height="15" fill="rgb(213,132,31)"/><text x="96.4845%" y="271.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.2548%" y="277" width="0.0204%" height="15" fill="rgb(243,129,40)"/><text x="96.5048%" y="287.50"></text></g><g><title>glommio::parking::Reactor::process_shared_channels (23 samples, 0.47%)</title><rect x="95.9902%" y="357" width="0.4681%" height="15" fill="rgb(210,66,33)"/><text x="96.2402%" y="367.50"></text></g><g><title>glommio::parking::SharedChannels::process_shared_channels (16 samples, 0.33%)</title><rect x="96.1327%" y="341" width="0.3257%" height="15" fill="rgb(209,189,4)"/><text x="96.3827%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (10 samples, 0.20%)</title><rect x="96.2548%" y="325" width="0.2035%" height="15" fill="rgb(214,107,37)"/><text x="96.5048%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.20%)</title><rect x="96.2548%" y="309" width="0.2035%" height="15" fill="rgb(245,88,54)"/><text x="96.5048%" y="319.50"></text></g><g><title>core::mem::drop (10 samples, 0.20%)</title><rect x="96.2548%" y="293" width="0.2035%" height="15" fill="rgb(205,146,20)"/><text x="96.5048%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (9 samples, 0.18%)</title><rect x="96.2752%" y="277" width="0.1832%" height="15" fill="rgb(220,161,25)"/><text x="96.5252%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.18%)</title><rect x="96.2752%" y="261" width="0.1832%" height="15" fill="rgb(215,152,15)"/><text x="96.5252%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="96.4787%" y="341" width="0.0611%" height="15" fill="rgb(233,192,44)"/><text x="96.7287%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.06%)</title><rect x="96.4787%" y="325" width="0.0611%" height="15" fill="rgb(240,170,46)"/><text x="96.7287%" y="335.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (3 samples, 0.06%)</title><rect x="96.4787%" y="309" width="0.0611%" height="15" fill="rgb(207,104,33)"/><text x="96.7287%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.06%)</title><rect x="96.4787%" y="293" width="0.0611%" height="15" fill="rgb(219,21,39)"/><text x="96.7287%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.06%)</title><rect x="96.4787%" y="277" width="0.0611%" height="15" fill="rgb(214,133,29)"/><text x="96.7287%" y="287.50"></text></g><g><title>core::mem::replace (3 samples, 0.06%)</title><rect x="96.4787%" y="261" width="0.0611%" height="15" fill="rgb(226,93,6)"/><text x="96.7287%" y="271.50"></text></g><g><title>core::mem::swap (3 samples, 0.06%)</title><rect x="96.4787%" y="245" width="0.0611%" height="15" fill="rgb(252,222,34)"/><text x="96.7287%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.06%)</title><rect x="96.4787%" y="229" width="0.0611%" height="15" fill="rgb(252,92,48)"/><text x="96.7287%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.06%)</title><rect x="96.4787%" y="213" width="0.0611%" height="15" fill="rgb(245,223,24)"/><text x="96.7287%" y="223.50"></text></g><g><title>glommio::parking::Reactor::process_timers (2 samples, 0.04%)</title><rect x="96.5398%" y="341" width="0.0407%" height="15" fill="rgb(205,176,3)"/><text x="96.7898%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="96.5805%" y="325" width="0.0204%" height="15" fill="rgb(235,151,15)"/><text x="96.8305%" y="335.50"></text></g><g><title>__clock_gettime_2 (27 samples, 0.55%)</title><rect x="96.6009%" y="277" width="0.5496%" height="15" fill="rgb(237,209,11)"/><text x="96.8509%" y="287.50"></text></g><g><title>__vdso_clock_gettime (17 samples, 0.35%)</title><rect x="96.8044%" y="261" width="0.3460%" height="15" fill="rgb(243,227,24)"/><text x="97.0544%" y="271.50"></text></g><g><title>[[vdso]] (16 samples, 0.33%)</title><rect x="96.8248%" y="245" width="0.3257%" height="15" fill="rgb(239,193,16)"/><text x="97.0748%" y="255.50"></text></g><g><title>glommio::parking::Reactor::process_timers (35 samples, 0.71%)</title><rect x="96.4584%" y="357" width="0.7124%" height="15" fill="rgb(231,27,9)"/><text x="96.7084%" y="367.50"></text></g><g><title>glommio::parking::Timers::process_timers (29 samples, 0.59%)</title><rect x="96.5805%" y="341" width="0.5903%" height="15" fill="rgb(219,169,10)"/><text x="96.8305%" y="351.50"></text></g><g><title>std::time::Instant::now (28 samples, 0.57%)</title><rect x="96.6009%" y="325" width="0.5699%" height="15" fill="rgb(244,229,43)"/><text x="96.8509%" y="335.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (28 samples, 0.57%)</title><rect x="96.6009%" y="309" width="0.5699%" height="15" fill="rgb(254,38,20)"/><text x="96.8509%" y="319.50"></text></g><g><title>std::sys::unix::time::inner::now (28 samples, 0.57%)</title><rect x="96.6009%" y="293" width="0.5699%" height="15" fill="rgb(250,47,30)"/><text x="96.8509%" y="303.50"></text></g><g><title>std::sys::unix::cvt (1 samples, 0.02%)</title><rect x="97.1504%" y="277" width="0.0204%" height="15" fill="rgb(224,124,36)"/><text x="97.4004%" y="287.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="97.1504%" y="261" width="0.0204%" height="15" fill="rgb(246,68,51)"/><text x="97.4004%" y="271.50"></text></g><g><title>cq_ring_needs_flush (2 samples, 0.04%)</title><rect x="97.5575%" y="277" width="0.0407%" height="15" fill="rgb(253,43,49)"/><text x="97.8075%" y="287.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (12 samples, 0.24%)</title><rect x="97.5168%" y="309" width="0.2442%" height="15" fill="rgb(219,54,36)"/><text x="97.7668%" y="319.50"></text></g><g><title>io_uring_peek_batch_cqe (12 samples, 0.24%)</title><rect x="97.5168%" y="293" width="0.2442%" height="15" fill="rgb(227,133,34)"/><text x="97.7668%" y="303.50"></text></g><g><title>io_uring_cq_ready (8 samples, 0.16%)</title><rect x="97.5982%" y="277" width="0.1628%" height="15" fill="rgb(247,227,15)"/><text x="97.8482%" y="287.50"></text></g><g><title>cq_ring_needs_flush (1 samples, 0.02%)</title><rect x="97.8425%" y="277" width="0.0204%" height="15" fill="rgb(229,96,14)"/><text x="98.0925%" y="287.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_completion_queue (21 samples, 0.43%)</title><rect x="97.4964%" y="325" width="0.4274%" height="15" fill="rgb(220,79,17)"/><text x="97.7464%" y="335.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (8 samples, 0.16%)</title><rect x="97.7610%" y="309" width="0.1628%" height="15" fill="rgb(205,131,53)"/><text x="98.0110%" y="319.50"></text></g><g><title>io_uring_peek_batch_cqe (6 samples, 0.12%)</title><rect x="97.8018%" y="293" width="0.1221%" height="15" fill="rgb(209,50,29)"/><text x="98.0518%" y="303.50"></text></g><g><title>io_uring_cq_ready (3 samples, 0.06%)</title><rect x="97.8628%" y="277" width="0.0611%" height="15" fill="rgb(245,86,46)"/><text x="98.1128%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="98.5345%" y="309" width="0.0407%" height="15" fill="rgb(235,66,46)"/><text x="98.7845%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::PollRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (1 samples, 0.02%)</title><rect x="98.5752%" y="309" width="0.0204%" height="15" fill="rgb(232,148,31)"/><text x="98.8252%" y="319.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::submit_one_event (2 samples, 0.04%)</title><rect x="98.5956%" y="309" width="0.0407%" height="15" fill="rgb(217,149,8)"/><text x="98.8456%" y="319.50"></text></g><g><title>__sys_io_uring_enter (1 samples, 0.02%)</title><rect x="98.6363%" y="261" width="0.0204%" height="15" fill="rgb(209,183,11)"/><text x="98.8863%" y="271.50"></text></g><g><title>glommio::parking::Reactor::spin_poll_io (141 samples, 2.87%)</title><rect x="95.8885%" y="373" width="2.8699%" height="15" fill="rgb(208,55,20)"/><text x="96.1385%" y="383.50">gl..</text></g><g><title>glommio::sys::uring::Reactor::rush_dispatch (78 samples, 1.59%)</title><rect x="97.1708%" y="357" width="1.5876%" height="15" fill="rgb(218,39,14)"/><text x="97.4208%" y="367.50"></text></g><g><title>glommio::sys::uring::Reactor::simple_poll (76 samples, 1.55%)</title><rect x="97.2115%" y="341" width="1.5469%" height="15" fill="rgb(216,169,33)"/><text x="97.4615%" y="351.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (41 samples, 0.83%)</title><rect x="97.9239%" y="325" width="0.8345%" height="15" fill="rgb(233,80,24)"/><text x="98.1739%" y="335.50"></text></g><g><title>io_uring_submit (6 samples, 0.12%)</title><rect x="98.6363%" y="309" width="0.1221%" height="15" fill="rgb(213,179,31)"/><text x="98.8863%" y="319.50"></text></g><g><title>__io_uring_submit_and_wait (6 samples, 0.12%)</title><rect x="98.6363%" y="293" width="0.1221%" height="15" fill="rgb(209,19,5)"/><text x="98.8863%" y="303.50"></text></g><g><title>__io_uring_submit (6 samples, 0.12%)</title><rect x="98.6363%" y="277" width="0.1221%" height="15" fill="rgb(219,18,35)"/><text x="98.8863%" y="287.50"></text></g><g><title>__sys_io_uring_enter2 (5 samples, 0.10%)</title><rect x="98.6566%" y="261" width="0.1018%" height="15" fill="rgb(209,169,16)"/><text x="98.9066%" y="271.50"></text></g><g><title>syscall (5 samples, 0.10%)</title><rect x="98.6566%" y="245" width="0.1018%" height="15" fill="rgb(245,90,51)"/><text x="98.9066%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::ok (1 samples, 0.02%)</title><rect x="98.7788%" y="309" width="0.0204%" height="15" fill="rgb(220,99,45)"/><text x="99.0288%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::ge (3 samples, 0.06%)</title><rect x="98.8398%" y="293" width="0.0611%" height="15" fill="rgb(249,89,25)"/><text x="99.0898%" y="303.50"></text></g><g><title>core::cmp::PartialOrd::ge (3 samples, 0.06%)</title><rect x="98.8398%" y="277" width="0.0611%" height="15" fill="rgb(239,193,0)"/><text x="99.0898%" y="287.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.06%)</title><rect x="98.8398%" y="261" width="0.0611%" height="15" fill="rgb(231,126,1)"/><text x="99.0898%" y="271.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (3 samples, 0.06%)</title><rect x="98.8398%" y="245" width="0.0611%" height="15" fill="rgb(243,166,3)"/><text x="99.0898%" y="255.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (3 samples, 0.06%)</title><rect x="98.8398%" y="229" width="0.0611%" height="15" fill="rgb(223,22,34)"/><text x="99.0898%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (2 samples, 0.04%)</title><rect x="98.8602%" y="213" width="0.0407%" height="15" fill="rgb(251,52,51)"/><text x="99.1102%" y="223.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (9 samples, 0.18%)</title><rect x="98.7788%" y="357" width="0.1832%" height="15" fill="rgb(221,165,28)"/><text x="99.0288%" y="367.50"></text></g><g><title>std::time::Instant::duration_since (9 samples, 0.18%)</title><rect x="98.7788%" y="341" width="0.1832%" height="15" fill="rgb(218,121,47)"/><text x="99.0288%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::Instant::checked_sub_instant (9 samples, 0.18%)</title><rect x="98.7788%" y="325" width="0.1832%" height="15" fill="rgb(209,120,9)"/><text x="99.0288%" y="335.50"></text></g><g><title>std::sys::unix::time::Timespec::sub_timespec (8 samples, 0.16%)</title><rect x="98.7991%" y="309" width="0.1628%" height="15" fill="rgb(236,68,12)"/><text x="99.0491%" y="319.50"></text></g><g><title>core::time::Duration::new (3 samples, 0.06%)</title><rect x="98.9009%" y="293" width="0.0611%" height="15" fill="rgb(225,194,26)"/><text x="99.1509%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_add (1 samples, 0.02%)</title><rect x="98.9416%" y="277" width="0.0204%" height="15" fill="rgb(231,84,39)"/><text x="99.1916%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (1 samples, 0.02%)</title><rect x="98.9416%" y="261" width="0.0204%" height="15" fill="rgb(210,11,45)"/><text x="99.1916%" y="271.50"></text></g><g><title>std::time::Instant::elapsed (23 samples, 0.47%)</title><rect x="98.7584%" y="373" width="0.4681%" height="15" fill="rgb(224,54,52)"/><text x="99.0084%" y="383.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.26%)</title><rect x="98.9619%" y="357" width="0.2646%" height="15" fill="rgb(238,102,14)"/><text x="99.2119%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.26%)</title><rect x="98.9619%" y="341" width="0.2646%" height="15" fill="rgb(243,160,52)"/><text x="99.2119%" y="351.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.26%)</title><rect x="98.9619%" y="325" width="0.2646%" height="15" fill="rgb(216,114,19)"/><text x="99.2119%" y="335.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.24%)</title><rect x="98.9823%" y="309" width="0.2442%" height="15" fill="rgb(244,166,37)"/><text x="99.2323%" y="319.50"></text></g><g><title>__vdso_clock_gettime (12 samples, 0.24%)</title><rect x="98.9823%" y="293" width="0.2442%" height="15" fill="rgb(246,29,44)"/><text x="99.2323%" y="303.50"></text></g><g><title>[[vdso]] (9 samples, 0.18%)</title><rect x="99.0434%" y="277" width="0.1832%" height="15" fill="rgb(215,56,53)"/><text x="99.2934%" y="287.50"></text></g><g><title>__GI___clone (1,847 samples, 37.59%)</title><rect x="61.9174%" y="549" width="37.5941%" height="15" fill="rgb(217,60,2)"/><text x="62.1674%" y="559.50">__GI___clone</text></g><g><title>start_thread (1,847 samples, 37.59%)</title><rect x="61.9174%" y="533" width="37.5941%" height="15" fill="rgb(207,26,24)"/><text x="62.1674%" y="543.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,847 samples, 37.59%)</title><rect x="61.9174%" y="517" width="37.5941%" height="15" fill="rgb(252,210,15)"/><text x="62.1674%" y="527.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,847 samples, 37.59%)</title><rect x="61.9174%" y="501" width="37.5941%" height="15" fill="rgb(253,209,26)"/><text x="62.1674%" y="511.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::cal..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once (1,847 samples, 37.59%)</title><rect x="61.9174%" y="485" width="37.5941%" height="15" fill="rgb(238,170,14)"/><text x="62.1674%" y="495.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::cal..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,847 samples, 37.59%)</title><rect x="61.9174%" y="469" width="37.5941%" height="15" fill="rgb(216,178,15)"/><text x="62.1674%" y="479.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,846 samples, 37.57%)</title><rect x="61.9377%" y="453" width="37.5738%" height="15" fill="rgb(250,197,2)"/><text x="62.1877%" y="463.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>glommio::executor::LocalExecutorBuilder::spawn::{{closure}} (1,846 samples, 37.57%)</title><rect x="61.9377%" y="437" width="37.5738%" height="15" fill="rgb(212,70,42)"/><text x="62.1877%" y="447.50">glommio::executor::LocalExecutorBuilder::spawn::{{closure}}</text></g><g><title>glommio::executor::LocalExecutor::run (1,826 samples, 37.17%)</title><rect x="62.3448%" y="421" width="37.1667%" height="15" fill="rgb(227,213,9)"/><text x="62.5948%" y="431.50">glommio::executor::LocalExecutor::run</text></g><g><title>scoped_tls::ScopedKey&lt;T&gt;::set (1,826 samples, 37.17%)</title><rect x="62.3448%" y="405" width="37.1667%" height="15" fill="rgb(245,99,25)"/><text x="62.5948%" y="415.50">scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>glommio::executor::LocalExecutor::run::{{closure}} (1,826 samples, 37.17%)</title><rect x="62.3448%" y="389" width="37.1667%" height="15" fill="rgb(250,82,29)"/><text x="62.5948%" y="399.50">glommio::executor::LocalExecutor::run::{{closure}}</text></g><g><title>std::time::Instant::now (14 samples, 0.28%)</title><rect x="99.2265%" y="373" width="0.2850%" height="15" fill="rgb(241,226,54)"/><text x="99.4765%" y="383.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.28%)</title><rect x="99.2265%" y="357" width="0.2850%" height="15" fill="rgb(221,99,41)"/><text x="99.4765%" y="367.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.28%)</title><rect x="99.2265%" y="341" width="0.2850%" height="15" fill="rgb(213,90,21)"/><text x="99.4765%" y="351.50"></text></g><g><title>__clock_gettime_2 (12 samples, 0.24%)</title><rect x="99.2673%" y="325" width="0.2442%" height="15" fill="rgb(205,208,24)"/><text x="99.5173%" y="335.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.22%)</title><rect x="99.2876%" y="309" width="0.2239%" height="15" fill="rgb(246,31,12)"/><text x="99.5376%" y="319.50"></text></g><g><title>[[vdso]] (6 samples, 0.12%)</title><rect x="99.3894%" y="293" width="0.1221%" height="15" fill="rgb(213,154,6)"/><text x="99.6394%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.02%)</title><rect x="99.5115%" y="549" width="0.0204%" height="15" fill="rgb(222,163,29)"/><text x="99.7615%" y="559.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="99.5319%" y="533" width="0.0204%" height="15" fill="rgb(227,201,8)"/><text x="99.7819%" y="543.50"></text></g><g><title>__do_global_dtors_aux_fini_array_entry (2 samples, 0.04%)</title><rect x="99.5319%" y="549" width="0.0407%" height="15" fill="rgb(233,9,32)"/><text x="99.7819%" y="559.50"></text></g><g><title>&lt;glommio::sys::uring::SleepableRing as glommio::sys::uring::UringCommon&gt;::consume_one_event (1 samples, 0.02%)</title><rect x="99.5522%" y="533" width="0.0204%" height="15" fill="rgb(217,54,24)"/><text x="99.8022%" y="543.50"></text></g><g><title>__dso_handle (1 samples, 0.02%)</title><rect x="99.5726%" y="549" width="0.0204%" height="15" fill="rgb(235,192,0)"/><text x="99.8226%" y="559.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (1 samples, 0.02%)</title><rect x="99.5726%" y="533" width="0.0204%" height="15" fill="rgb(235,45,9)"/><text x="99.8226%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.04%)</title><rect x="99.7558%" y="533" width="0.0407%" height="15" fill="rgb(246,42,40)"/><text x="100.0058%" y="543.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.22%)</title><rect x="99.5929%" y="549" width="0.2239%" height="15" fill="rgb(248,111,24)"/><text x="99.8429%" y="559.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_submission_queue (1 samples, 0.02%)</title><rect x="99.7965%" y="533" width="0.0204%" height="15" fill="rgb(249,65,22)"/><text x="100.0465%" y="543.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1 samples, 0.02%)</title><rect x="99.8168%" y="549" width="0.0204%" height="15" fill="rgb(238,111,51)"/><text x="100.0668%" y="559.50"></text></g><g><title>glommio::executor::ExecutorQueues::reevaluate_preempt_timer (4 samples, 0.08%)</title><rect x="99.8372%" y="549" width="0.0814%" height="15" fill="rgb(250,118,22)"/><text x="100.0872%" y="559.50"></text></g><g><title>glommio::parking::Reactor::process_timers (1 samples, 0.02%)</title><rect x="99.9186%" y="549" width="0.0204%" height="15" fill="rgb(234,84,26)"/><text x="100.1686%" y="559.50"></text></g><g><title>glommio::sys::uring::UringCommon::consume_cancellation_queue (1 samples, 0.02%)</title><rect x="99.9389%" y="549" width="0.0204%" height="15" fill="rgb(243,172,12)"/><text x="100.1889%" y="559.50"></text></g><g><title>io_uring_peek_batch_cqe (1 samples, 0.02%)</title><rect x="99.9593%" y="549" width="0.0204%" height="15" fill="rgb(236,150,49)"/><text x="100.2093%" y="559.50"></text></g><g><title>all (4,913 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(225,197,26)"/><text x="0.2500%" y="591.50"></text></g><g><title>unnamed-4 (2,429 samples, 49.44%)</title><rect x="50.5597%" y="565" width="49.4403%" height="15" fill="rgb(214,17,42)"/><text x="50.8097%" y="575.50">unnamed-4</text></g><g><title>io_uring_submit (1 samples, 0.02%)</title><rect x="99.9796%" y="549" width="0.0204%" height="15" fill="rgb(224,165,40)"/><text x="100.2296%" y="559.50"></text></g></svg></svg>